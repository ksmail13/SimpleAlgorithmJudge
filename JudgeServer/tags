!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ALIGNAS	jsoncpp.cpp	2404;"	d	file:
AR	JudgeServer.mk	/^AR       := \/usr\/bin\/ar rcu$/;"	m
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	301;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	304;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
ARCHITECTURE_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	372;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	375;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	378;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	381;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	384;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	387;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	390;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	398;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	401;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	405;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	379;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	382;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	390;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	393;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	396;"	d	file:
ARCHITECTURE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	400;"	d	file:
AS	JudgeServer.mk	/^AS       := \/usr\/bin\/as$/;"	m
ASFLAGS	JudgeServer.mk	/^ASFLAGS  := $/;"	m
ASSERT_ID_DUPKEY	include/mongo/util/assert_util.h	/^    enum { ASSERT_ID_DUPKEY = 11000 };$/;"	e	enum:mongo::__anon2
AbstractMessagingPort	include/mongo/util/net/message_port.h	/^        AbstractMessagingPort() : tag(0), _connectionId(0) {}$/;"	f	class:mongo::AbstractMessagingPort
AbstractMessagingPort	include/mongo/util/net/message_port.h	/^    class AbstractMessagingPort : boost::noncopyable {$/;"	c	namespace:mongo
All	jsoncpp.cpp	/^    All  \/\/\/< Keep all comments.$/;"	e	enum:Json::CommentStyle::Enum	file:
AlreadyInitialized	include/mongo/base/error_codes.h	/^            AlreadyInitialized = 23,$/;"	e	enum:mongo::ErrorCodes::Error
Appender	include/mongo/logger/appender.h	/^    class Appender {$/;"	c	namespace:mongo::logger
AppenderAutoPtr	include/mongo/logger/log_domain.h	/^        typedef std::auto_ptr<EventAppender> AppenderAutoPtr;$/;"	t	class:mongo::logger::LogDomain
AppenderHandle	include/mongo/logger/log_domain.h	/^            AppenderHandle() {}$/;"	f	class:mongo::logger::LogDomain::AppenderHandle
AppenderHandle	include/mongo/logger/log_domain.h	/^            explicit AppenderHandle(size_t index) : _index(index) {}$/;"	f	class:mongo::logger::LogDomain::AppenderHandle
AppenderHandle	include/mongo/logger/log_domain.h	/^        class AppenderHandle {$/;"	c	class:mongo::logger::LogDomain
AppenderVector	include/mongo/logger/log_domain.h	/^        typedef std::vector<EventAppender*> AppenderVector;$/;"	t	class:mongo::logger::LogDomain
ArLibs	JudgeServer.mk	/^ArLibs                 :=  $/;"	m
ArchiveOutputSwitch	JudgeServer.mk	/^ArchiveOutputSwitch    := $/;"	m
Args	json.h	/^  typedef std::vector<PathArgument> Args;$/;"	t	class:Json::Path
Array	include/mongo/bson/bsontypes.h	/^        Array=4,$/;"	e	enum:mongo::BSONType
ArrayIndex	json-forwards.h	/^typedef unsigned int ArrayIndex;$/;"	t	namespace:Json
ArrayIndex	json.h	/^  typedef Json::ArrayIndex ArrayIndex;$/;"	t	class:Json::Value
ArrayIndex	json.h	/^typedef unsigned int ArrayIndex;$/;"	t	namespace:Json
AssertionException	include/mongo/util/assert_util.h	/^        AssertionException( const ExceptionInfo& ei ) : DBException(ei) {}$/;"	f	class:mongo::AssertionException
AssertionException	include/mongo/util/assert_util.h	/^        AssertionException( const char * msg , int code ) : DBException(msg,code) {}$/;"	f	class:mongo::AssertionException
AssertionException	include/mongo/util/assert_util.h	/^        AssertionException( const std::string& msg , int code ) : DBException(msg,code) {}$/;"	f	class:mongo::AssertionException
AssertionException	include/mongo/util/assert_util.h	/^    class MONGO_CLIENT_API AssertionException : public DBException {$/;"	c	namespace:mongo
AtomicIntrinsics	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^    class AtomicIntrinsics {$/;"	c	namespace:mongo
AtomicIntrinsics	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^    class AtomicIntrinsics {$/;"	c	namespace:mongo
AtomicIntrinsics	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^    class AtomicIntrinsics {$/;"	c	namespace:mongo
AtomicIntrinsics	include/mongo/platform/atomic_intrinsics_win32.h	/^    class AtomicIntrinsics {$/;"	c	namespace:mongo
AtomicIntrinsics	include/mongo/platform/atomic_intrinsics_win32.h	/^    class AtomicIntrinsics<T, typename boost::enable_if_c<sizeof(T) == sizeof(LONG)>::type> {$/;"	c	namespace:mongo
AtomicWord	include/mongo/platform/atomic_word_cxx11.h	/^        explicit AtomicWord(WordType value=WordType(0)) : _value(value) {}$/;"	f	class:mongo::AtomicWord
AtomicWord	include/mongo/platform/atomic_word_cxx11.h	/^    class AtomicWord {$/;"	c	namespace:mongo
AtomicWord	include/mongo/platform/atomic_word_intrinsics.h	/^        explicit AtomicWord(WordType value=WordType(0)) : _value(value) {}$/;"	f	class:mongo::AtomicWord
AtomicWord	include/mongo/platform/atomic_word_intrinsics.h	/^    class AtomicWord {$/;"	c	namespace:mongo
AuthSchemaIncompatible	include/mongo/base/error_codes.h	/^            AuthSchemaIncompatible = 69,$/;"	e	enum:mongo::ErrorCodes::Error
AuthenticationFailed	include/mongo/base/error_codes.h	/^            AuthenticationFailed = 18,$/;"	e	enum:mongo::ErrorCodes::Error
BASICSOCKET_H	BasicSocket.h	2;"	d
BSON	include/mongo/bson/bsonmisc.h	69;"	d
BSONArray	include/mongo/bson/bsonobj.h	/^        BSONArray(): BSONObj() {}$/;"	f	struct:mongo::BSONArray
BSONArray	include/mongo/bson/bsonobj.h	/^        explicit BSONArray(const BSONObj& obj): BSONObj(obj) {}$/;"	f	struct:mongo::BSONArray
BSONArray	include/mongo/bson/bsonobj.h	/^    struct BSONArray : BSONObj {$/;"	s	namespace:mongo
BSONArrayBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder( BufBuilder &_b ) : _i(0), _b(_b) {}$/;"	f	class:mongo::BSONArrayBuilder
BSONArrayBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder( int initialSize ) : _i(0), _b(initialSize) {}$/;"	f	class:mongo::BSONArrayBuilder
BSONArrayBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder() : _i(0), _b() {}$/;"	f	class:mongo::BSONArrayBuilder
BSONArrayBuilder	include/mongo/bson/bsonobjbuilder.h	/^    class BSONArrayBuilder : boost::noncopyable {$/;"	c	namespace:mongo
BSONArrayIteratorSorted	include/mongo/bson/bsonobjiterator.h	/^    class BSONArrayIteratorSorted : public BSONIteratorSorted {$/;"	c	namespace:mongo
BSONBinData	include/mongo/bson/bsonmisc.h	/^        BSONBinData(const void* d, int l, BinDataType t) :data(d), length(l), type(t) {}$/;"	f	struct:mongo::BSONBinData
BSONBinData	include/mongo/bson/bsonmisc.h	/^    struct BSONBinData {$/;"	s	namespace:mongo
BSONCode	include/mongo/bson/bsonmisc.h	/^        explicit BSONCode(const StringData& str) :code(str) {}$/;"	f	struct:mongo::BSONCode
BSONCode	include/mongo/bson/bsonmisc.h	/^    struct BSONCode {$/;"	s	namespace:mongo
BSONCodeWScope	include/mongo/bson/bsonmisc.h	/^        explicit BSONCodeWScope(const StringData& str, const BSONObj& obj) :code(str), scope(obj) {}$/;"	f	struct:mongo::BSONCodeWScope
BSONCodeWScope	include/mongo/bson/bsonmisc.h	/^    struct BSONCodeWScope {$/;"	s	namespace:mongo
BSONDBRef	include/mongo/bson/bsonmisc.h	/^        BSONDBRef(const StringData& nameSpace, const OID& o) :ns(nameSpace), oid(o) {}$/;"	f	struct:mongo::BSONDBRef
BSONDBRef	include/mongo/bson/bsonmisc.h	/^    struct BSONDBRef {$/;"	s	namespace:mongo
BSONElement	include/mongo/bson/bsonelement.h	/^        BSONElement(const char* d, int fieldNameSize, FieldNameSizeTag)$/;"	f	class:mongo::BSONElement
BSONElement	include/mongo/bson/bsonelement.h	/^        explicit BSONElement(const char *d) : data(d) {$/;"	f	class:mongo::BSONElement
BSONElement	include/mongo/bson/bsonelement.h	/^        explicit BSONElement(const char *d, int maxLen) : data(d) {$/;"	f	class:mongo::BSONElement
BSONElement	include/mongo/bson/bsonelement.h	/^    class MONGO_CLIENT_API BSONElement {$/;"	c	namespace:mongo
BSONElement	include/mongo/bson/bsonelement.h	/^    inline BSONElement::BSONElement() {$/;"	f	class:mongo::BSONElement
BSONElementCmpWithoutField	include/mongo/bson/bsonmisc.h	/^    struct BSONElementCmpWithoutField {$/;"	s	namespace:mongo
BSONElementMSet	include/mongo/bson/bsonobj.h	/^    typedef std::multiset< BSONElement, BSONElementCmpWithoutField > BSONElementMSet;$/;"	t	namespace:mongo
BSONElementSet	include/mongo/bson/bsonobj.h	/^    typedef std::set< BSONElement, BSONElementCmpWithoutField > BSONElementSet;$/;"	t	namespace:mongo
BSONField	include/mongo/bson/bson_field.h	/^        BSONField(const std::string& name)$/;"	f	class:mongo::BSONField
BSONField	include/mongo/bson/bson_field.h	/^        BSONField(const std::string& name, const T& defaultVal)$/;"	f	class:mongo::BSONField
BSONField	include/mongo/bson/bson_field.h	/^    class BSONField {$/;"	c	namespace:mongo
BSONFieldValue	include/mongo/bson/bson_field.h	/^        BSONFieldValue(const std::string& name, const T& t)$/;"	f	class:mongo::BSONFieldValue
BSONFieldValue	include/mongo/bson/bson_field.h	/^    class BSONFieldValue {$/;"	c	namespace:mongo
BSONForEach	include/mongo/bson/bsonobjiterator.h	163;"	d
BSONIteratorSorted	include/mongo/bson/bsonobjiterator.h	/^    class BSONIteratorSorted {$/;"	c	namespace:mongo
BSONObj	include/mongo/bson/bsonobj.h	/^        BSONObj() {$/;"	f	class:mongo::BSONObj
BSONObj	include/mongo/bson/bsonobj.h	/^        BSONObj(BSONObj&& other)$/;"	f	class:mongo::BSONObj
BSONObj	include/mongo/bson/bsonobj.h	/^        explicit BSONObj(SharedBuffer ownedBuffer)$/;"	f	class:mongo::BSONObj
BSONObj	include/mongo/bson/bsonobj.h	/^        explicit BSONObj(const char *bsonData) {$/;"	f	class:mongo::BSONObj
BSONObj	include/mongo/bson/bsonobj.h	/^    class MONGO_CLIENT_API BSONObj {$/;"	c	namespace:mongo
BSONObjBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder( const BSONSizeTracker & tracker )$/;"	f	class:mongo::BSONObjBuilder
BSONObjBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder(BufBuilder &baseBuilder)$/;"	f	class:mongo::BSONObjBuilder
BSONObjBuilder	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder(int initsize=512)$/;"	f	class:mongo::BSONObjBuilder
BSONObjBuilder	include/mongo/bson/bsonobjbuilder.h	/^    class MONGO_CLIENT_API BSONObjBuilder : boost::noncopyable {$/;"	c	namespace:mongo
BSONObjBuilderValueStream	include/mongo/bson/bsonmisc.h	/^    class MONGO_CLIENT_API BSONObjBuilderValueStream : public boost::noncopyable {$/;"	c	namespace:mongo
BSONObjCmp	include/mongo/bson/bsonmisc.h	/^        BSONObjCmp( const BSONObj &order = BSONObj() ) : _order( order ) {}$/;"	f	class:mongo::BSONObjCmp
BSONObjCmp	include/mongo/bson/bsonmisc.h	/^    class BSONObjCmp {$/;"	c	namespace:mongo
BSONObjIterator	include/mongo/bson/bsonobjiterator.h	/^        BSONObjIterator( const char * start , const char * end ) {$/;"	f	class:mongo::BSONObjIterator
BSONObjIterator	include/mongo/bson/bsonobjiterator.h	/^        BSONObjIterator(const BSONObj& jso) {$/;"	f	class:mongo::BSONObjIterator
BSONObjIterator	include/mongo/bson/bsonobjiterator.h	/^    class BSONObjIterator {$/;"	c	namespace:mongo
BSONObjIteratorSorted	include/mongo/bson/bsonobjiterator.h	/^    class BSONObjIteratorSorted : public BSONIteratorSorted {$/;"	c	namespace:mongo
BSONObjMaxInternalSize	include/mongo/bson/util/builder.h	/^    const int BSONObjMaxInternalSize = BSONObjMaxUserSize + ( 16 * 1024 );$/;"	m	namespace:mongo
BSONObjMaxUserSize	include/mongo/bson/util/builder.h	/^    const int BSONObjMaxUserSize = 16 * 1024 * 1024;$/;"	m	namespace:mongo
BSONObjSet	include/mongo/bson/bsonmisc.h	/^    typedef std::set<BSONObj,BSONObjCmp> BSONObjSet;$/;"	t	namespace:mongo
BSONRegEx	include/mongo/bson/bsonmisc.h	/^        explicit BSONRegEx(const StringData& pat, const StringData& f="") :pattern(pat), flags(f) {}$/;"	f	struct:mongo::BSONRegEx
BSONRegEx	include/mongo/bson/bsonmisc.h	/^    struct BSONRegEx {$/;"	s	namespace:mongo
BSONSizeTracker	include/mongo/bson/bsonmisc.h	/^        BSONSizeTracker() {$/;"	f	class:mongo::BSONSizeTracker
BSONSizeTracker	include/mongo/bson/bsonmisc.h	/^    class BSONSizeTracker {$/;"	c	namespace:mongo
BSONSymbol	include/mongo/bson/bsonmisc.h	/^        explicit BSONSymbol(const StringData& sym) :symbol(sym) {}$/;"	f	struct:mongo::BSONSymbol
BSONSymbol	include/mongo/bson/bsonmisc.h	/^    struct BSONSymbol {$/;"	s	namespace:mongo
BSONType	include/mongo/bson/bsontypes.h	/^    enum BSONType {$/;"	g	namespace:mongo
BSON_ARRAY	include/mongo/bson/bsonmisc.h	76;"	d
BUF_SIZE	InetSocket.h	/^        const static unsigned int BUF_SIZE = 1024;$/;"	m	class:Network::InetSocket
BUF_SIZE	test_client.cc	12;"	d	file:
BackgroundOperationInProgressForDatabase	include/mongo/base/error_codes.h	/^            BackgroundOperationInProgressForDatabase = 12586,$/;"	e	enum:mongo::ErrorCodes::Error
BackgroundOperationInProgressForNamespace	include/mongo/base/error_codes.h	/^            BackgroundOperationInProgressForNamespace = 12587,$/;"	e	enum:mongo::ErrorCodes::Error
Backoff	include/mongo/util/time_support.h	/^        Backoff( int maxSleepMillis, int resetAfter ) :$/;"	f	class:mongo::Backoff
Backoff	include/mongo/util/time_support.h	/^    class Backoff {$/;"	c	namespace:mongo
BadValue	include/mongo/base/error_codes.h	/^            BadValue = 2,$/;"	e	enum:mongo::ErrorCodes::Error
BaseLogMessage	logger.h	14;"	d
BasicSocket	BasicSocket.h	/^            BasicSocket():_fd(-1), _nonblock(false) {};$/;"	f	class:Network::BasicSocket
BasicSocket	BasicSocket.h	/^            BasicSocket(int fd):_fd(fd){};$/;"	f	class:Network::BasicSocket
BasicSocket	BasicSocket.h	/^            BasicSocket(int proto_fam, int socktype, int proto_type):$/;"	f	class:Network::BasicSocket
BasicSocket	BasicSocket.h	/^    class BasicSocket {$/;"	c	namespace:Network
Batch	include/mongo/client/dbclientcursor.h	/^            Batch() : m( new Message() ), nReturned(), pos(), data() { }$/;"	f	class:mongo::DBClientCursor::Batch
Batch	include/mongo/client/dbclientcursor.h	/^        class Batch : boost::noncopyable {$/;"	c	class:mongo::DBClientCursor
BinData	include/mongo/bson/bsontypes.h	/^        BinData=5,$/;"	e	enum:mongo::BSONType
BinDataGeneral	include/mongo/bson/bsontypes.h	/^        BinDataGeneral=0,$/;"	e	enum:mongo::BinDataType
BinDataType	include/mongo/bson/bsontypes.h	/^    enum BinDataType {$/;"	g	namespace:mongo
Bool	include/mongo/bson/bsonelement.h	/^        bool Bool()                 const { return chk(mongo::Bool).boolean(); }$/;"	f	class:mongo::BSONElement
Bool	include/mongo/bson/bsontypes.h	/^        Bool=8,$/;"	e	enum:mongo::BSONType
BoundingBox	include/mongo/geo/boundingbox.h	/^    BoundingBox<TCoordinates>::BoundingBox(const BSONObj& bson) {$/;"	f	class:mongo::geo::BoundingBox
BoundingBox	include/mongo/geo/boundingbox.h	/^    BoundingBox<TCoordinates>::BoundingBox(const TCoordinates& min, const TCoordinates& max)$/;"	f	class:mongo::geo::BoundingBox
BoundingBox	include/mongo/geo/boundingbox.h	/^    class BoundingBox {$/;"	c	namespace:mongo::geo
BoundingBox	include/mongo/geo/namespaces.h	/^    typedef BoundingBox<Coordinates2D> BoundingBox;$/;"	t	namespace:mongo::geo::coords2d
BoundingBox	include/mongo/geo/namespaces.h	/^    typedef BoundingBox<Coordinates2DGeographic> BoundingBox;$/;"	t	namespace:mongo::geo::coords2dgeographic
BufBuilder	include/mongo/bson/util/builder.h	/^    typedef _BufBuilder<TrivialAllocator> BufBuilder;$/;"	t	namespace:mongo
BufferMaxSize	include/mongo/bson/util/builder.h	/^    const int BufferMaxSize = 64 * 1024 * 1024;$/;"	m	namespace:mongo
BuiltStyledStreamWriter	jsoncpp.cpp	/^BuiltStyledStreamWriter::BuiltStyledStreamWriter($/;"	f	class:Json::BuiltStyledStreamWriter
BuiltStyledStreamWriter	jsoncpp.cpp	/^struct BuiltStyledStreamWriter : public StreamWriter$/;"	s	namespace:Json	file:
BulkOperationBuilder	include/mongo/client/bulk_operation_builder.h	/^    class MONGO_CLIENT_API BulkOperationBuilder {$/;"	c	namespace:mongo
BulkUpdateBuilder	include/mongo/client/bulk_update_builder.h	/^    class MONGO_CLIENT_API BulkUpdateBuilder {$/;"	c	namespace:mongo
BulkUpsertBuilder	include/mongo/client/bulk_upsert_builder.h	/^    class MONGO_CLIENT_API BulkUpsertBuilder {$/;"	c	namespace:mongo
ByteArrayDeprecated	include/mongo/bson/bsontypes.h	/^        ByteArrayDeprecated=2, \/* use BinGeneral instead *\/$/;"	e	enum:mongo::BinDataType
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<double> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<float> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<int16_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<int32_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<int64_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<int8_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<uint16_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<uint32_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<uint64_t> {$/;"	s	namespace:mongo::endian
ByteOrderConverter	include/mongo/platform/endian.h	/^    struct ByteOrderConverter<uint8_t> {$/;"	s	namespace:mongo::endian
CC	JudgeServer.mk	/^CC       := \/usr\/bin\/gcc$/;"	m
CCompile	Grading.h	/^    CCompile(std::string path):$/;"	f	class:CCompile
CCompile	Grading.h	/^class CCompile : public Compile {$/;"	c
CFLAGS	JudgeServer.mk	/^CFLAGS   :=  -g -O0 -Wall $(Preprocessors)$/;"	m
CLOSED	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
CMAKE_BINARY_DIR	Makefile	/^CMAKE_BINARY_DIR = \/home\/micky\/Documents\/Coding\/SimpleAlgorithmJudge\/JudgeServer$/;"	m
CMAKE_COMMAND	Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	Makefile	/^CMAKE_SOURCE_DIR = \/home\/micky\/Documents\/Coding\/SimpleAlgorithmJudge\/JudgeServer$/;"	m
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	13;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	160;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	70;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	77;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	12;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	135;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	187;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	18;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	190;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	193;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	49;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	55;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	61;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	75;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	82;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	93;"	d	file:
COMPILER_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	95;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	14;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	150;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	208;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	45;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	57;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	75;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	192;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	135;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	72;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	14;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	156;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	178;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	20;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	30;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	57;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	69;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	77;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	172;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	183;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	192;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	211;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	68;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	78;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	91;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	213;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	230;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	109;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	136;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	26;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	34;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	40;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	106;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	114;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	31;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	45;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	70;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	78;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	99;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	106;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	120;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	134;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	184;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	39;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	47;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	54;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	60;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	69;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	79;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	92;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	99;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	195;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	156;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	17;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	35;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	61;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	81;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	95;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	100;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	121;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	158;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	22;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	40;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	66;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	79;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	86;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	100;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	107;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	114;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	121;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	159;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	174;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	213;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	22;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	232;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	237;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	41;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	48;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	93;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	202;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	227;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	20;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	28;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	206;"	d	file:
COMPILER_VERSION_TWEAK	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONNECT_ERROR	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
CPPTL_JSON_ASSERTIONS_H_INCLUDED	json.h	1960;"	d
CPPTL_JSON_FEATURES_H_INCLUDED	json.h	293;"	d
CPPTL_JSON_H_INCLUDED	json.h	364;"	d
CPPTL_JSON_READER_H_INCLUDED	json.h	1204;"	d
CUSTOM	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	e	enum:mongo::ConnectionString::ConnectionType
CXX	JudgeServer.mk	/^CXX      := \/usr\/bin\/g++$/;"	m
CXXFLAGS	JudgeServer.mk	/^CXXFLAGS :=  -g -O0 -Wall $(Preprocessors)$/;"	m
CZString	json.h	/^  class CZString {$/;"	c	class:Json::Value
CZString	jsoncpp.cpp	/^Value::CZString::CZString(ArrayIndex index) : cstr_(0), index_(index) {}$/;"	f	class:Json::Value::CZString
CZString	jsoncpp.cpp	/^Value::CZString::CZString(char const* str, unsigned length, DuplicationPolicy allocate)$/;"	f	class:Json::Value::CZString
CZString	jsoncpp.cpp	/^Value::CZString::CZString(const CZString& other)$/;"	f	class:Json::Value::CZString
CallbackCanceled	include/mongo/base/error_codes.h	/^            CallbackCanceled = 90,$/;"	e	enum:mongo::ErrorCodes::Error
CannotBackfillArray	include/mongo/base/error_codes.h	/^            CannotBackfillArray = 34,$/;"	e	enum:mongo::ErrorCodes::Error
CannotCreateIndex	include/mongo/base/error_codes.h	/^            CannotCreateIndex = 67,$/;"	e	enum:mongo::ErrorCodes::Error
CannotInitializeNodeWithData	include/mongo/base/error_codes.h	/^            CannotInitializeNodeWithData = 110,$/;"	e	enum:mongo::ErrorCodes::Error
CannotMutateObject	include/mongo/base/error_codes.h	/^            CannotMutateObject = 10,$/;"	e	enum:mongo::ErrorCodes::Error
CannotReuseObject	include/mongo/base/error_codes.h	/^            CannotReuseObject = 19,$/;"	e	enum:mongo::ErrorCodes::Error
CannotSatisfyWriteConcern	include/mongo/base/error_codes.h	/^            CannotSatisfyWriteConcern = 100,$/;"	e	enum:mongo::ErrorCodes::Error
CannotSplit	include/mongo/base/error_codes.h	/^            CannotSplit = 87,$/;"	e	enum:mongo::ErrorCodes::Error
Char	json.h	/^  typedef char Char;$/;"	t	class:Json::Reader
Char	jsoncpp.cpp	/^  typedef char Char;$/;"	t	class:Json::OurReader	file:
CharReader	json.h	/^class JSON_API CharReader {$/;"	c	namespace:Json
CharReaderBuilder	json.h	/^class JSON_API CharReaderBuilder : public CharReader::Factory {$/;"	c	namespace:Json
CharReaderBuilder	jsoncpp.cpp	/^CharReaderBuilder::CharReaderBuilder()$/;"	f	class:Json::CharReaderBuilder
CharReaderPtr	jsoncpp.cpp	/^typedef std::unique_ptr<CharReader> CharReaderPtr;$/;"	t	namespace:Json	file:
ChildValues	json.h	/^  typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledStreamWriter
ChildValues	json.h	/^  typedef std::vector<std::string> ChildValues;$/;"	t	class:Json::StyledWriter
ChildValues	jsoncpp.cpp	/^  typedef std::vector<std::string> ChildValues;$/;"	t	struct:Json::BuiltStyledStreamWriter	file:
Code	include/mongo/bson/bsontypes.h	/^        Code=13,$/;"	e	enum:mongo::BSONType
CodeLiteDir	JudgeServer.mk	/^CodeLiteDir:=\/usr\/share\/codelite$/;"	m
CodeLitePath	JudgeServer.mk	/^CodeLitePath           :="\/home\/micky\/.codelite"$/;"	m
CodeWScope	include/mongo/bson/bsontypes.h	/^        CodeWScope=15,$/;"	e	enum:mongo::BSONType
CommandNotFound	include/mongo/base/error_codes.h	/^            CommandNotFound = 59,$/;"	e	enum:mongo::ErrorCodes::Error
CommandNotSupported	include/mongo/base/error_codes.h	/^            CommandNotSupported = 115,$/;"	e	enum:mongo::ErrorCodes::Error
CommandResultSchemaViolation	include/mongo/base/error_codes.h	/^            CommandResultSchemaViolation = 78,$/;"	e	enum:mongo::ErrorCodes::Error
CommentInfo	json.h	/^  struct CommentInfo {$/;"	s	class:Json::Value
CommentInfo	jsoncpp.cpp	/^Value::CommentInfo::CommentInfo() : comment_(0) {}$/;"	f	class:Json::Value::CommentInfo
CommentPlacement	json.h	/^enum CommentPlacement {$/;"	g	namespace:Json
CommentStyle	jsoncpp.cpp	/^struct CommentStyle {$/;"	s	namespace:Json	file:
CommonErrorCodes	include/mongo/util/assert_util.h	/^    enum CommonErrorCodes {$/;"	g	namespace:mongo
Compile	Grading.h	/^class Compile {$/;"	c
ComponentMessageLogDomain	include/mongo/logger/component_message_log_domain.h	/^    class MONGO_CLIENT_API ComponentMessageLogDomain : public MessageLogDomain {$/;"	c	namespace:mongo::logger
ConfigurationInProgress	include/mongo/base/error_codes.h	/^            ConfigurationInProgress = 109,$/;"	e	enum:mongo::ErrorCodes::Error
ConfigurationName	JudgeServer.mk	/^ConfigurationName      :=Debug$/;"	m
ConflictingOperationInProgress	include/mongo/base/error_codes.h	/^            ConflictingOperationInProgress = 117,$/;"	e	enum:mongo::ErrorCodes::Error
ConflictingUpdateOperators	include/mongo/base/error_codes.h	/^            ConflictingUpdateOperators = 40,$/;"	e	enum:mongo::ErrorCodes::Error
ConnectException	include/mongo/client/dbclientinterface.h	/^        ConnectException(std::string msg) : UserException(9000,msg) { }$/;"	f	class:mongo::ConnectException
ConnectException	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API ConnectException : public UserException {$/;"	c	namespace:mongo
ConnectionHook	include/mongo/client/dbclientinterface.h	/^        class ConnectionHook {$/;"	c	class:mongo::ConnectionString
ConnectionIdSequence	include/mongo/client/dbclientinterface.h	/^        static AtomicInt64 ConnectionIdSequence;$/;"	m	class:mongo::DBClientBase
ConnectionString	include/mongo/client/dbclientinterface.h	/^        ConnectionString( ConnectionType type , const std::string& s , const std::string& setName = "" ) {$/;"	f	class:mongo::ConnectionString
ConnectionString	include/mongo/client/dbclientinterface.h	/^        ConnectionString( ConnectionType type,$/;"	f	class:mongo::ConnectionString
ConnectionString	include/mongo/client/dbclientinterface.h	/^        ConnectionString( const HostAndPort& server ) {$/;"	f	class:mongo::ConnectionString
ConnectionString	include/mongo/client/dbclientinterface.h	/^        ConnectionString( const std::string& s , ConnectionType favoredMultipleType ) {$/;"	f	class:mongo::ConnectionString
ConnectionString	include/mongo/client/dbclientinterface.h	/^        ConnectionString() {$/;"	f	class:mongo::ConnectionString
ConnectionString	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API ConnectionString {$/;"	c	namespace:mongo
ConnectionType	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	g	class:mongo::ConnectionString
ConstDataCursor	include/mongo/base/data_cursor.h	/^        ConstDataCursor(ConstDataView::bytes_type bytes)$/;"	f	class:mongo::ConstDataCursor
ConstDataCursor	include/mongo/base/data_cursor.h	/^    class ConstDataCursor : public ConstDataView {$/;"	c	namespace:mongo
ConstDataView	include/mongo/base/data_view.h	/^        ConstDataView(bytes_type bytes)$/;"	f	class:mongo::ConstDataView
ConstDataView	include/mongo/base/data_view.h	/^    class ConstDataView {$/;"	c	namespace:mongo
ConstView	include/mongo/util/net/message.h	/^            ConstView(const char* data) : _data(data) { }$/;"	f	class:mongo::MSGHEADER::ConstView
ConstView	include/mongo/util/net/message.h	/^            ConstView(const char* storage) : _storage(storage) { }$/;"	f	class:mongo::MsgData::ConstView
ConstView	include/mongo/util/net/message.h	/^        class ConstView {$/;"	c	namespace:mongo::MSGHEADER
ConstView	include/mongo/util/net/message.h	/^        class ConstView {$/;"	c	namespace:mongo::MsgData
Coordinates	include/mongo/geo/coordinates.h	/^    class MONGO_CLIENT_API Coordinates {$/;"	c	namespace:mongo::geo
Coordinates2D	include/mongo/geo/coordinates2d.h	/^        Coordinates2D() : _x(0), _y(0) {}$/;"	f	class:mongo::geo::Coordinates2D
Coordinates2D	include/mongo/geo/coordinates2d.h	/^        Coordinates2D(double x, double y) : _x(x), _y(y) {}$/;"	f	class:mongo::geo::Coordinates2D
Coordinates2D	include/mongo/geo/coordinates2d.h	/^    class MONGO_CLIENT_API Coordinates2D : public Coordinates {$/;"	c	namespace:mongo::geo
Coordinates2DGeographic	include/mongo/geo/coordinates2dgeographic.h	/^        Coordinates2DGeographic() : _longitude(0), _latitude(0) {}$/;"	f	class:mongo::geo::Coordinates2DGeographic
Coordinates2DGeographic	include/mongo/geo/coordinates2dgeographic.h	/^    class MONGO_CLIENT_API Coordinates2DGeographic : public Coordinates {$/;"	c	namespace:mongo::geo
CurrentFileFullPath	JudgeServer.mk	/^CurrentFileFullPath    :=$/;"	m
CurrentFileName	JudgeServer.mk	/^CurrentFileName        :=$/;"	m
CurrentFilePath	JudgeServer.mk	/^CurrentFilePath        :=$/;"	m
CursorNotFound	include/mongo/base/error_codes.h	/^            CursorNotFound = 43,$/;"	e	enum:mongo::ErrorCodes::Error
DBClientBase	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientBase : public DBClientWithCommands, public DBConnector {$/;"	c	namespace:mongo
DBClientBase	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientBase;$/;"	m	namespace:mongo	typeref:class:mongo::MONGO_CLIENT_API
DBClientConnection	include/mongo/client/dbclientinterface.h	/^        DBClientConnection(bool _autoReconnect=false, DBClientReplicaSet* cp=0, double so_timeout=0) :$/;"	f	class:mongo::DBClientConnection
DBClientConnection	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientConnection : public DBClientBase {$/;"	c	namespace:mongo
DBClientConnection	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientConnection;$/;"	m	namespace:mongo	typeref:class:mongo::MONGO_CLIENT_API
DBClientCursor	include/mongo/client/dbclientcursor.h	/^    class MONGO_CLIENT_API DBClientCursor : public DBClientCursorInterface {$/;"	c	namespace:mongo
DBClientCursorBatchIterator	include/mongo/client/dbclientcursor.h	/^        DBClientCursorBatchIterator( DBClientCursor &c ) : _c( c ), _n() {}$/;"	f	class:mongo::DBClientCursorBatchIterator
DBClientCursorBatchIterator	include/mongo/client/dbclientcursor.h	/^    class MONGO_CLIENT_API DBClientCursorBatchIterator {$/;"	c	namespace:mongo
DBClientCursorInterface	include/mongo/client/dbclientcursor.h	/^        DBClientCursorInterface() {}$/;"	f	class:mongo::DBClientCursorInterface
DBClientCursorInterface	include/mongo/client/dbclientcursor.h	/^    class MONGO_CLIENT_API DBClientCursorInterface : boost::noncopyable {$/;"	c	namespace:mongo
DBClientInterface	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientInterface : boost::noncopyable {$/;"	c	namespace:mongo
DBClientReplicaSet	include/mongo/client/dbclient_rs.h	/^    class MONGO_CLIENT_API DBClientReplicaSet : public DBClientBase {$/;"	c	namespace:mongo
DBClientWithCommands	include/mongo/client/dbclientinterface.h	/^        DBClientWithCommands() : _logLevel(logger::LogSeverity::Log()),$/;"	f	class:mongo::DBClientWithCommands
DBClientWithCommands	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBClientWithCommands : public DBClientInterface {$/;"	c	namespace:mongo
DBConnector	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API DBConnector {$/;"	c	namespace:mongo
DBException	include/mongo/util/assert_util.h	/^        DBException( const ExceptionInfo& ei ) : _ei(ei) {}$/;"	f	class:mongo::DBException
DBException	include/mongo/util/assert_util.h	/^        DBException( const char * msg , int code ) : _ei(msg,code) {}$/;"	f	class:mongo::DBException
DBException	include/mongo/util/assert_util.h	/^        DBException( const std::string& msg , int code ) : _ei(msg,code) {}$/;"	f	class:mongo::DBException
DBException	include/mongo/util/assert_util.h	/^    class MONGO_CLIENT_API DBException : public std::exception {$/;"	c	namespace:mongo
DBPathInUse	include/mongo/base/error_codes.h	/^            DBPathInUse = 98,$/;"	e	enum:mongo::ErrorCodes::Error
DBRef	include/mongo/bson/bsontypes.h	/^        DBRef=12,$/;"	e	enum:mongo::BSONType
DEC	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	324;"	d	file:
DEC	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
DEC	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
DEC	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
DESTRUCTOR_GUARD	include/mongo/client/redef_macros.h	62;"	d
DESTRUCTOR_GUARD	include/mongo/client/redef_macros.h	63;"	d
DESTRUCTOR_GUARD	include/mongo/client/undef_macros.h	49;"	d
DESTRUCTOR_GUARD	include/mongo/util/assert_util.h	304;"	d
DataCursor	include/mongo/base/data_cursor.h	/^        DataCursor(DataView::bytes_type bytes)$/;"	f	class:mongo::DataCursor
DataCursor	include/mongo/base/data_cursor.h	/^    class DataCursor : public DataView {$/;"	c	namespace:mongo
DataView	include/mongo/base/data_view.h	/^        DataView(bytes_type bytes)$/;"	f	class:mongo::DataView
DataView	include/mongo/base/data_view.h	/^    class DataView : public ConstDataView {$/;"	c	namespace:mongo
DatabaseDifferCaseCode	include/mongo/util/assert_util.h	/^        DatabaseDifferCaseCode = 13297 ,  \/\/ uassert( 13297 )$/;"	e	enum:mongo::CommonErrorCodes
DatabaseNotFound	include/mongo/base/error_codes.h	/^            DatabaseNotFound = 60,$/;"	e	enum:mongo::ErrorCodes::Error
Date	JudgeServer.mk	/^Date                   :=20\/05\/15$/;"	m
Date	include/mongo/bson/bsonelement.h	/^        Date_t Date()               const { return chk(mongo::Date).date(); }$/;"	f	class:mongo::BSONElement
Date	include/mongo/bson/bsontypes.h	/^        Date=9,$/;"	e	enum:mongo::BSONType
DateNowLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API DateNowLabeler { };$/;"	s	namespace:mongo
Date_t	include/mongo/util/time_support.h	/^        Date_t(): millis(0) {}$/;"	f	struct:mongo::Date_t
Date_t	include/mongo/util/time_support.h	/^        Date_t(unsigned long long m): millis(m) {}$/;"	f	struct:mongo::Date_t
Date_t	include/mongo/util/time_support.h	/^    struct MONGO_CLIENT_API Date_t {$/;"	s	namespace:mongo
Debug	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Debug(int debugLevel) { return LogSeverity(debugLevel); }$/;"	f	class:mongo::logger::LogSeverity
DebugSwitch	JudgeServer.mk	/^DebugSwitch            :=-g $/;"	m
DefaultPorts	include/mongo/client/options.h	/^        enum DefaultPorts {$/;"	g	class:mongo::client::Options
DependSuffix	JudgeServer.mk	/^DependSuffix           :=.o.d$/;"	m
DistributedClockSkewed	include/mongo/base/error_codes.h	/^            DistributedClockSkewed = 106,$/;"	e	enum:mongo::ErrorCodes::Error
DocTooLargeForCapped	include/mongo/base/error_codes.h	/^            DocTooLargeForCapped = 116,$/;"	e	enum:mongo::ErrorCodes::Error
DollarPrefixedFieldName	include/mongo/base/error_codes.h	/^            DollarPrefixedFieldName = 52,$/;"	e	enum:mongo::ErrorCodes::Error
DomainsByNameMap	include/mongo/logger/log_manager.h	/^        typedef unordered_map<std::string, MessageLogDomain*> DomainsByNameMap;$/;"	t	class:mongo::logger::LogManager
DottedFieldName	include/mongo/base/error_codes.h	/^            DottedFieldName = 57,$/;"	e	enum:mongo::ErrorCodes::Error
Double	include/mongo/bson/bsonelement.h	/^        double Double()             const { return chk(NumberDouble)._numberDouble(); }$/;"	f	class:mongo::BSONElement
DuplicateKey	include/mongo/base/error_codes.h	/^            DuplicateKey = 11000,$/;"	e	enum:mongo::ErrorCodes::Error
DuplicateKeyValue	include/mongo/base/error_codes.h	/^            DuplicateKeyValue = 84,$/;"	e	enum:mongo::ErrorCodes::Error
DuplicationPolicy	json.h	/^    enum DuplicationPolicy {$/;"	g	class:Json::Value::CZString
EOO	include/mongo/bson/bsontypes.h	/^        EOO=0,$/;"	e	enum:mongo::BSONType
EQUALS	Makefile	/^EQUALS = =$/;"	m
EmptyArrayOperation	include/mongo/base/error_codes.h	/^            EmptyArrayOperation = 21,$/;"	e	enum:mongo::ErrorCodes::Error
EmptyFieldName	include/mongo/base/error_codes.h	/^            EmptyFieldName = 56,$/;"	e	enum:mongo::ErrorCodes::Error
EncodedValueStorage	include/mongo/base/encoded_value_storage.h	/^        EncodedValueStorage() {$/;"	f	class:mongo::EncodedValueStorage
EncodedValueStorage	include/mongo/base/encoded_value_storage.h	/^        explicit EncodedValueStorage(ZeroInitTag_t) {$/;"	f	class:mongo::EncodedValueStorage
EncodedValueStorage	include/mongo/base/encoded_value_storage.h	/^    class EncodedValueStorage {$/;"	c	namespace:mongo
Enum	jsoncpp.cpp	/^  enum Enum {$/;"	g	struct:Json::CommentStyle	file:
EpollDescriptor	PollManager.h	/^typedef int EpollDescriptor;$/;"	t
Equality	include/mongo/bson/bsonobj.h	/^            Equality = 0,$/;"	e	enum:mongo::BSONObj::MatchType
Error	include/mongo/base/error_codes.h	/^        enum Error {$/;"	g	class:mongo::ErrorCodes
Error	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Error() { return LogSeverity(-3); }$/;"	f	class:mongo::logger::LogSeverity
ErrorCodes	include/mongo/base/error_codes.h	/^    class MONGO_CLIENT_API ErrorCodes {$/;"	c	namespace:mongo
ErrorInfo	include/mongo/base/status.h	/^        struct ErrorInfo {$/;"	s	class:mongo::Status
ErrorInfo	json.h	/^  class ErrorInfo {$/;"	c	class:Json::Reader
ErrorInfo	jsoncpp.cpp	/^  class ErrorInfo {$/;"	c	class:Json::OurReader	file:
ErrorMessage	logger.h	19;"	d
ErrorMsg	include/mongo/util/assert_util.h	/^    class MONGO_CLIENT_API ErrorMsg {$/;"	c	namespace:mongo
Errors	json.h	/^  typedef std::deque<ErrorInfo> Errors;$/;"	t	class:Json::Reader
Errors	jsoncpp.cpp	/^  typedef std::deque<ErrorInfo> Errors;$/;"	t	class:Json::OurReader	file:
Event	include/mongo/logger/appender.h	/^        typedef E Event;$/;"	t	class:mongo::logger::Appender
Event	include/mongo/logger/log_domain.h	/^        typedef E Event;$/;"	t	class:mongo::logger::LogDomain
EventAppender	include/mongo/logger/log_domain.h	/^        typedef Appender<Event> EventAppender;$/;"	t	class:mongo::logger::LogDomain
ExceededTimeLimit	include/mongo/base/error_codes.h	/^            ExceededTimeLimit = 50,$/;"	e	enum:mongo::ErrorCodes::Error
Exception	json.h	/^class JSON_API Exception;$/;"	m	namespace:Json	typeref:class:Json::JSON_API
Exception	jsoncpp.cpp	/^Exception::Exception(std::string const& msg)$/;"	f	class:Json::Exception
Exception	jsoncpp.cpp	/^class JSON_API Exception : public std::exception {$/;"	c	namespace:Json	file:
ExceptionInfo	include/mongo/util/assert_util.h	/^        ExceptionInfo( const char * m , int c )$/;"	f	struct:mongo::ExceptionInfo
ExceptionInfo	include/mongo/util/assert_util.h	/^        ExceptionInfo( const std::string& m , int c )$/;"	f	struct:mongo::ExceptionInfo
ExceptionInfo	include/mongo/util/assert_util.h	/^        ExceptionInfo() : msg(""),code(-1) {}$/;"	f	struct:mongo::ExceptionInfo
ExceptionInfo	include/mongo/util/assert_util.h	/^    struct MONGO_CLIENT_API ExceptionInfo {$/;"	s	namespace:mongo
FAILED_STATE	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
Factory	json.h	/^  class Factory {$/;"	c	class:Json::CharReader
Factory	json.h	/^  class JSON_API Factory {$/;"	c	class:Json::StreamWriter
FailedToParse	include/mongo/base/error_codes.h	/^            FailedToParse = 9,$/;"	e	enum:mongo::ErrorCodes::Error
FastWriter	json.h	/^class JSON_API FastWriter : public Writer {$/;"	c	namespace:Json
FastWriter	jsoncpp.cpp	/^FastWriter::FastWriter()$/;"	f	class:Json::FastWriter
Features	json.h	/^class JSON_API Features {$/;"	c	namespace:Json
Features	jsoncpp.cpp	/^Features::Features()$/;"	f	class:Json::Features
FieldCompareResult	include/mongo/bson/bsonmisc.h	/^    enum FieldCompareResult {$/;"	g	namespace:mongo
FieldNameSizeTag	include/mongo/bson/bsonelement.h	/^        struct FieldNameSizeTag {}; \/\/ For disambiguation with ctor taking 'maxLen' above.$/;"	s	class:mongo::BSONElement
FileAlreadyOpen	include/mongo/base/error_codes.h	/^            FileAlreadyOpen = 41,$/;"	e	enum:mongo::ErrorCodes::Error
FileDescriptor	BasicSocket.h	/^typedef int FileDescriptor;$/;"	t
FileNotOpen	include/mongo/base/error_codes.h	/^            FileNotOpen = 38,$/;"	e	enum:mongo::ErrorCodes::Error
FileRenameFailed	include/mongo/base/error_codes.h	/^            FileRenameFailed = 37,$/;"	e	enum:mongo::ErrorCodes::Error
FileStreamFailed	include/mongo/base/error_codes.h	/^            FileStreamFailed = 39,$/;"	e	enum:mongo::ErrorCodes::Error
Free	include/mongo/bson/util/builder.h	/^        void Free(void *p) { $/;"	f	class:mongo::StackAllocator
Free	include/mongo/bson/util/builder.h	/^        void Free(void *p) { free(p); }$/;"	f	class:mongo::TrivialAllocator
Function	include/mongo/bson/bsontypes.h	/^        Function=1,$/;"	e	enum:mongo::BinDataType
GENOIDLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API GENOIDLabeler { };$/;"	s	namespace:mongo
GEOQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj GEOQUERY(const char* op, const GeoObj<TCoordinates>& geoObj) {$/;"	f	namespace:mongo::geo
GT	include/mongo/bson/bsonobj.h	/^            GT = 0x4,$/;"	e	enum:mongo::BSONObj::MatchType
GTE	include/mongo/bson/bsonobj.h	/^            GTE = 0x6,$/;"	e	enum:mongo::BSONObj::MatchType
GeoObj	include/mongo/geo/geoobj.h	/^    class GeoObj {$/;"	c	namespace:mongo::geo
GeoObj	include/mongo/geo/namespaces.h	/^    typedef GeoObj<Coordinates2D> GeoObj;$/;"	t	namespace:mongo::geo::coords2d
GeoObj	include/mongo/geo/namespaces.h	/^    typedef GeoObj<Coordinates2DGeographic> GeoObj;$/;"	t	namespace:mongo::geo::coords2dgeographic
GeoObjType	include/mongo/geo/constants.h	/^    enum GeoObjType {$/;"	g	namespace:mongo::geo
GeoObjType_GeometryCollection	include/mongo/geo/constants.h	/^        GeoObjType_GeometryCollection,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_LineString	include/mongo/geo/constants.h	/^        GeoObjType_LineString,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_MultiLineString	include/mongo/geo/constants.h	/^        GeoObjType_MultiLineString,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_MultiPoint	include/mongo/geo/constants.h	/^        GeoObjType_MultiPoint,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_MultiPolygon	include/mongo/geo/constants.h	/^        GeoObjType_MultiPolygon,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_Point	include/mongo/geo/constants.h	/^        GeoObjType_Point,$/;"	e	enum:mongo::geo::GeoObjType
GeoObjType_Polygon	include/mongo/geo/constants.h	/^        GeoObjType_Polygon$/;"	e	enum:mongo::geo::GeoObjType
Geometry	include/mongo/geo/geometry.h	/^    class Geometry : public GeoObj<TCoordinates> {$/;"	c	namespace:mongo::geo
Geometry	include/mongo/geo/namespaces.h	/^    typedef Geometry<Coordinates2D> Geometry;$/;"	t	namespace:mongo::geo::coords2d
Geometry	include/mongo/geo/namespaces.h	/^    typedef Geometry<Coordinates2DGeographic> Geometry;$/;"	t	namespace:mongo::geo::coords2dgeographic
GeometryCollection	include/mongo/geo/geometrycollection.h	/^    GeometryCollection<TCoordinates>::GeometryCollection(const BSONObj& bson)$/;"	f	class:mongo::geo::GeometryCollection
GeometryCollection	include/mongo/geo/geometrycollection.h	/^    class GeometryCollection : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
GeometryCollection	include/mongo/geo/namespaces.h	/^    typedef GeometryCollection<Coordinates2D> GeometryCollection;$/;"	t	namespace:mongo::geo::coords2d
GeometryCollection	include/mongo/geo/namespaces.h	/^    typedef GeometryCollection<Coordinates2DGeographic> GeometryCollection;$/;"	t	namespace:mongo::geo::coords2dgeographic
GlobalInstance	include/mongo/client/init.h	/^    class MONGO_CLIENT_API GlobalInstance {$/;"	c	namespace:mongo::client
Grading	Grading.cpp	/^Grading::Grading()$/;"	f	class:Grading
Grading	Grading.cpp	/^Grading::Grading(question q, std::string codePath, std::string answer):$/;"	f	class:Grading
Grading	Grading.h	/^class Grading {$/;"	c
GraphContainsCycle	include/mongo/base/error_codes.h	/^            GraphContainsCycle = 5,$/;"	e	enum:mongo::ErrorCodes::Error
GridFS	include/mongo/client/gridfs.h	/^    class MONGO_CLIENT_API GridFS {$/;"	c	namespace:mongo
GridFSChunk	include/mongo/client/gridfs.h	/^    class MONGO_CLIENT_API GridFSChunk {$/;"	c	namespace:mongo
GridFile	include/mongo/client/gridfs.h	/^    class MONGO_CLIENT_API GridFile {$/;"	c	namespace:mongo
GridFileBuilder	include/mongo/client/gridfs.h	/^    class GridFileBuilder {$/;"	c	namespace:mongo
HEX	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
HEX	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
HEX	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
HEX	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	415;"	d	file:
Hasher	include/mongo/base/string_data.h	/^        struct Hasher {$/;"	s	class:mongo::StringData
Hasher	include/mongo/bson/bsonelement.h	/^        struct Hasher {$/;"	s	class:mongo::BSONElement
Hasher	include/mongo/bson/bsonobj.h	/^        struct Hasher {$/;"	s	class:mongo::BSONObj
Hasher	include/mongo/bson/oid.h	/^        struct Hasher {$/;"	s	class:mongo::OID
Holder	include/mongo/bson/bsonobj.h	/^        typedef SharedBuffer::Holder Holder;$/;"	t	class:mongo::BSONObj
Holder	include/mongo/util/shared_buffer.h	/^            explicit Holder(AtomicUInt32::WordType initial = AtomicUInt32::WordType())$/;"	f	class:mongo::SharedBuffer::Holder
Holder	include/mongo/util/shared_buffer.h	/^        class Holder {$/;"	c	class:mongo::SharedBuffer
HostAndPort	include/mongo/util/net/hostandport.h	/^    struct MONGO_CLIENT_API HostAndPort {$/;"	s	namespace:mongo
HostNotFound	include/mongo/base/error_codes.h	/^            HostNotFound = 7,$/;"	e	enum:mongo::ErrorCodes::Error
HostUnreachable	include/mongo/base/error_codes.h	/^            HostUnreachable = 6,$/;"	e	enum:mongo::ErrorCodes::Error
ID_VOID_MAIN	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	9;"	d	file:
ID_VOID_MAIN	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
INETSOCKET_H	InetSocket.h	2;"	d
INTERSECTSQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj INTERSECTSQUERY(const GeoObj<TCoordinates>& geoObj) {$/;"	f	namespace:mongo::geo
INVALID	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	e	enum:mongo::ConnectionString::ConnectionType
INVALID_SOCKET	include/mongo/util/net/sock.h	/^    const int INVALID_SOCKET = -1;$/;"	m	namespace:mongo
INVALID_SOCK_CREATION_TIME	include/mongo/client/dbclientinterface.h	/^        static const uint64_t INVALID_SOCK_CREATION_TIME;$/;"	m	class:mongo::DBClientBase
IllegalOperation	include/mongo/base/error_codes.h	/^            IllegalOperation = 20,$/;"	e	enum:mongo::ErrorCodes::Error
ImmutableField	include/mongo/base/error_codes.h	/^            ImmutableField = 66,$/;"	e	enum:mongo::ErrorCodes::Error
InArgs	json.h	/^  typedef std::vector<const PathArgument*> InArgs;$/;"	t	class:Json::Path
InRange	jsoncpp.cpp	/^static inline bool InRange(double d, T min, U max) {$/;"	f	namespace:Json
IncludePCH	JudgeServer.mk	/^IncludePCH             := $/;"	m
IncludePath	JudgeServer.mk	/^IncludePath            :=  $(IncludeSwitch). $(IncludeSwitch). $/;"	m
IncludeSwitch	JudgeServer.mk	/^IncludeSwitch          :=-I$/;"	m
IncompatibleAuditMetadata	include/mongo/base/error_codes.h	/^            IncompatibleAuditMetadata = 102,$/;"	e	enum:mongo::ErrorCodes::Error
IncompatibleShardingMetadata	include/mongo/base/error_codes.h	/^            IncompatibleShardingMetadata = 105,$/;"	e	enum:mongo::ErrorCodes::Error
InconsistentReplicaSetNames	include/mongo/base/error_codes.h	/^            InconsistentReplicaSetNames = 108,$/;"	e	enum:mongo::ErrorCodes::Error
Increment	include/mongo/bson/oid.h	/^        struct Increment {$/;"	s	class:mongo::OID
IndexAlreadyExists	include/mongo/base/error_codes.h	/^            IndexAlreadyExists = 68,$/;"	e	enum:mongo::ErrorCodes::Error
IndexKeySpecsConflict	include/mongo/base/error_codes.h	/^            IndexKeySpecsConflict = 86,$/;"	e	enum:mongo::ErrorCodes::Error
IndexNotFound	include/mongo/base/error_codes.h	/^            IndexNotFound = 27,$/;"	e	enum:mongo::ErrorCodes::Error
IndexOptionsConflict	include/mongo/base/error_codes.h	/^            IndexOptionsConflict = 85,$/;"	e	enum:mongo::ErrorCodes::Error
IndexSpec	include/mongo/client/index_spec.h	/^    class MONGO_CLIENT_API IndexSpec {$/;"	c	namespace:mongo
IndexType	include/mongo/client/index_spec.h	/^        enum IndexType {$/;"	g	class:mongo::IndexSpec
InetSocket	InetSocket.h	/^        InetSocket() {}$/;"	f	class:Network::InetSocket
InetSocket	InetSocket.h	/^        InetSocket(FileDescriptor fd) : BasicSocket(fd) {}$/;"	f	class:Network::InetSocket
InetSocket	InetSocket.h	/^        InetSocket(int socktype, int proto_type):$/;"	f	class:Network::InetSocket
InetSocket	InetSocket.h	/^    class InetSocket : public BasicSocket$/;"	c	namespace:Network
Info	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Info() { return LogSeverity(-1); }$/;"	f	class:mongo::logger::LogSeverity
InformMessage	logger.h	17;"	d
InitialSyncFailure	include/mongo/base/error_codes.h	/^            InitialSyncFailure = 113,$/;"	e	enum:mongo::ErrorCodes::Error
InitialSyncOplogSourceMissing	include/mongo/base/error_codes.h	/^            InitialSyncOplogSourceMissing = 114,$/;"	e	enum:mongo::ErrorCodes::Error
InsertOption_ContinueOnError	include/mongo/client/write_options.h	/^        InsertOption_ContinueOnError = 1 << 0$/;"	e	enum:mongo::InsertOptions
InsertOptions	include/mongo/client/write_options.h	/^    enum InsertOptions {$/;"	g	namespace:mongo
InstanceUnique	include/mongo/bson/oid.h	/^        struct InstanceUnique {$/;"	s	class:mongo::OID
Int	include/mongo/bson/bsonelement.h	/^        int Int()                   const { return chk(NumberInt)._numberInt(); }$/;"	f	class:mongo::BSONElement
Int	json-forwards.h	/^typedef int Int;$/;"	t	namespace:Json
Int	json.h	/^  typedef Json::Int Int;$/;"	t	class:Json::Value
Int	json.h	/^typedef int Int;$/;"	t	namespace:Json
Int64	json-forwards.h	/^typedef __int64 Int64;$/;"	t	namespace:Json
Int64	json-forwards.h	/^typedef long long int Int64;$/;"	t	namespace:Json
Int64	json.h	/^  typedef Json::Int64 Int64;$/;"	t	class:Json::Value
Int64	json.h	/^typedef __int64 Int64;$/;"	t	namespace:Json
Int64	json.h	/^typedef long long int Int64;$/;"	t	namespace:Json
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap {$/;"	s	namespace:mongo::endian
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap<char> {$/;"	s	namespace:mongo::endian
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap<long long> {$/;"	s	namespace:mongo::endian
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap<signed char> {$/;"	s	namespace:mongo::endian
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap<unsigned char> {$/;"	s	namespace:mongo::endian
IntegralTypeMap	include/mongo/platform/endian.h	/^    struct IntegralTypeMap<unsigned long long> {$/;"	s	namespace:mongo::endian
InterlockedImpl64	include/mongo/platform/atomic_intrinsics_win32.h	/^        struct InterlockedImpl64<T, false> {$/;"	s	namespace:mongo::details
InterlockedImpl64	include/mongo/platform/atomic_intrinsics_win32.h	/^        struct InterlockedImpl64<T, true> {$/;"	s	namespace:mongo::details
IntermediateDirectory	JudgeServer.mk	/^IntermediateDirectory  :=.\/Debug$/;"	m
InternalError	include/mongo/base/error_codes.h	/^            InternalError = 1,$/;"	e	enum:mongo::ErrorCodes::Error
Interrupted	include/mongo/base/error_codes.h	/^            Interrupted = 11601,$/;"	e	enum:mongo::ErrorCodes::Error
InterruptedAtShutdown	include/mongo/base/error_codes.h	/^            InterruptedAtShutdown = 11600,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidBSON	include/mongo/base/error_codes.h	/^            InvalidBSON = 22,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidDBRef	include/mongo/base/error_codes.h	/^            InvalidDBRef = 55,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidIdField	include/mongo/base/error_codes.h	/^            InvalidIdField = 53,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidLength	include/mongo/base/error_codes.h	/^            InvalidLength = 16,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidNamespace	include/mongo/base/error_codes.h	/^            InvalidNamespace = 73,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidOptions	include/mongo/base/error_codes.h	/^            InvalidOptions = 72,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidPath	include/mongo/base/error_codes.h	/^            InvalidPath = 30,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidReplicaSetConfig	include/mongo/base/error_codes.h	/^            InvalidReplicaSetConfig = 93,$/;"	e	enum:mongo::ErrorCodes::Error
InvalidRoleModification	include/mongo/base/error_codes.h	/^            InvalidRoleModification = 49,$/;"	e	enum:mongo::ErrorCodes::Error
IsIntegral	jsoncpp.cpp	/^static bool IsIntegral(double d) {$/;"	f	namespace:Json
JParse	include/mongo/db/json.h	/^    class JParse {$/;"	c	namespace:mongo
JS	include/mongo/bson/oid.h	/^        JS$/;"	e	enum:mongo::JsonStringFormat
JSONCPP_DEPRECATED	json-forwards.h	157;"	d
JSONCPP_DEPRECATED	json-forwards.h	160;"	d
JSONCPP_DEPRECATED	json-forwards.h	163;"	d
JSONCPP_DEPRECATED	json-forwards.h	165;"	d
JSONCPP_DEPRECATED	json-forwards.h	169;"	d
JSONCPP_DEPRECATED	json.h	184;"	d
JSONCPP_DEPRECATED	json.h	187;"	d
JSONCPP_DEPRECATED	json.h	190;"	d
JSONCPP_DEPRECATED	json.h	192;"	d
JSONCPP_DEPRECATED	json.h	196;"	d
JSONCPP_DISABLE_DLL_INTERFACE_WARNING	json-forwards.h	127;"	d
JSONCPP_DISABLE_DLL_INTERFACE_WARNING	json-forwards.h	132;"	d
JSONCPP_DISABLE_DLL_INTERFACE_WARNING	json.h	154;"	d
JSONCPP_DISABLE_DLL_INTERFACE_WARNING	json.h	159;"	d
JSONCPP_VERSION_HEXA	json.h	96;"	d
JSONCPP_VERSION_MAJOR	json.h	92;"	d
JSONCPP_VERSION_MINOR	json.h	93;"	d
JSONCPP_VERSION_PATCH	json.h	94;"	d
JSONCPP_VERSION_QUALIFIER	json.h	95;"	d
JSONCPP_VERSION_STRING	json.h	91;"	d
JSON_AMALGATED_H_INCLUDED	json.h	76;"	d
JSON_API	json-forwards.h	123;"	d
JSON_API	json-forwards.h	126;"	d
JSON_API	json-forwards.h	131;"	d
JSON_API	json-forwards.h	136;"	d
JSON_API	json.h	150;"	d
JSON_API	json.h	153;"	d
JSON_API	json.h	158;"	d
JSON_API	json.h	163;"	d
JSON_ASSERT	json.h	1976;"	d
JSON_ASSERT_MESSAGE	json.h	2002;"	d
JSON_ASSERT_UNREACHABLE	jsoncpp.cpp	2396;"	d	file:
JSON_CONFIG_H_INCLUDED	json-forwards.h	92;"	d
JSON_CONFIG_H_INCLUDED	json.h	119;"	d
JSON_FAIL_MESSAGE	json.h	1979;"	d
JSON_FORWARDS_H_INCLUDED	json-forwards.h	215;"	d
JSON_FORWARDS_H_INCLUDED	json.h	242;"	d
JSON_FORWARD_AMALGATED_H_INCLUDED	json-forwards.h	77;"	d
JSON_HAS_INT64	json-forwards.h	178;"	d
JSON_HAS_INT64	json-forwards.h	190;"	d
JSON_HAS_INT64	json.h	205;"	d
JSON_HAS_INT64	json.h	217;"	d
JSON_IS_AMALGAMATION	json-forwards.h	80;"	d
JSON_IS_AMALGAMATION	json.h	79;"	d
JSON_USE_CPPTL	json-forwards.h	118;"	d
JSON_USE_CPPTL	json.h	145;"	d
JSON_USE_EXCEPTION	json-forwards.h	107;"	d
JSON_USE_EXCEPTION	json.h	134;"	d
JSON_USE_INT64_DOUBLE_CONVERSION	json-forwards.h	147;"	d
JSON_USE_INT64_DOUBLE_CONVERSION	json.h	174;"	d
JSON_VERSION_H_INCLUDED	json.h	89;"	d
JSON_WRITER_H_INCLUDED	json.h	1619;"	d
JSTypeMax	include/mongo/bson/bsontypes.h	/^        JSTypeMax=18,$/;"	e	enum:mongo::BSONType
JUDGES	JudgeServer.h	/^    const static int JUDGES = 4;$/;"	m	class:JudgeServer
JUDGESERVER_GRADING_H	Grading.h	6;"	d
JUDGESERVER_JUDGEMANAGER_H	JudgeManager.h	6;"	d
JUDGESERVER_JUDGESERVER_H	JudgeServer.h	6;"	d
JUDGESERVER_JUDGE_H	Judge.h	6;"	d
JUDGESERVER_QUESTION_H	question.h	6;"	d
JUDGESERVER_SEMAPHORE_H	SemaphoreObejct.h	6;"	d
JUDGESERVER_THREAD_H	Thread.h	6;"	d
JUDGESERVER_TIMER_H	Timer.h	6;"	d
JavaCompile	Grading.h	/^    JavaCompile(std::string path):$/;"	f	class:JavaCompile
JavaCompile	Grading.h	/^class JavaCompile : public Compile {$/;"	c
Json	json-forwards.h	/^namespace Json {$/;"	n
Json	json.h	/^namespace Json {$/;"	n
Json	jsoncpp.cpp	/^namespace Json {$/;"	n	file:
JsonStringFormat	include/mongo/bson/oid.h	/^    enum JsonStringFormat {$/;"	g	namespace:mongo
Judge	Judge.cpp	/^Judge::Judge() : Thread(), in(0, 0), out(0, 1), mutex(0, 1)$/;"	f	class:Judge
Judge	Judge.h	/^class Judge : public Thread::Thread{$/;"	c
JudgeManager	JudgeManager.cpp	/^JudgeManager::JudgeManager(int cnt) {$/;"	f	class:JudgeManager
JudgeManager	JudgeManager.h	/^class JudgeManager {$/;"	c
JudgeServer	JudgeServer.h	/^    JudgeServer():_serv(PORT), _jud_man(JUDGES) { _pm.init(*this); }$/;"	f	class:JudgeServer
JudgeServer	JudgeServer.h	/^class JudgeServer: public PollHandler$/;"	c
KeyTooLong	include/mongo/base/error_codes.h	/^            KeyTooLong = 17280,$/;"	e	enum:mongo::ErrorCodes::Error
KeyVector	include/mongo/client/index_spec.h	/^        typedef std::vector<std::pair<std::string, IndexType> > KeyVector;$/;"	t	class:mongo::IndexSpec
KillTimerTask	Grading.cpp	/^    KillTimerTask(pid_t pid):_target(pid) { }$/;"	f	class:KillTimerTask
KillTimerTask	Grading.cpp	/^class KillTimerTask :public Timer::TimerTask {$/;"	c	file:
Kind	json.h	/^  enum Kind {$/;"	g	class:Json::PathArgument
LEFT_BEFORE	include/mongo/bson/bsonmisc.h	/^        LEFT_BEFORE = -1,$/;"	e	enum:mongo::FieldCompareResult
LEFT_SUBFIELD	include/mongo/bson/bsonmisc.h	/^        LEFT_SUBFIELD = -2,$/;"	e	enum:mongo::FieldCompareResult
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	24;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	35;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	38;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	43;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	46;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	54;"	d
LIBMONGOCLIENT_ABI_ADORNMENT	include/mongo/client/autolib.h	57;"	d
LIBMONGOCLIENT_LIB_PREFIX	include/mongo/client/autolib.h	21;"	d
LIBMONGOCLIENT_LIB_PREFIX	include/mongo/client/autolib.h	31;"	d
LIBMONGOCLIENT_LIB_PREFIX	include/mongo/client/autolib.h	51;"	d
LIBMONGOCLIENT_LIB_SUFFIX	include/mongo/client/autolib.h	27;"	d
LIBMONGOCLIENT_LIB_SUFFIX	include/mongo/client/autolib.h	62;"	d
LIB_JSONCPP_JSON_TOOL_H_INCLUDED	jsoncpp.cpp	89;"	d	file:
LOGGER_H	logger.h	2;"	d
LT	include/mongo/bson/bsonobj.h	/^            LT = 0x1,$/;"	e	enum:mongo::BSONObj::MatchType
LTE	include/mongo/bson/bsonobj.h	/^            LTE = 0x3,$/;"	e	enum:mongo::BSONObj::MatchType
Label	include/mongo/bson/bsonmisc.h	/^            explicit Label( const char *l ) : l_( l ) {}$/;"	f	struct:mongo::Labeler::Label
Label	include/mongo/bson/bsonmisc.h	/^        struct Label {$/;"	s	class:mongo::Labeler
LabeledLevel	include/mongo/logger/labeled_level.h	/^        LabeledLevel( const char* label, int level ) : _label( label ), _level( level ) {}$/;"	f	class:mongo::logger::LabeledLevel
LabeledLevel	include/mongo/logger/labeled_level.h	/^        LabeledLevel( const std::string& label, int level ) : _label( label ), _level( level ) {}$/;"	f	class:mongo::logger::LabeledLevel
LabeledLevel	include/mongo/logger/labeled_level.h	/^        LabeledLevel( int level ) : _level( level ) {}$/;"	f	class:mongo::logger::LabeledLevel
LabeledLevel	include/mongo/logger/labeled_level.h	/^    class LabeledLevel {$/;"	c	namespace:mongo::logger
Labeler	include/mongo/bson/bsonmisc.h	/^        Labeler( const Label &l, BSONObjBuilderValueStream *s ) : l_( l ), s_( s ) {}$/;"	f	class:mongo::Labeler
Labeler	include/mongo/bson/bsonmisc.h	/^    class Labeler {$/;"	c	namespace:mongo
LargestInt	json-forwards.h	/^typedef Int64 LargestInt;$/;"	t	namespace:Json
LargestInt	json-forwards.h	/^typedef int LargestInt;$/;"	t	namespace:Json
LargestInt	json.h	/^  typedef Json::LargestInt LargestInt;$/;"	t	class:Json::Value
LargestInt	json.h	/^typedef Int64 LargestInt;$/;"	t	namespace:Json
LargestInt	json.h	/^typedef int LargestInt;$/;"	t	namespace:Json
LargestUInt	json-forwards.h	/^typedef UInt64 LargestUInt;$/;"	t	namespace:Json
LargestUInt	json-forwards.h	/^typedef unsigned int LargestUInt;$/;"	t	namespace:Json
LargestUInt	json.h	/^  typedef Json::LargestUInt LargestUInt;$/;"	t	class:Json::Value
LargestUInt	json.h	/^typedef UInt64 LargestUInt;$/;"	t	namespace:Json
LargestUInt	json.h	/^typedef unsigned int LargestUInt;$/;"	t	namespace:Json
Layout	include/mongo/util/net/message.h	/^        struct Layout {$/;"	s	namespace:mongo::MSGHEADER
Layout	include/mongo/util/net/message.h	/^        struct Layout {$/;"	s	namespace:mongo::MsgData
LazyState	include/mongo/client/dbclient_rs.h	/^            LazyState() :$/;"	f	class:mongo::DBClientReplicaSet::LazyState
LazyState	include/mongo/client/dbclient_rs.h	/^        class LazyState {$/;"	c	class:mongo::DBClientReplicaSet
LibPath	JudgeServer.mk	/^LibPath                := $(LibraryPathSwitch). $/;"	m
LibraryPathSwitch	JudgeServer.mk	/^LibraryPathSwitch      :=-L$/;"	m
LibrarySwitch	JudgeServer.mk	/^LibrarySwitch          :=-l$/;"	m
Libs	JudgeServer.mk	/^Libs                   := $/;"	m
LineString	include/mongo/geo/linestring.h	/^    LineString<TCoordinates>::LineString(const BSONObj& bson)$/;"	f	class:mongo::geo::LineString
LineString	include/mongo/geo/linestring.h	/^    LineString<TCoordinates>::LineString(const LineString<TCoordinates>& other)$/;"	f	class:mongo::geo::LineString
LineString	include/mongo/geo/linestring.h	/^    LineString<TCoordinates>::LineString(const std::vector<Point<TCoordinates> >& points)$/;"	f	class:mongo::geo::LineString
LineString	include/mongo/geo/linestring.h	/^    class LineString : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
LineString	include/mongo/geo/namespaces.h	/^    typedef LineString<Coordinates2D> LineString;$/;"	t	namespace:mongo::geo::coords2d
LineString	include/mongo/geo/namespaces.h	/^    typedef LineString<Coordinates2DGeographic> LineString;$/;"	t	namespace:mongo::geo::coords2dgeographic
LinkOptions	JudgeServer.mk	/^LinkOptions            :=  $/;"	m
LinkerName	JudgeServer.mk	/^LinkerName             :=\/usr\/bin\/g++$/;"	m
LiteralTag	include/mongo/base/string_data.h	/^        struct LiteralTag {};$/;"	s	class:mongo::StringData
Location	json.h	/^  typedef const Char* Location;$/;"	t	class:Json::Reader
Location	jsoncpp.cpp	/^  typedef const Char* Location;$/;"	t	class:Json::OurReader	file:
LockBusy	include/mongo/base/error_codes.h	/^            LockBusy = 46,$/;"	e	enum:mongo::ErrorCodes::Error
LockFailed	include/mongo/base/error_codes.h	/^            LockFailed = 107,$/;"	e	enum:mongo::ErrorCodes::Error
LockTimeout	include/mongo/base/error_codes.h	/^            LockTimeout = 24,$/;"	e	enum:mongo::ErrorCodes::Error
Log	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Log() { return LogSeverity(0); }$/;"	f	class:mongo::logger::LogSeverity
LogAppenderFactory	include/mongo/client/options.h	/^        typedef stdx::function<LogAppenderPtr()> LogAppenderFactory;$/;"	t	class:mongo::client::Options
LogAppenderPtr	include/mongo/client/options.h	/^        typedef std::auto_ptr<logger::MessageLogDomain::EventAppender> LogAppenderPtr;$/;"	t	class:mongo::client::Options
LogComponent	include/mongo/logger/log_component.h	/^        \/* implicit *\/ LogComponent(Value value) : _value(value) {}$/;"	f	class:mongo::logger::LogComponent
LogComponent	include/mongo/logger/log_component.h	/^    class MONGO_CLIENT_API LogComponent {$/;"	c	namespace:mongo::logger
LogComponentSettings	include/mongo/logger/log_component_settings.h	/^    class LogComponentSettings {$/;"	c	namespace:mongo::logger
LogDomain	include/mongo/logger/log_domain.h	/^    class MONGO_CLIENT_API LogDomain {$/;"	c	namespace:mongo::logger
LogManager	include/mongo/logger/log_manager.h	/^    class LogManager {$/;"	c	namespace:mongo::logger
LogSeverity	include/mongo/logger/log_severity.h	/^        explicit LogSeverity(int severity) : _severity(severity) {}$/;"	f	class:mongo::logger::LogSeverity
LogSeverity	include/mongo/logger/log_severity.h	/^    class MONGO_CLIENT_API LogSeverity {$/;"	c	namespace:mongo::logger
LogWriteFailed	include/mongo/base/error_codes.h	/^            LogWriteFailed = 42,$/;"	e	enum:mongo::ErrorCodes::Error
LogicError	json.h	/^class JSON_API LogicError;$/;"	m	namespace:Json	typeref:class:Json::JSON_API
LogicError	jsoncpp.cpp	/^LogicError::LogicError(std::string const& msg)$/;"	f	class:Json::LogicError
LogicError	jsoncpp.cpp	/^class JSON_API LogicError : public Exception {$/;"	c	namespace:Json	file:
LogstreamBuilder	include/mongo/logger/logstream_builder.h	/^    class MONGO_CLIENT_API LogstreamBuilder {$/;"	c	namespace:mongo::logger
Long	include/mongo/bson/bsonelement.h	/^        long long Long()            const { return chk(NumberLong)._numberLong(); }$/;"	f	class:mongo::BSONElement
MASTER	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	e	enum:mongo::ConnectionString::ConnectionType
MAX_POLL	PollManager.h	/^        static const int MAX_POLL = 10000;$/;"	m	class:PollManager
MAX_RETRY	include/mongo/client/dbclient_rs.h	/^        static const size_t MAX_RETRY;$/;"	m	class:mongo::DBClientReplicaSet
MD5Type	include/mongo/bson/bsontypes.h	/^        MD5Type=5,$/;"	e	enum:mongo::BinDataType
MONGOCLIENT_VERSION	include/mongo/version.h	22;"	d
MONGOCLIENT_VERSION_MAJOR	include/mongo/version.h	18;"	d
MONGOCLIENT_VERSION_MINOR	include/mongo/version.h	19;"	d
MONGOCLIENT_VERSION_PATCH	include/mongo/version.h	20;"	d
MONGO_ASSERT_ON_EXCEPTION	include/mongo/util/assert_util.h	282;"	d
MONGO_ASSERT_ON_EXCEPTION_WITH_MSG	include/mongo/util/assert_util.h	293;"	d
MONGO_BIG_ENDIAN	include/mongo/platform/endian.h	493;"	d
MONGO_BIG_ENDIAN	include/mongo/platform/endian.h	49;"	d
MONGO_BIG_ENDIAN	include/mongo/platform/endian.h	64;"	d
MONGO_BOOST_TIME_UTC	include/mongo/util/time_support.h	174;"	d
MONGO_BOOST_TIME_UTC	include/mongo/util/time_support.h	176;"	d
MONGO_BYTE_ORDER	include/mongo/config.h	37;"	d
MONGO_CLIENT_API	include/mongo/client/export_macros.h	45;"	d
MONGO_CLIENT_API	include/mongo/client/export_macros.h	50;"	d
MONGO_CLIENT_API	include/mongo/client/export_macros.h	52;"	d
MONGO_CLIENT_DEPRECATED	include/mongo/platform/compiler.h	127;"	d
MONGO_CLIENT_FUNC	include/mongo/client/export_macros.h	20;"	d
MONGO_COMPILER_ALIGN_TYPE	include/mongo/platform/compiler_gcc.h	30;"	d
MONGO_COMPILER_ALIGN_TYPE	include/mongo/platform/compiler_msvc.h	29;"	d
MONGO_COMPILER_ALIGN_VARIABLE	include/mongo/platform/compiler_gcc.h	32;"	d
MONGO_COMPILER_ALIGN_VARIABLE	include/mongo/platform/compiler_msvc.h	31;"	d
MONGO_COMPILER_API_CALLING_CONVENTION	include/mongo/platform/compiler_gcc.h	52;"	d
MONGO_COMPILER_API_CALLING_CONVENTION	include/mongo/platform/compiler_msvc.h	40;"	d
MONGO_COMPILER_API_CALLING_CONVENTION	include/mongo/platform/compiler_msvc.h	42;"	d
MONGO_COMPILER_API_DEPRECATED	include/mongo/platform/compiler_gcc.h	66;"	d
MONGO_COMPILER_API_DEPRECATED	include/mongo/platform/compiler_gcc.h	68;"	d
MONGO_COMPILER_API_DEPRECATED	include/mongo/platform/compiler_gcc.h	74;"	d
MONGO_COMPILER_API_DEPRECATED	include/mongo/platform/compiler_gcc.h	76;"	d
MONGO_COMPILER_API_DEPRECATED	include/mongo/platform/compiler_msvc.h	45;"	d
MONGO_COMPILER_API_EXPORT	include/mongo/platform/compiler_gcc.h	50;"	d
MONGO_COMPILER_API_EXPORT	include/mongo/platform/compiler_msvc.h	33;"	d
MONGO_COMPILER_API_IMPORT	include/mongo/platform/compiler_gcc.h	51;"	d
MONGO_COMPILER_API_IMPORT	include/mongo/platform/compiler_msvc.h	34;"	d
MONGO_COMPILER_NORETURN	include/mongo/platform/compiler_gcc.h	26;"	d
MONGO_COMPILER_NORETURN	include/mongo/platform/compiler_msvc.h	25;"	d
MONGO_COMPILER_VARIABLE_UNUSED	include/mongo/platform/compiler_gcc.h	28;"	d
MONGO_COMPILER_VARIABLE_UNUSED	include/mongo/platform/compiler_msvc.h	27;"	d
MONGO_DBL_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_DBL_SIZE = 3 + DBL_MANT_DIG - DBL_MIN_EXP + 1;$/;"	m	class:mongo::StringBuilderImpl
MONGO_DESTRUCTOR_GUARD	include/mongo/util/assert_util.h	305;"	d
MONGO_DISALLOW_COPYING	include/mongo/base/disallow_copying.h	30;"	d
MONGO_HASH_NAMESPACE	include/mongo/platform/hash_namespace.h	32;"	d
MONGO_HASH_NAMESPACE	include/mongo/platform/hash_namespace.h	42;"	d
MONGO_HASH_NAMESPACE	include/mongo/platform/hash_namespace.h	50;"	d
MONGO_HASH_NAMESPACE	include/mongo/platform/hash_namespace.h	60;"	d
MONGO_HASH_NAMESPACE_END	include/mongo/platform/hash_namespace.h	31;"	d
MONGO_HASH_NAMESPACE_END	include/mongo/platform/hash_namespace.h	41;"	d
MONGO_HASH_NAMESPACE_END	include/mongo/platform/hash_namespace.h	49;"	d
MONGO_HASH_NAMESPACE_END	include/mongo/platform/hash_namespace.h	59;"	d
MONGO_HASH_NAMESPACE_START	include/mongo/platform/hash_namespace.h	30;"	d
MONGO_HASH_NAMESPACE_START	include/mongo/platform/hash_namespace.h	40;"	d
MONGO_HASH_NAMESPACE_START	include/mongo/platform/hash_namespace.h	48;"	d
MONGO_HASH_NAMESPACE_START	include/mongo/platform/hash_namespace.h	58;"	d
MONGO_HAVE_GCC_ATOMIC_BUILTINS	include/mongo/config.h	31;"	d
MONGO_HAVE_HEADER_UNISTD_H	include/mongo/config.h	25;"	d
MONGO_HAVE_STRNLEN	include/mongo/config.h	43;"	d
MONGO_LITTLE_ENDIAN	include/mongo/platform/endian.h	48;"	d
MONGO_LITTLE_ENDIAN	include/mongo/platform/endian.h	492;"	d
MONGO_LITTLE_ENDIAN	include/mongo/platform/endian.h	63;"	d
MONGO_MACROS_PUSHED	include/mongo/client/redef_macros.h	23;"	d
MONGO_MACROS_PUSHED	include/mongo/client/undef_macros.h	52;"	d
MONGO_PTR_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_PTR_SIZE = 19;    \/\/ Accounts for the 0x prefix$/;"	m	class:mongo::StringBuilderImpl
MONGO_QUERY	include/mongo/client/dbclientinterface.h	575;"	d
MONGO_S16_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_S16_SIZE = 7;$/;"	m	class:mongo::StringBuilderImpl
MONGO_S32_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_S32_SIZE = 12;$/;"	m	class:mongo::StringBuilderImpl
MONGO_S64_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_S64_SIZE = 23;$/;"	m	class:mongo::StringBuilderImpl
MONGO_U32_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_U32_SIZE = 11;$/;"	m	class:mongo::StringBuilderImpl
MONGO_U64_SIZE	include/mongo/bson/util/builder.h	/^        static const size_t MONGO_U64_SIZE = 22;$/;"	m	class:mongo::StringBuilderImpl
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	45;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	489;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	68;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	74;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	88;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	92;"	d
MONGO_UINT16_SWAB	include/mongo/platform/endian.h	98;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	102;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	46;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	490;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	69;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	77;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	84;"	d
MONGO_UINT32_SWAB	include/mongo/platform/endian.h	93;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	106;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	47;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	491;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	70;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	80;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	85;"	d
MONGO_UINT64_SWAB	include/mongo/platform/endian.h	94;"	d
MONGO_invariant	include/mongo/util/assert_util.h	249;"	d
MONGO_invariantOK	include/mongo/util/assert_util.h	255;"	d
MONGO_likely	include/mongo/platform/compiler_gcc.h	81;"	d
MONGO_likely	include/mongo/platform/compiler_msvc.h	47;"	d
MONGO_massert	include/mongo/util/assert_util.h	222;"	d
MONGO_uassert	include/mongo/util/assert_util.h	197;"	d
MONGO_unlikely	include/mongo/platform/compiler_gcc.h	82;"	d
MONGO_unlikely	include/mongo/platform/compiler_msvc.h	48;"	d
MONGO_verify	include/mongo/util/assert_util.h	243;"	d
MONGO_wassert	include/mongo/util/assert_util.h	211;"	d
MRInline	include/mongo/client/dbclientinterface.h	/^        static MROutput MRInline;$/;"	m	class:mongo::DBClientWithCommands
MROutput	include/mongo/client/dbclientinterface.h	/^            MROutput(const BSONObj& obj) : out(obj) {}$/;"	f	struct:mongo::DBClientWithCommands::MROutput
MROutput	include/mongo/client/dbclientinterface.h	/^            MROutput(const char* collection) : out(BSON("replace" << collection)) {}$/;"	f	struct:mongo::DBClientWithCommands::MROutput
MROutput	include/mongo/client/dbclientinterface.h	/^            MROutput(const std::string& collection) : out(BSON("replace" << collection)) {}$/;"	f	struct:mongo::DBClientWithCommands::MROutput
MROutput	include/mongo/client/dbclientinterface.h	/^        struct MROutput {$/;"	s	class:mongo::DBClientWithCommands
MSGHEADER	include/mongo/util/net/message.h	/^    namespace MSGHEADER {$/;"	n	namespace:mongo
MSGID	include/mongo/util/net/message.h	/^    typedef uint32_t MSGID;$/;"	t	namespace:mongo
MakeDirCommand	JudgeServer.mk	/^MakeDirCommand         :=mkdir -p$/;"	m
Malloc	include/mongo/bson/util/builder.h	/^        void* Malloc(size_t sz) { return malloc(sz); }$/;"	f	class:mongo::TrivialAllocator
Malloc	include/mongo/bson/util/builder.h	/^        void* Malloc(size_t sz) {$/;"	f	class:mongo::StackAllocator
ManualInterventionRequired	include/mongo/base/error_codes.h	/^            ManualInterventionRequired = 51,$/;"	e	enum:mongo::ErrorCodes::Error
MatchType	include/mongo/bson/bsonobj.h	/^        enum MatchType {$/;"	g	class:mongo::BSONObj
MaxError	include/mongo/base/error_codes.h	/^            MaxError$/;"	e	enum:mongo::ErrorCodes::Error
MaxKey	include/mongo/bson/bsontypes.h	/^        MaxKey=127$/;"	e	enum:mongo::BSONType
MaxKeyLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API MaxKeyLabeler { };$/;"	s	namespace:mongo
MaxMessageSizeBytes	include/mongo/util/net/message.h	/^    const size_t MaxMessageSizeBytes = 48 * 1000 * 1000;$/;"	m	namespace:mongo
Members	json.h	/^  typedef std::vector<std::string> Members;$/;"	t	class:Json::Value
Message	include/mongo/util/net/message.h	/^        Message( void * data , bool freeIt ) :$/;"	f	class:mongo::Message
Message	include/mongo/util/net/message.h	/^        Message() : _buf( 0 ), _data( 0 ), _freeIt( false ) {}$/;"	f	class:mongo::Message
Message	include/mongo/util/net/message.h	/^        Message(Message& r) : _buf( 0 ), _data( 0 ), _freeIt( false ) {$/;"	f	class:mongo::Message
Message	include/mongo/util/net/message.h	/^    class Message {$/;"	c	namespace:mongo
MessageEventEphemeral	include/mongo/logger/message_event.h	/^        MessageEventEphemeral($/;"	f	class:mongo::logger::MessageEventEphemeral
MessageEventEphemeral	include/mongo/logger/message_event.h	/^    class MessageEventEphemeral {$/;"	c	namespace:mongo::logger
MessageLogDomain	include/mongo/logger/message_log_domain.h	/^    typedef LogDomain<MessageEventEphemeral> MessageLogDomain;$/;"	t	namespace:mongo::logger
MessagingPort	include/mongo/util/net/message_port.h	/^    class MessagingPort : public AbstractMessagingPort {$/;"	c	namespace:mongo
Milliseconds	include/mongo/util/time_support.h	/^    typedef boost::posix_time::milliseconds Milliseconds;$/;"	t	namespace:mongo
MinKey	include/mongo/bson/bsontypes.h	/^        MinKey=-1,$/;"	e	enum:mongo::BSONType
MinKeyLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API MinKeyLabeler { };$/;"	s	namespace:mongo
Most	jsoncpp.cpp	/^    Most,  \/\/\/< Recover odd behavior of previous versions (not implemented yet).$/;"	e	enum:Json::CommentStyle::Enum	file:
MsgAssertionException	include/mongo/util/assert_util.h	/^        MsgAssertionException( const ExceptionInfo& ei ) : AssertionException( ei ) {}$/;"	f	class:mongo::MsgAssertionException
MsgAssertionException	include/mongo/util/assert_util.h	/^        MsgAssertionException(int c, const std::string& m) : AssertionException( m , c ) {}$/;"	f	class:mongo::MsgAssertionException
MsgAssertionException	include/mongo/util/assert_util.h	/^    class MONGO_CLIENT_API MsgAssertionException : public AssertionException {$/;"	c	namespace:mongo
MsgData	include/mongo/util/net/message.h	/^    namespace MsgData {$/;"	n	namespace:mongo
MsgDataHeaderSize	include/mongo/util/net/message.h	/^        const int MsgDataHeaderSize = sizeof(Value) - 4;$/;"	m	namespace:mongo::MsgData
MsgVec	include/mongo/util/net/message.h	/^        typedef std::vector< std::pair< char*, int > > MsgVec;$/;"	t	class:mongo::Message
MultiLineString	include/mongo/geo/multilinestring.h	/^    MultiLineString<TCoordinates>::MultiLineString($/;"	f	class:mongo::geo::MultiLineString
MultiLineString	include/mongo/geo/multilinestring.h	/^    MultiLineString<TCoordinates>::MultiLineString(const BSONObj& bson)$/;"	f	class:mongo::geo::MultiLineString
MultiLineString	include/mongo/geo/multilinestring.h	/^    class MultiLineString : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
MultiLineString	include/mongo/geo/namespaces.h	/^    typedef MultiLineString<Coordinates2D> MultiLineString;$/;"	t	namespace:mongo::geo::coords2d
MultiLineString	include/mongo/geo/namespaces.h	/^    typedef MultiLineString<Coordinates2DGeographic> MultiLineString;$/;"	t	namespace:mongo::geo::coords2dgeographic
MultiPoint	include/mongo/geo/multipoint.h	/^    MultiPoint<TCoordinates>::MultiPoint(const BSONObj& bson)$/;"	f	class:mongo::geo::MultiPoint
MultiPoint	include/mongo/geo/multipoint.h	/^    class MultiPoint : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
MultiPoint	include/mongo/geo/namespaces.h	/^    typedef MultiPoint<Coordinates2D> MultiPoint;$/;"	t	namespace:mongo::geo::coords2d
MultiPoint	include/mongo/geo/namespaces.h	/^    typedef MultiPoint<Coordinates2DGeographic> MultiPoint;$/;"	t	namespace:mongo::geo::coords2dgeographic
MultiPolygon	include/mongo/geo/multipolygon.h	/^    MultiPolygon<TCoordinates>::MultiPolygon(const BSONObj& bson)$/;"	f	class:mongo::geo::MultiPolygon
MultiPolygon	include/mongo/geo/multipolygon.h	/^    class MultiPolygon : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
MultiPolygon	include/mongo/geo/namespaces.h	/^    typedef MultiPolygon<Coordinates2D> MultiPolygon;$/;"	t	namespace:mongo::geo::coords2d
MultiPolygon	include/mongo/geo/namespaces.h	/^    typedef MultiPolygon<Coordinates2DGeographic> MultiPolygon;$/;"	t	namespace:mongo::geo::coords2dgeographic
MultipleErrorsOccurred	include/mongo/base/error_codes.h	/^            MultipleErrorsOccurred = 65,$/;"	e	enum:mongo::ErrorCodes::Error
NE	include/mongo/bson/bsonobj.h	/^            NE = 0x9,$/;"	e	enum:mongo::BSONObj::MatchType
NEARQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj NEARQUERY(const GeoObj<TCoordinates>& geoObj) {$/;"	f	namespace:mongo::geo
NEARQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj NEARQUERY(const GeoObj<TCoordinates>& geoObj, double maxDistance) {$/;"	f	namespace:mongo::geo
NEARSPHEREQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj NEARSPHEREQUERY(const GeoObj<TCoordinates>& geoObj) {$/;"	f	namespace:mongo::geo
NEARSPHEREQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj NEARSPHEREQUERY(const GeoObj<TCoordinates>& geoObj, double maxDistance) {$/;"	f	namespace:mongo::geo
NIN	include/mongo/bson/bsonobj.h	/^            NIN = 0x0C,$/;"	e	enum:mongo::BSONObj::MatchType
NOINLINE_DECL	include/mongo/bson/inline_decls.h	22;"	d
NOINLINE_DECL	include/mongo/bson/inline_decls.h	27;"	d
NOINLINE_DECL	include/mongo/bson/inline_decls.h	32;"	d
NOINLINE_DECL	include/mongo/client/redef_macros.h	38;"	d
NOINLINE_DECL	include/mongo/client/undef_macros.h	31;"	d
NOMINMAX	include/mongo/client/redef_macros.h	32;"	d
NTDDI_VERSION	include/mongo/platform/windows_basic.h	51;"	d
NTDDI_VERSION	include/mongo/platform/windows_basic.h	54;"	d
NamespaceExists	include/mongo/base/error_codes.h	/^            NamespaceExists = 48,$/;"	e	enum:mongo::ErrorCodes::Error
NamespaceNotFound	include/mongo/base/error_codes.h	/^            NamespaceNotFound = 26,$/;"	e	enum:mongo::ErrorCodes::Error
Network	BasicSocket.h	/^namespace Network$/;"	n
Network	InetSocket.h	/^namespace Network$/;"	n
Network	ServerSocket.h	/^namespace Network$/;"	n
NetworkTimeout	include/mongo/base/error_codes.h	/^            NetworkTimeout = 89,$/;"	e	enum:mongo::ErrorCodes::Error
NewReplicaSetConfigurationIncompatible	include/mongo/base/error_codes.h	/^            NewReplicaSetConfigurationIncompatible = 103,$/;"	e	enum:mongo::ErrorCodes::Error
NoMatchingDocument	include/mongo/base/error_codes.h	/^            NoMatchingDocument = 47,$/;"	e	enum:mongo::ErrorCodes::Error
NoProgressMade	include/mongo/base/error_codes.h	/^            NoProgressMade = 82,$/;"	e	enum:mongo::ErrorCodes::Error
NoProjectionFound	include/mongo/base/error_codes.h	/^            NoProjectionFound = 97,$/;"	e	enum:mongo::ErrorCodes::Error
NoReplicationEnabled	include/mongo/base/error_codes.h	/^            NoReplicationEnabled = 76,$/;"	e	enum:mongo::ErrorCodes::Error
NoSuchKey	include/mongo/base/error_codes.h	/^            NoSuchKey = 4,$/;"	e	enum:mongo::ErrorCodes::Error
NoWhereParseContext	include/mongo/base/error_codes.h	/^            NoWhereParseContext = 81,$/;"	e	enum:mongo::ErrorCodes::Error
NodeNotElectable	include/mongo/base/error_codes.h	/^            NodeNotElectable = 104,$/;"	e	enum:mongo::ErrorCodes::Error
NodeNotFound	include/mongo/base/error_codes.h	/^            NodeNotFound = 74,$/;"	e	enum:mongo::ErrorCodes::Error
Nodes	json.h	/^  typedef std::stack<Value*> Nodes;$/;"	t	class:Json::Reader
Nodes	jsoncpp.cpp	/^  typedef std::stack<Value*> Nodes;$/;"	t	class:Json::OurReader	file:
NonExistentPath	include/mongo/base/error_codes.h	/^            NonExistentPath = 29,$/;"	e	enum:mongo::ErrorCodes::Error
None	jsoncpp.cpp	/^    None,  \/\/\/< Drop all comments.$/;"	e	enum:Json::CommentStyle::Enum	file:
NotExactValueField	include/mongo/base/error_codes.h	/^            NotExactValueField = 111,$/;"	e	enum:mongo::ErrorCodes::Error
NotMaster	include/mongo/base/error_codes.h	/^            NotMaster = 10107,$/;"	e	enum:mongo::ErrorCodes::Error
NotMaster	include/mongo/util/assert_util.h	/^        NotMaster = 10107,                \/\/ uassert( 10107 )$/;"	e	enum:mongo::CommonErrorCodes
NotMasterNoSlaveOkCode	include/mongo/base/error_codes.h	/^            NotMasterNoSlaveOkCode = 13435,$/;"	e	enum:mongo::ErrorCodes::Error
NotMasterNoSlaveOkCode	include/mongo/util/assert_util.h	/^        NotMasterNoSlaveOkCode = 13435,   \/\/ uassert( 13435 )$/;"	e	enum:mongo::CommonErrorCodes
NotMasterOrSecondaryCode	include/mongo/base/error_codes.h	/^            NotMasterOrSecondaryCode = 13436,$/;"	e	enum:mongo::ErrorCodes::Error
NotMasterOrSecondaryCode	include/mongo/util/assert_util.h	/^        NotMasterOrSecondaryCode = 13436, \/\/ uassert( 13436 )$/;"	e	enum:mongo::CommonErrorCodes
NotSecondary	include/mongo/base/error_codes.h	/^            NotSecondary = 95,$/;"	e	enum:mongo::ErrorCodes::Error
NotSingleValueField	include/mongo/base/error_codes.h	/^            NotSingleValueField = 54,$/;"	e	enum:mongo::ErrorCodes::Error
NotYetInitialized	include/mongo/base/error_codes.h	/^            NotYetInitialized = 94,$/;"	e	enum:mongo::ErrorCodes::Error
Null	include/mongo/bson/bsonelement.h	/^        void Null()                 const { chk(isNull()); } \/\/ throw MsgAssertionException if not null$/;"	f	class:mongo::BSONElement
NullLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API NullLabeler { };$/;"	s	namespace:mongo
Number	include/mongo/bson/bsonelement.h	/^        double Number()             const { return chk(isNumber()).number(); }$/;"	f	class:mongo::BSONElement
NumberDouble	include/mongo/bson/bsontypes.h	/^        NumberDouble=1,$/;"	e	enum:mongo::BSONType
NumberInt	include/mongo/bson/bsontypes.h	/^        NumberInt = 16,$/;"	e	enum:mongo::BSONType
NumberLong	include/mongo/bson/bsontypes.h	/^        NumberLong = 18,$/;"	e	enum:mongo::BSONType
OBSOLETE_DuplicateKey	include/mongo/base/error_codes.h	/^            OBSOLETE_DuplicateKey = 3,$/;"	e	enum:mongo::ErrorCodes::Error
OID	include/mongo/bson/bsonelement.h	/^        mongo::OID OID()            const { return chk(jstOID).__oid(); }$/;"	f	class:mongo::BSONElement
OID	include/mongo/bson/oid.h	/^        OID() : _data() {}$/;"	f	class:mongo::OID
OID	include/mongo/bson/oid.h	/^        explicit OID(const std::string &s) {$/;"	f	class:mongo::OID
OID	include/mongo/bson/oid.h	/^        explicit OID(const unsigned char (&arr)[kOIDSize]) {$/;"	f	class:mongo::OID
OID	include/mongo/bson/oid.h	/^        explicit OID(no_initialize_tag) {}$/;"	f	class:mongo::OID
OID	include/mongo/bson/oid.h	/^    class MONGO_CLIENT_API OID {$/;"	c	namespace:mongo
OK	include/mongo/base/error_codes.h	/^            OK = 0,$/;"	e	enum:mongo::ErrorCodes::Error
OK	include/mongo/base/status-inl.h	/^    inline Status Status::OK() {$/;"	f	class:mongo::Status
OK	include/mongo/bson/bsonelement.h	/^        void OK()                   const { chk(ok()); }     \/\/ throw MsgAssertionException if element DNE$/;"	f	class:mongo::BSONElement
OR	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObj OR(const BSONObj& a, const BSONObj& b)$/;"	f	namespace:mongo
OR	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObj OR(const BSONObj& a, const BSONObj& b, const BSONObj& c)$/;"	f	namespace:mongo
OR	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObj OR(const BSONObj& a, const BSONObj& b, const BSONObj& c, const BSONObj& d)$/;"	f	namespace:mongo
OR	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObj OR(const BSONObj& a, const BSONObj& b, const BSONObj& c, const BSONObj& d, const BSONObj& e)$/;"	f	namespace:mongo
OR	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObj OR(const BSONObj& a, const BSONObj& b, const BSONObj& c, const BSONObj& d, const BSONObj& e, const BSONObj& f)$/;"	f	namespace:mongo
Object	include/mongo/bson/bsontypes.h	/^        Object=3,$/;"	e	enum:mongo::BSONType
ObjectSuffix	JudgeServer.mk	/^ObjectSuffix           :=.o$/;"	m
ObjectSwitch	JudgeServer.mk	/^ObjectSwitch           :=-o $/;"	m
ObjectValues	json.h	/^  typedef CppTL::SmallMap<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
ObjectValues	json.h	/^  typedef std::map<CZString, Value> ObjectValues;$/;"	t	class:Json::Value
Objects	JudgeServer.mk	/^Objects=$(Objects0) $/;"	m
Objects0	JudgeServer.mk	/^Objects0=$(IntermediateDirectory)\/BasicSocket.cc$(ObjectSuffix) $(IntermediateDirectory)\/main.cc$(ObjectSuffix) $(IntermediateDirectory)\/PollManager.cc$(ObjectSuffix) $(IntermediateDirectory)\/ServerSocket.cc$(ObjectSuffix) $/;"	m
ObjectsFileList	JudgeServer.mk	/^ObjectsFileList        :="JudgeServer.txt"$/;"	m
OkCode	include/mongo/util/assert_util.h	/^        OkCode = 0,$/;"	e	enum:mongo::CommonErrorCodes
OperationException	include/mongo/client/exceptions.h	/^    class MONGO_CLIENT_API OperationException : public DBException {$/;"	c	namespace:mongo
OperationFailed	include/mongo/base/error_codes.h	/^            OperationFailed = 96,$/;"	e	enum:mongo::ErrorCodes::Error
OperationIncomplete	include/mongo/base/error_codes.h	/^            OperationIncomplete = 77,$/;"	e	enum:mongo::ErrorCodes::Error
Operations	include/mongo/util/net/operation.h	/^    enum Operations {$/;"	g	namespace:mongo
OplogOperationUnsupported	include/mongo/base/error_codes.h	/^            OplogOperationUnsupported = 62,$/;"	e	enum:mongo::ErrorCodes::Error
Options	include/mongo/client/options.h	/^    class MONGO_CLIENT_API Options {$/;"	c	namespace:mongo::client
Options	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	g	class:mongo::WriteConcern
Ordering	include/mongo/bson/ordering.h	/^        Ordering(const Ordering& r) : bits(r.bits) { }$/;"	f	class:mongo::Ordering
Ordering	include/mongo/bson/ordering.h	/^        Ordering(unsigned b) : bits(b) { }$/;"	f	class:mongo::Ordering
Ordering	include/mongo/bson/ordering.h	/^    class Ordering {$/;"	c	namespace:mongo
OurCharReader	jsoncpp.cpp	/^  OurCharReader($/;"	f	class:Json::OurCharReader
OurCharReader	jsoncpp.cpp	/^class OurCharReader : public CharReader {$/;"	c	namespace:Json	file:
OurFeatures	jsoncpp.cpp	/^OurFeatures::OurFeatures()$/;"	f	class:Json::OurFeatures
OurFeatures	jsoncpp.cpp	/^class OurFeatures {$/;"	c	namespace:Json	file:
OurReader	jsoncpp.cpp	/^OurReader::OurReader(OurFeatures const& features)$/;"	f	class:Json::OurReader
OurReader	jsoncpp.cpp	/^class OurReader {$/;"	c	namespace:Json	file:
OutDir	JudgeServer.mk	/^OutDir                 := $(IntermediateDirectory)$/;"	m
OutOfDiskSpace	include/mongo/base/error_codes.h	/^            OutOfDiskSpace = 14031,$/;"	e	enum:mongo::ErrorCodes::Error
OutdatedClient	include/mongo/base/error_codes.h	/^            OutdatedClient = 101,$/;"	e	enum:mongo::ErrorCodes::Error
OutputFile	JudgeServer.mk	/^OutputFile             :=$(IntermediateDirectory)\/$(ProjectName)$/;"	m
OutputSwitch	JudgeServer.mk	/^OutputSwitch           :=-o $/;"	m
Overflow	include/mongo/base/error_codes.h	/^            Overflow = 15,$/;"	e	enum:mongo::ErrorCodes::Error
PACKED_DECL	include/mongo/bson/inline_decls.h	23;"	d
PACKED_DECL	include/mongo/bson/inline_decls.h	28;"	d
PACKED_DECL	include/mongo/bson/inline_decls.h	33;"	d
PACKED_DECL	include/mongo/client/redef_macros.h	40;"	d
PACKED_DECL	include/mongo/client/undef_macros.h	33;"	d
PAIR	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	e	enum:mongo::ConnectionString::ConnectionType
PCHCompileFlags	JudgeServer.mk	/^PCHCompileFlags        :=$/;"	m
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	212;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	236;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	257;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	211;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	214;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	217;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	223;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	226;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	235;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	241;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	250;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	256;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	259;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	265;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	271;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	274;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
PLATFORM_ID	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	280;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	272;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	281;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	287;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	290;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	299;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	305;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	308;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	311;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	314;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	317;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	320;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	323;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	326;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	329;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	335;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	338;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	341;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	345;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	348;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	351;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	354;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	357;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	270;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	279;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	285;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	300;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	303;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	306;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	309;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	312;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	315;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	321;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	324;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	327;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	330;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	333;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	336;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	356;"	d	file:
POLLMANAGER_H	PollManager.h	2;"	d
PORT	JudgeServer.h	/^    const static int PORT = 54321;$/;"	m	class:JudgeServer
Parser	include/mongo/geo/namespaces.h	/^    typedef Parser<Coordinates2D> Parser;$/;"	t	namespace:mongo::geo::coords2d
Parser	include/mongo/geo/namespaces.h	/^    typedef Parser<Coordinates2DGeographic> Parser;$/;"	t	namespace:mongo::geo::coords2dgeographic
Parser	include/mongo/geo/parser.h	/^    class Parser {$/;"	c	namespace:mongo::geo
Path	json.h	/^class JSON_API Path {$/;"	c	namespace:Json
Path	jsoncpp.cpp	/^Path::Path(const std::string& path,$/;"	f	class:Json::Path
PathArgument	json.h	/^class JSON_API PathArgument {$/;"	c	namespace:Json
PathArgument	jsoncpp.cpp	/^PathArgument::PathArgument() : key_(), index_(), kind_(kindNone) {}$/;"	f	class:Json::PathArgument
PathArgument	jsoncpp.cpp	/^PathArgument::PathArgument(ArrayIndex index)$/;"	f	class:Json::PathArgument
PathArgument	jsoncpp.cpp	/^PathArgument::PathArgument(const char* key)$/;"	f	class:Json::PathArgument
PathArgument	jsoncpp.cpp	/^PathArgument::PathArgument(const std::string& key)$/;"	f	class:Json::PathArgument
PathNotViable	include/mongo/base/error_codes.h	/^            PathNotViable = 28,$/;"	e	enum:mongo::ErrorCodes::Error
Point	include/mongo/geo/namespaces.h	/^    typedef Point<Coordinates2D> Point;$/;"	t	namespace:mongo::geo::coords2d
Point	include/mongo/geo/namespaces.h	/^    typedef Point<Coordinates2DGeographic> Point;$/;"	t	namespace:mongo::geo::coords2dgeographic
Point	include/mongo/geo/point.h	/^    Point<TCoordinates>::Point(const BSONObj& bson)$/;"	f	class:mongo::geo::Point
Point	include/mongo/geo/point.h	/^    Point<TCoordinates>::Point(const Point<TCoordinates>& other)$/;"	f	class:mongo::geo::Point
Point	include/mongo/geo/point.h	/^    Point<TCoordinates>::Point(const TCoordinates& coords)$/;"	f	class:mongo::geo::Point
Point	include/mongo/geo/point.h	/^    class Point : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
PollHandler	PollManager.h	/^class PollHandler$/;"	c
PollManager	PollManager.h	/^class PollManager$/;"	c
Polygon	include/mongo/geo/namespaces.h	/^    typedef Polygon<Coordinates2D> Polygon;$/;"	t	namespace:mongo::geo::coords2d
Polygon	include/mongo/geo/namespaces.h	/^    typedef Polygon<Coordinates2DGeographic> Polygon;$/;"	t	namespace:mongo::geo::coords2dgeographic
Polygon	include/mongo/geo/polygon.h	/^    Polygon<TCoordinates>::Polygon(const BSONObj& bson)$/;"	f	class:mongo::geo::Polygon
Polygon	include/mongo/geo/polygon.h	/^    Polygon<TCoordinates>::Polygon(const Polygon<TCoordinates>& other)$/;"	f	class:mongo::geo::Polygon
Polygon	include/mongo/geo/polygon.h	/^    Polygon<TCoordinates>::Polygon(const std::vector<LineString<TCoordinates> >& linearRings)$/;"	f	class:mongo::geo::Polygon
Polygon	include/mongo/geo/polygon.h	/^    class Polygon : public Geometry<TCoordinates> {$/;"	c	namespace:mongo::geo
PostRunCommandHookFunc	include/mongo/client/dbclientinterface.h	/^        typedef stdx::function<void(const BSONObj&, const std::string&)> PostRunCommandHookFunc;$/;"	t	class:mongo::DBClientWithCommands
PrepareConfigsFailedCode	include/mongo/util/assert_util.h	/^        PrepareConfigsFailedCode = 13104, \/\/ uassert( 13104 )$/;"	e	enum:mongo::CommonErrorCodes
PreprocessOnlySwitch	JudgeServer.mk	/^PreprocessOnlySwitch   :=-E$/;"	m
PreprocessSuffix	JudgeServer.mk	/^PreprocessSuffix       :=.i$/;"	m
PreprocessorSwitch	JudgeServer.mk	/^PreprocessorSwitch     :=-D$/;"	m
Preprocessors	JudgeServer.mk	/^Preprocessors          :=$/;"	m
PrivilegeNotFound	include/mongo/base/error_codes.h	/^            PrivilegeNotFound = 33,$/;"	e	enum:mongo::ErrorCodes::Error
ProfileAll	include/mongo/client/dbclientinterface.h	/^            ProfileAll = 2$/;"	e	enum:mongo::DBClientWithCommands::ProfilingLevel
ProfileOff	include/mongo/client/dbclientinterface.h	/^            ProfileOff = 0,$/;"	e	enum:mongo::DBClientWithCommands::ProfilingLevel
ProfileSlow	include/mongo/client/dbclientinterface.h	/^            ProfileSlow = 1, \/\/ log very slow (>100ms) operations$/;"	e	enum:mongo::DBClientWithCommands::ProfilingLevel
ProfilingLevel	include/mongo/client/dbclientinterface.h	/^        enum ProfilingLevel {$/;"	g	class:mongo::DBClientWithCommands
ProjectName	JudgeServer.mk	/^ProjectName            :=JudgeServer$/;"	m
ProjectPath	JudgeServer.mk	/^ProjectPath            := "\/home\/micky\/Documents\/Coding\/SimpleAlgorithmJudge\/JudgeServer"$/;"	m
ProtocolError	include/mongo/base/error_codes.h	/^            ProtocolError = 17,$/;"	e	enum:mongo::ErrorCodes::Error
Query	include/mongo/client/dbclientinterface.h	/^        Query() : obj(BSONObj()) { }$/;"	f	class:mongo::Query
Query	include/mongo/client/dbclientinterface.h	/^        Query(const BSONObj& b) : obj(b) { }$/;"	f	class:mongo::Query
Query	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API Query {$/;"	c	namespace:mongo
QueryOption_AllSupported	include/mongo/client/dbclientinterface.h	/^        QueryOption_AllSupported = QueryOption_CursorTailable |$/;"	e	enum:mongo::QueryOptions
QueryOption_AwaitData	include/mongo/client/dbclientinterface.h	/^        QueryOption_AwaitData = 1 << 5,$/;"	e	enum:mongo::QueryOptions
QueryOption_CursorTailable	include/mongo/client/dbclientinterface.h	/^        QueryOption_CursorTailable = 1 << 1,$/;"	e	enum:mongo::QueryOptions
QueryOption_Exhaust	include/mongo/client/dbclientinterface.h	/^        QueryOption_Exhaust = 1 << 6,$/;"	e	enum:mongo::QueryOptions
QueryOption_NoCursorTimeout	include/mongo/client/dbclientinterface.h	/^        QueryOption_NoCursorTimeout = 1 << 4,$/;"	e	enum:mongo::QueryOptions
QueryOption_OplogReplay	include/mongo/client/dbclientinterface.h	/^        QueryOption_OplogReplay = 1 << 3,$/;"	e	enum:mongo::QueryOptions
QueryOption_PartialResults	include/mongo/client/dbclientinterface.h	/^        QueryOption_PartialResults = 1 << 7 ,$/;"	e	enum:mongo::QueryOptions
QueryOption_SlaveOk	include/mongo/client/dbclientinterface.h	/^        QueryOption_SlaveOk = 1 << 2,$/;"	e	enum:mongo::QueryOptions
QueryOptions	include/mongo/client/dbclientinterface.h	/^    enum MONGO_CLIENT_API QueryOptions {$/;"	g	namespace:mongo
QuerySpec	include/mongo/client/dbclientinterface.h	/^        QuerySpec( const std::string& ns,$/;"	f	class:mongo::QuerySpec
QuerySpec	include/mongo/client/dbclientinterface.h	/^        QuerySpec() {}$/;"	f	class:mongo::QuerySpec
QuerySpec	include/mongo/client/dbclientinterface.h	/^    class MONGO_CLIENT_API QuerySpec {$/;"	c	namespace:mongo
RECV_ERROR	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
RECV_TIMEOUT	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
RIGHT_BEFORE	include/mongo/bson/bsonmisc.h	/^        RIGHT_BEFORE = 1 ,$/;"	e	enum:mongo::FieldCompareResult
RIGHT_SUBFIELD	include/mongo/bson/bsonmisc.h	/^        RIGHT_SUBFIELD = 2$/;"	e	enum:mongo::FieldCompareResult
RM	Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RcIncludePath	JudgeServer.mk	/^RcIncludePath          := $/;"	m
ReadPrefField	include/mongo/client/dbclientinterface.h	/^        static const BSONField<BSONObj> ReadPrefField;$/;"	m	class:mongo::Query
ReadPrefModeField	include/mongo/client/dbclientinterface.h	/^        static const BSONField<std::string> ReadPrefModeField;$/;"	m	class:mongo::Query
ReadPrefTagsField	include/mongo/client/dbclientinterface.h	/^        static const BSONField<BSONArray> ReadPrefTagsField;$/;"	m	class:mongo::Query
ReadPreference	include/mongo/client/dbclientinterface.h	/^    enum MONGO_CLIENT_API ReadPreference {$/;"	g	namespace:mongo
ReadPreferenceSetting	include/mongo/client/dbclient_rs.h	/^        ReadPreferenceSetting(ReadPreference pref, const TagSet& tag):$/;"	f	struct:mongo::ReadPreferenceSetting
ReadPreferenceSetting	include/mongo/client/dbclient_rs.h	/^    struct MONGO_CLIENT_API ReadPreferenceSetting {$/;"	s	namespace:mongo
ReadPreference_Nearest	include/mongo/client/dbclientinterface.h	/^        ReadPreference_Nearest,$/;"	e	enum:mongo::ReadPreference
ReadPreference_PrimaryOnly	include/mongo/client/dbclientinterface.h	/^        ReadPreference_PrimaryOnly = 0,$/;"	e	enum:mongo::ReadPreference
ReadPreference_PrimaryPreferred	include/mongo/client/dbclientinterface.h	/^        ReadPreference_PrimaryPreferred,$/;"	e	enum:mongo::ReadPreference
ReadPreference_SecondaryOnly	include/mongo/client/dbclientinterface.h	/^        ReadPreference_SecondaryOnly,$/;"	e	enum:mongo::ReadPreference
ReadPreference_SecondaryPreferred	include/mongo/client/dbclientinterface.h	/^        ReadPreference_SecondaryPreferred,$/;"	e	enum:mongo::ReadPreference
Reader	json.h	/^class JSON_API Reader {$/;"	c	namespace:Json
Reader	jsoncpp.cpp	/^Reader::Reader()$/;"	f	class:Json::Reader
Reader	jsoncpp.cpp	/^Reader::Reader(const Features& features)$/;"	f	class:Json::Reader
Realloc	include/mongo/bson/util/builder.h	/^        void* Realloc(void *p, size_t sz) { $/;"	f	class:mongo::StackAllocator
Realloc	include/mongo/bson/util/builder.h	/^        void* Realloc(void *p, size_t sz) { return realloc(p, sz); }$/;"	f	class:mongo::TrivialAllocator
RecvStaleConfigCode	include/mongo/util/assert_util.h	/^        RecvStaleConfigCode = 9996,       \/\/ uassert( 9996 )$/;"	e	enum:mongo::CommonErrorCodes
RegEx	include/mongo/bson/bsontypes.h	/^        RegEx=11,$/;"	e	enum:mongo::BSONType
RemoteChangeDetected	include/mongo/base/error_codes.h	/^            RemoteChangeDetected = 36,$/;"	e	enum:mongo::ErrorCodes::Error
RemoteResultsUnavailable	include/mongo/base/error_codes.h	/^            RemoteResultsUnavailable = 83,$/;"	e	enum:mongo::ErrorCodes::Error
RemoteValidationError	include/mongo/base/error_codes.h	/^            RemoteValidationError = 25,$/;"	e	enum:mongo::ErrorCodes::Error
RemoveOption_Broadcast	include/mongo/client/write_options.h	/^        RemoveOption_Broadcast = 1 << 1$/;"	e	enum:mongo::RemoveOptions
RemoveOption_JustOne	include/mongo/client/write_options.h	/^        RemoveOption_JustOne = 1 << 0,$/;"	e	enum:mongo::RemoveOptions
RemoveOptions	include/mongo/client/write_options.h	/^    enum RemoveOptions {$/;"	g	namespace:mongo
ReplicaSetMonitorPtr	include/mongo/client/dbclient_rs.h	/^    typedef boost::shared_ptr<ReplicaSetMonitor> ReplicaSetMonitorPtr;$/;"	t	namespace:mongo
ReplicaSetNotFound	include/mongo/base/error_codes.h	/^            ReplicaSetNotFound = 71,$/;"	e	enum:mongo::ErrorCodes::Error
ReservedOptions	include/mongo/client/dbclientinterface.h	/^    enum MONGO_CLIENT_API ReservedOptions {$/;"	g	namespace:mongo
Reserved_FromWriteback	include/mongo/client/dbclientinterface.h	/^        Reserved_FromWriteback = 1 << 1$/;"	e	enum:mongo::ReservedOptions
Reserved_InsertOption_ContinueOnError	include/mongo/client/dbclientinterface.h	/^        Reserved_InsertOption_ContinueOnError = 1 << 0 ,$/;"	e	enum:mongo::ReservedOptions
RoleDataInconsistent	include/mongo/base/error_codes.h	/^            RoleDataInconsistent = 80,$/;"	e	enum:mongo::ErrorCodes::Error
RoleModificationFailed	include/mongo/base/error_codes.h	/^            RoleModificationFailed = 58,$/;"	e	enum:mongo::ErrorCodes::Error
RoleNotFound	include/mongo/base/error_codes.h	/^            RoleNotFound = 31,$/;"	e	enum:mongo::ErrorCodes::Error
RolesNotRelated	include/mongo/base/error_codes.h	/^            RolesNotRelated = 32,$/;"	e	enum:mongo::ErrorCodes::Error
RunCommandHookFunc	include/mongo/client/dbclientinterface.h	/^        typedef stdx::function<void(BSONObjBuilder*)> RunCommandHookFunc;$/;"	t	class:mongo::DBClientWithCommands
RuntimeError	json.h	/^class JSON_API RuntimeError;$/;"	m	namespace:Json	typeref:class:Json::JSON_API
RuntimeError	jsoncpp.cpp	/^RuntimeError::RuntimeError(std::string const& msg)$/;"	f	class:Json::RuntimeError
RuntimeError	jsoncpp.cpp	/^class JSON_API RuntimeError : public Exception {$/;"	c	namespace:Json	file:
SAME	include/mongo/bson/bsonmisc.h	/^        SAME = 0,$/;"	e	enum:mongo::FieldCompareResult
SBNUM	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& SBNUM(T val,int maxSize,const char *macro)  {$/;"	f	class:mongo::StringBuilderImpl
SEND_ERROR	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
SEND_TIMEOUT	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	e	enum:mongo::SocketException::Type
SERVER_SOCKET_H	ServerSocket.h	2;"	d
SET	include/mongo/client/dbclientinterface.h	/^        enum ConnectionType { INVALID , MASTER , PAIR , SET , CUSTOM };$/;"	e	enum:mongo::ConnectionString::ConnectionType
SHELL	Makefile	/^SHELL = \/bin\/sh$/;"	m
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	16;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	177;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	32;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIZE	include/mongo/bson/bsonmisc.h	/^        enum { SIZE = 10 };$/;"	e	enum:mongo::BSONSizeTracker::__anon6
SOCKET	include/mongo/util/net/sock.h	/^    typedef int SOCKET;$/;"	t	namespace:mongo
SOCK_FAMILY_UNKNOWN_ERROR	include/mongo/util/net/sock.h	/^    const int SOCK_FAMILY_UNKNOWN_ERROR=13078;$/;"	m	namespace:mongo
SSLEnabled	include/mongo/client/options.h	/^        inline bool SSLEnabled() const {$/;"	f	class:mongo::client::Options
SSLModes	include/mongo/client/options.h	/^        enum SSLModes {$/;"	g	class:mongo::client::Options
SUFFIXES	Makefile	/^SUFFIXES =$/;"	m
SZ	include/mongo/bson/util/builder.h	/^        enum { SZ = 512 };$/;"	e	enum:mongo::StackAllocator::__anon5
SecondaryAheadOfPrimary	include/mongo/base/error_codes.h	/^            SecondaryAheadOfPrimary = 92,$/;"	e	enum:mongo::ErrorCodes::Error
Seconds	include/mongo/util/time_support.h	/^    typedef boost::posix_time::seconds Seconds;$/;"	t	namespace:mongo
SelfType	json.h	/^  typedef ValueConstIterator SelfType;$/;"	t	class:Json::ValueConstIterator
SelfType	json.h	/^  typedef ValueIterator SelfType;$/;"	t	class:Json::ValueIterator
SelfType	json.h	/^  typedef ValueIteratorBase SelfType;$/;"	t	class:Json::ValueIteratorBase
SemaphoreObejct	SemaphoreObejct.h	/^        SemaphoreObejct(int pshared, int value) { sem_init(&_sema, pshared, value); }$/;"	f	class:Thread::SemaphoreObejct
SemaphoreObejct	SemaphoreObejct.h	/^    class SemaphoreObejct {$/;"	c	namespace:Thread
SendStaleConfigCode	include/mongo/util/assert_util.h	/^        SendStaleConfigCode = 13388 ,     \/\/ uassert( 13388 )$/;"	e	enum:mongo::CommonErrorCodes
ServerSocket	ServerSocket.h	/^            ServerSocket(int port): _socket(SOCK_STREAM, 0){$/;"	f	class:Network::ServerSocket
ServerSocket	ServerSocket.h	/^    class ServerSocket$/;"	c	namespace:Network
Severe	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Severe() { return LogSeverity(-4); }$/;"	f	class:mongo::logger::LogSeverity
ShardKeyNotFound	include/mongo/base/error_codes.h	/^            ShardKeyNotFound = 61,$/;"	e	enum:mongo::ErrorCodes::Error
ShardKeyTooBig	include/mongo/base/error_codes.h	/^            ShardKeyTooBig = 13334,$/;"	e	enum:mongo::ErrorCodes::Error
ShardNotFound	include/mongo/base/error_codes.h	/^            ShardNotFound = 70,$/;"	e	enum:mongo::ErrorCodes::Error
SharedBuffer	include/mongo/util/shared_buffer.h	/^        SharedBuffer() {}$/;"	f	class:mongo::SharedBuffer
SharedBuffer	include/mongo/util/shared_buffer.h	/^        explicit SharedBuffer(Holder* holder)$/;"	f	class:mongo::SharedBuffer
SharedBuffer	include/mongo/util/shared_buffer.h	/^    class SharedBuffer {$/;"	c	namespace:mongo
SharedObjectLinkerName	JudgeServer.mk	/^SharedObjectLinkerName :=\/usr\/bin\/g++ -shared -fPIC$/;"	m
ShutdownInProgress	include/mongo/base/error_codes.h	/^            ShutdownInProgress = 91,$/;"	e	enum:mongo::ErrorCodes::Error
SignedSize	BasicSocket.h	/^typedef ssize_t SignedSize;$/;"	t
SockAddr	include/mongo/util/net/sock.h	/^    struct MONGO_CLIENT_API SockAddr {$/;"	s	namespace:mongo
Socket	include/mongo/util/net/sock.h	/^    class MONGO_CLIENT_API Socket {$/;"	c	namespace:mongo
SocketException	include/mongo/util/net/sock.h	/^        SocketException( Type t , const std::string& server , int code = 9001 , const std::string& extra="" ) $/;"	f	class:mongo::SocketException
SocketException	include/mongo/util/net/sock.h	/^    class MONGO_CLIENT_API SocketException : public DBException {$/;"	c	namespace:mongo
SourceSwitch	JudgeServer.mk	/^SourceSwitch           :=-c $/;"	m
SplitFailed	include/mongo/base/error_codes.h	/^            SplitFailed = 88,$/;"	e	enum:mongo::ErrorCodes::Error
StackAllocator	include/mongo/bson/util/builder.h	/^    class StackAllocator {$/;"	c	namespace:mongo
StackBufBuilder	include/mongo/bson/util/builder.h	/^        StackBufBuilder() : _BufBuilder<StackAllocator>(StackAllocator::SZ) { }$/;"	f	class:mongo::StackBufBuilder
StackBufBuilder	include/mongo/bson/util/builder.h	/^    class StackBufBuilder : public _BufBuilder<StackAllocator> { $/;"	c	namespace:mongo
StackStringBuilder	include/mongo/bson/util/builder.h	/^    typedef StringBuilderImpl<StackAllocator> StackStringBuilder;$/;"	t	namespace:mongo
StaleShardVersion	include/mongo/base/error_codes.h	/^            StaleShardVersion = 63,$/;"	e	enum:mongo::ErrorCodes::Error
StaticString	json.h	/^  explicit StaticString(const char* czstring) : c_str_(czstring) {}$/;"	f	class:Json::StaticString
StaticString	json.h	/^class JSON_API StaticString {$/;"	c	namespace:Json
Status	include/mongo/base/status-inl.h	/^    inline Status::Status()$/;"	f	class:mongo::Status
Status	include/mongo/base/status-inl.h	/^    inline Status::Status(const Status& other)$/;"	f	class:mongo::Status
Status	include/mongo/base/status.h	/^    class MONGO_CLIENT_API Status {$/;"	c	namespace:mongo
StatusWith	include/mongo/base/status_with.h	/^        StatusWith( ErrorCodes::Error code, const std::string& reason, int location = 0 )$/;"	f	class:mongo::StatusWith
StatusWith	include/mongo/base/status_with.h	/^        explicit StatusWith( const Status& status )$/;"	f	class:mongo::StatusWith
StatusWith	include/mongo/base/status_with.h	/^        explicit StatusWith( const T& t )$/;"	f	class:mongo::StatusWith
StatusWith	include/mongo/base/status_with.h	/^    class StatusWith {$/;"	c	namespace:mongo
StreamWriter	json.h	/^class JSON_API StreamWriter {$/;"	c	namespace:Json
StreamWriter	jsoncpp.cpp	/^StreamWriter::StreamWriter()$/;"	f	class:Json::StreamWriter
StreamWriterBuilder	json.h	/^class JSON_API StreamWriterBuilder : public StreamWriter::Factory {$/;"	c	namespace:Json
StreamWriterBuilder	jsoncpp.cpp	/^StreamWriterBuilder::StreamWriterBuilder()$/;"	f	class:Json::StreamWriterBuilder
StreamWriterPtr	jsoncpp.cpp	/^typedef std::unique_ptr<StreamWriter> StreamWriterPtr;$/;"	t	namespace:Json	file:
Strict	include/mongo/bson/oid.h	/^        Strict,$/;"	e	enum:mongo::JsonStringFormat
String	include/mongo/bson/bsonelement.h	/^        std::string String()        const { return chk(mongo::String).str(); }$/;"	f	class:mongo::BSONElement
String	include/mongo/bson/bsontypes.h	/^        String=2,$/;"	e	enum:mongo::BSONType
StringBuilder	include/mongo/bson/util/builder.h	/^    typedef StringBuilderImpl<TrivialAllocator> StringBuilder;$/;"	t	namespace:mongo
StringBuilderImpl	include/mongo/bson/util/builder.h	/^        StringBuilderImpl() { }$/;"	f	class:mongo::StringBuilderImpl
StringBuilderImpl	include/mongo/bson/util/builder.h	/^    class StringBuilderImpl {$/;"	c	namespace:mongo
StringData	include/mongo/base/string_data.h	/^        StringData( const char (&val)[N], LiteralTag )$/;"	f	class:mongo::StringData
StringData	include/mongo/base/string_data.h	/^        StringData( const char* c, size_t len )$/;"	f	class:mongo::StringData
StringData	include/mongo/base/string_data.h	/^        StringData( const char* str )$/;"	f	class:mongo::StringData
StringData	include/mongo/base/string_data.h	/^        StringData( const std::string& s )$/;"	f	class:mongo::StringData
StringData	include/mongo/base/string_data.h	/^        StringData()$/;"	f	class:mongo::StringData
StringData	include/mongo/base/string_data.h	/^    class MONGO_CLIENT_API StringData {$/;"	c	namespace:mongo
StringStorage	json.h	/^    struct StringStorage {$/;"	s	class:Json::Value::CZString
StructuredError	json.h	/^  struct StructuredError {$/;"	s	class:Json::Reader
StructuredError	jsoncpp.cpp	/^  struct StructuredError {$/;"	s	class:Json::OurReader	file:
StyledStreamWriter	json.h	/^class JSON_API StyledStreamWriter {$/;"	c	namespace:Json
StyledStreamWriter	jsoncpp.cpp	/^StyledStreamWriter::StyledStreamWriter(std::string indentation)$/;"	f	class:Json::StyledStreamWriter
StyledWriter	json.h	/^class JSON_API StyledWriter : public Writer {$/;"	c	namespace:Json
StyledWriter	jsoncpp.cpp	/^StyledWriter::StyledWriter()$/;"	f	class:Json::StyledWriter
Symbol	include/mongo/bson/bsontypes.h	/^        Symbol=14,$/;"	e	enum:mongo::BSONType
T	include/mongo/platform/endian.h	/^        typedef double T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef float T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef int16_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef int32_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef int64_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef int8_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef uint16_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef uint32_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef uint64_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
T	include/mongo/platform/endian.h	/^        typedef uint8_t T;$/;"	t	struct:mongo::endian::ByteOrderConverter
TLSProtocol	include/mongo/client/options.h	/^        enum TLSProtocol {$/;"	g	class:mongo::client::Options
TagSet	include/mongo/client/dbclient_rs.h	/^        explicit TagSet(const BSONArray& tags) : _tags(tags) {}$/;"	f	class:mongo::TagSet
TagSet	include/mongo/client/dbclient_rs.h	/^    class MONGO_CLIENT_API TagSet {$/;"	c	namespace:mongo
TenGen	include/mongo/bson/oid.h	/^        TenGen,$/;"	e	enum:mongo::JsonStringFormat
Thread	SemaphoreObejct.h	/^namespace Thread{$/;"	n
Thread	Thread.cpp	/^Thread::Thread::Thread()$/;"	f	class:Thread::Thread
Thread	Thread.h	/^    class Thread {$/;"	c	namespace:Thread
Thread	Thread.h	/^namespace Thread{$/;"	n
ThreadException	Thread.h	/^        ThreadException(const char *msg) {$/;"	f	class:Thread::ThreadException
ThreadException	Thread.h	/^    class ThreadException : public std::exception {$/;"	c	namespace:Thread
Timer	Timer.h	/^        Timer(int time, TimerTask &t) : _time(time), _t(&t), _allow(true) { }$/;"	f	class:Timer::Timer
Timer	Timer.h	/^    class Timer : public Thread::Thread$/;"	c	namespace:Timer
Timer	Timer.h	/^namespace Timer {$/;"	n
TimerTask	Timer.h	/^    class TimerTask {$/;"	c	namespace:Timer
Timestamp	include/mongo/bson/bsonelement.h	/^        Timestamp_t Timestamp()     const { return chk(mongo::Timestamp).timestamp(); }$/;"	f	class:mongo::BSONElement
Timestamp	include/mongo/bson/bsontypes.h	/^        Timestamp = 17,$/;"	e	enum:mongo::BSONType
Timestamp	include/mongo/bson/oid.h	/^        typedef int32_t Timestamp;$/;"	t	class:mongo::OID
Timestamp_t	include/mongo/bson/timestamp.h	/^        Timestamp_t()$/;"	f	class:mongo::Timestamp_t
Timestamp_t	include/mongo/bson/timestamp.h	/^        Timestamp_t(const uint32_t seconds, const uint32_t increment)$/;"	f	class:mongo::Timestamp_t
Timestamp_t	include/mongo/bson/timestamp.h	/^    class Timestamp_t {$/;"	c	namespace:mongo
Token	json.h	/^  class Token {$/;"	c	class:Json::Reader
Token	jsoncpp.cpp	/^  class Token {$/;"	c	class:Json::OurReader	file:
TokenType	json.h	/^  enum TokenType {$/;"	g	class:Json::Reader
TokenType	jsoncpp.cpp	/^  enum TokenType {$/;"	g	class:Json::OurReader	file:
TrivialAllocator	include/mongo/bson/util/builder.h	/^    class TrivialAllocator { $/;"	c	namespace:mongo
Type	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	g	class:mongo::SocketException
TypeMismatch	include/mongo/base/error_codes.h	/^            TypeMismatch = 14,$/;"	e	enum:mongo::ErrorCodes::Error
UInt	json-forwards.h	/^typedef unsigned int UInt;$/;"	t	namespace:Json
UInt	json.h	/^  typedef Json::UInt UInt;$/;"	t	class:Json::Value
UInt	json.h	/^typedef unsigned int UInt;$/;"	t	namespace:Json
UInt64	json-forwards.h	/^typedef unsigned __int64 UInt64;$/;"	t	namespace:Json
UInt64	json-forwards.h	/^typedef unsigned long long int UInt64;$/;"	t	namespace:Json
UInt64	json.h	/^  typedef Json::UInt64 UInt64;$/;"	t	class:Json::Value
UInt64	json.h	/^typedef unsigned __int64 UInt64;$/;"	t	namespace:Json
UInt64	json.h	/^typedef unsigned long long int UInt64;$/;"	t	namespace:Json
UIntToStringBuffer	jsoncpp.cpp	/^typedef char UIntToStringBuffer[uintToStringBufferSize];$/;"	t	namespace:Json	file:
Unauthorized	include/mongo/base/error_codes.h	/^            Unauthorized = 13,$/;"	e	enum:mongo::ErrorCodes::Error
Undefined	include/mongo/bson/bsontypes.h	/^        Undefined=6,$/;"	e	enum:mongo::BSONType
UndefinedLabeler	include/mongo/bson/bsonmisc.h	/^    struct MONGO_CLIENT_API UndefinedLabeler { };$/;"	s	namespace:mongo
UnknownError	include/mongo/base/error_codes.h	/^            UnknownError = 8,$/;"	e	enum:mongo::ErrorCodes::Error
UnknownReplWriteConcern	include/mongo/base/error_codes.h	/^            UnknownReplWriteConcern = 79,$/;"	e	enum:mongo::ErrorCodes::Error
UnsupportedFormat	include/mongo/base/error_codes.h	/^            UnsupportedFormat = 12,$/;"	e	enum:mongo::ErrorCodes::Error
UpdateOption_Broadcast	include/mongo/client/write_options.h	/^        UpdateOption_Broadcast = 1 << 2$/;"	e	enum:mongo::UpdateOptions
UpdateOption_Multi	include/mongo/client/write_options.h	/^        UpdateOption_Multi = 1 << 1,$/;"	e	enum:mongo::UpdateOptions
UpdateOption_Upsert	include/mongo/client/write_options.h	/^        UpdateOption_Upsert = 1 << 0,$/;"	e	enum:mongo::UpdateOptions
UpdateOptions	include/mongo/client/write_options.h	/^    enum UpdateOptions {$/;"	g	namespace:mongo
User	JudgeServer.mk	/^User                   :=micky$/;"	m
UserDataInconsistent	include/mongo/base/error_codes.h	/^            UserDataInconsistent = 45,$/;"	e	enum:mongo::ErrorCodes::Error
UserException	include/mongo/util/assert_util.h	/^        UserException(int c , const std::string& m) : AssertionException( m , c ) {}$/;"	f	class:mongo::UserException
UserException	include/mongo/util/assert_util.h	/^    class MONGO_CLIENT_API UserException : public AssertionException {$/;"	c	namespace:mongo
UserModificationFailed	include/mongo/base/error_codes.h	/^            UserModificationFailed = 35,$/;"	e	enum:mongo::ErrorCodes::Error
UserNotFound	include/mongo/base/error_codes.h	/^            UserNotFound = 11,$/;"	e	enum:mongo::ErrorCodes::Error
Val	include/mongo/bson/bsonelement.h	/^        void Val(Date_t& v)         const { v = Date(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(bool& v)           const { v = Bool(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(double& v)         const { v = Double(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(int& v)            const { v = Int(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(long long& v)      const { v = Long(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(mongo::OID& v)     const { v = OID(); }$/;"	f	class:mongo::BSONElement
Val	include/mongo/bson/bsonelement.h	/^        void Val(std::string& v)    const { v = String(); }$/;"	f	class:mongo::BSONElement
Value	include/mongo/logger/log_component.h	/^        enum Value {$/;"	g	class:mongo::logger::LogComponent
Value	include/mongo/util/net/message.h	/^            Value() {$/;"	f	class:mongo::MSGHEADER::Value
Value	include/mongo/util/net/message.h	/^            Value() {$/;"	f	class:mongo::MsgData::Value
Value	include/mongo/util/net/message.h	/^            Value(ZeroInitTag_t zit) : EncodedValueStorage<Layout, ConstView, View>(zit) {}$/;"	f	class:mongo::MSGHEADER::Value
Value	include/mongo/util/net/message.h	/^            Value(ZeroInitTag_t zit) : EncodedValueStorage<Layout, ConstView, View>(zit) {}$/;"	f	class:mongo::MsgData::Value
Value	include/mongo/util/net/message.h	/^        class Value : public EncodedValueStorage<Layout, ConstView, View> {$/;"	c	namespace:mongo::MSGHEADER
Value	include/mongo/util/net/message.h	/^        class Value : public EncodedValueStorage<Layout, ConstView, View> {$/;"	c	namespace:mongo::MsgData
Value	json.h	/^class JSON_API Value {$/;"	c	namespace:Json
Value	jsoncpp.cpp	/^Value::Value(Int value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(Int64 value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(UInt value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(UInt64 value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(Value const& other)$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(ValueType type) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(bool value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(const CppTL::ConstString& value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(const StaticString& value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(const char* beginValue, const char* endValue) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(const char* value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(const std::string& value) {$/;"	f	class:Json::Value
Value	jsoncpp.cpp	/^Value::Value(double value) {$/;"	f	class:Json::Value
ValueConstIterator	json.h	/^class JSON_API ValueConstIterator : public ValueIteratorBase {$/;"	c	namespace:Json
ValueConstIterator	jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator($/;"	f	class:Json::ValueConstIterator
ValueConstIterator	jsoncpp.cpp	/^ValueConstIterator::ValueConstIterator() {}$/;"	f	class:Json::ValueConstIterator
ValueHolder	json.h	/^  union ValueHolder {$/;"	u	class:Json::Value
ValueIterator	json.h	/^class JSON_API ValueIterator : public ValueIteratorBase {$/;"	c	namespace:Json
ValueIterator	jsoncpp.cpp	/^ValueIterator::ValueIterator() {}$/;"	f	class:Json::ValueIterator
ValueIterator	jsoncpp.cpp	/^ValueIterator::ValueIterator(const Value::ObjectValues::iterator& current)$/;"	f	class:Json::ValueIterator
ValueIterator	jsoncpp.cpp	/^ValueIterator::ValueIterator(const ValueConstIterator& other)$/;"	f	class:Json::ValueIterator
ValueIterator	jsoncpp.cpp	/^ValueIterator::ValueIterator(const ValueIterator& other)$/;"	f	class:Json::ValueIterator
ValueIteratorBase	json.h	/^class JSON_API ValueIteratorBase {$/;"	c	namespace:Json
ValueIteratorBase	jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase($/;"	f	class:Json::ValueIteratorBase
ValueIteratorBase	jsoncpp.cpp	/^ValueIteratorBase::ValueIteratorBase()$/;"	f	class:Json::ValueIteratorBase
ValueType	json.h	/^enum ValueType {$/;"	g	namespace:Json
View	include/mongo/util/net/message.h	/^            View(char* data) : ConstView(data) {}$/;"	f	class:mongo::MSGHEADER::View
View	include/mongo/util/net/message.h	/^            View(char* storage) : ConstView(storage) {}$/;"	f	class:mongo::MsgData::View
View	include/mongo/util/net/message.h	/^        class View : public ConstView {$/;"	c	namespace:mongo::MSGHEADER
View	include/mongo/util/net/message.h	/^        class View : public ConstView {$/;"	c	namespace:mongo::MsgData
WIN32_LEAN_AND_MEAN	include/mongo/platform/windows_basic.h	68;"	d
WITHINQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj WITHINQUERY(const BoundingBox<TCoordinates>& geoBB) {$/;"	f	namespace:mongo::geo
WITHINQUERY	include/mongo/geo/queryutils.h	/^    inline BSONObj WITHINQUERY(const GeoObj<TCoordinates>& geoObj) {$/;"	f	namespace:mongo::geo
Warning	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::Warning() { return LogSeverity(-2); }$/;"	f	class:mongo::logger::LogSeverity
WordType	include/mongo/platform/atomic_word_cxx11.h	/^        typedef _WordType WordType;$/;"	t	class:mongo::AtomicWord
WordType	include/mongo/platform/atomic_word_intrinsics.h	/^        typedef _WordType WordType;$/;"	t	class:mongo::AtomicWord
WorkspacePath	JudgeServer.mk	/^WorkspacePath          := "\/home\/micky\/Documents\/Coding\/SimpleAlgorithmJudge\/JudgeServer"$/;"	m
WriteConcern	include/mongo/client/write_concern.h	/^    class MONGO_CLIENT_API WriteConcern {$/;"	c	namespace:mongo
WriteConcernFailed	include/mongo/base/error_codes.h	/^            WriteConcernFailed = 64,$/;"	e	enum:mongo::ErrorCodes::Error
WriteConcernLegacyOK	include/mongo/base/error_codes.h	/^            WriteConcernLegacyOK = 75,$/;"	e	enum:mongo::ErrorCodes::Error
WriteConcernNotDefined	include/mongo/base/error_codes.h	/^            WriteConcernNotDefined = 99,$/;"	e	enum:mongo::ErrorCodes::Error
WriteConflict	include/mongo/base/error_codes.h	/^            WriteConflict = 112,$/;"	e	enum:mongo::ErrorCodes::Error
WriteOpType	include/mongo/util/net/operation.h	/^    enum WriteOpType {$/;"	g	namespace:mongo
WriteOption_FromWriteback	include/mongo/client/dbclientinterface.h	/^        WriteOption_FromWriteback = 1 << 31$/;"	e	enum:mongo::WriteOptions
WriteOptions	include/mongo/client/dbclientinterface.h	/^    enum MONGO_CLIENT_API WriteOptions {$/;"	g	namespace:mongo
WriteResult	include/mongo/client/write_result.h	/^    class MONGO_CLIENT_API WriteResult {$/;"	c	namespace:mongo
Writer	json.h	/^class JSON_API Writer {$/;"	c	namespace:Json
ZeroInitTag_t	include/mongo/base/encoded_value_storage.h	/^        ZeroInitTag_t() {$/;"	f	struct:mongo::ZeroInitTag_t
ZeroInitTag_t	include/mongo/base/encoded_value_storage.h	/^    struct ZeroInitTag_t {$/;"	s	namespace:mongo
_ATOMIC_WORD_DECLARE	include/mongo/platform/atomic_word_cxx11.h	172;"	d
_ATOMIC_WORD_DECLARE	include/mongo/platform/atomic_word_cxx11.h	179;"	d
_ATOMIC_WORD_DECLARE	include/mongo/platform/atomic_word_cxx11.h	190;"	d
_ATOMIC_WORD_DECLARE	include/mongo/platform/atomic_word_intrinsics.h	153;"	d
_ATOMIC_WORD_DECLARE	include/mongo/platform/atomic_word_intrinsics.h	161;"	d
_BufBuilder	include/mongo/bson/util/builder.h	/^        _BufBuilder(int initsize = 512) : size(initsize) {$/;"	f	class:mongo::_BufBuilder
_BufBuilder	include/mongo/bson/util/builder.h	/^    class _BufBuilder {$/;"	c	namespace:mongo
_CRT_NONSTDC_NO_DEPRECATE	include/mongo/platform/windows_basic.h	65;"	d
_CRT_RAND_S	include/mongo/platform/windows_basic.h	61;"	d
_MONGO_STDINT_NAMESPACE	include/mongo/platform/cstdint.h	25;"	d
_MONGO_STDINT_NAMESPACE	include/mongo/platform/cstdint.h	28;"	d
_MONGO_STDINT_NAMESPACE	include/mongo/platform/cstdint.h	47;"	d
_WIN32_WINNT	include/mongo/platform/windows_basic.h	38;"	d
_WIN32_WINNT	include/mongo/platform/windows_basic.h	41;"	d
__has_extension	include/mongo/platform/compiler_gcc.h	59;"	d
__oid	include/mongo/bson/bsonelement.h	/^        mongo::OID __oid() const {$/;"	f	class:mongo::BSONElement
_abortOnFailure	include/mongo/logger/log_domain.h	/^        bool _abortOnFailure;$/;"	m	class:mongo::logger::LogDomain
_addr_info	BasicSocket.h	/^            struct sockaddr_in _addr_info;$/;"	m	class:Network::BasicSocket	typeref:struct:Network::BasicSocket::sockaddr_in
_allow	Timer.h	/^        bool _allow;$/;"	m	class:Timer::Timer
_answer	Grading.h	/^    std::string _answer;$/;"	m	class:Grading
_appendArrayIt	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONArrayBuilder& _appendArrayIt( BSONArrayBuilder& _this, const L& vals ) {$/;"	f	namespace:mongo
_appendIt	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObjBuilder& _appendIt( BSONObjBuilder& _this, const StringData& fieldName, const L& vals ) {$/;"	f	namespace:mongo
_appenderFactory	include/mongo/client/options.h	/^        LogAppenderFactory _appenderFactory;$/;"	m	class:mongo::client::Options
_appenders	include/mongo/logger/log_domain.h	/^        AppenderVector _appenders;$/;"	m	class:mongo::logger::LogDomain
_assertIfNull	include/mongo/client/dbclientcursor.h	/^        void _assertIfNull() const { uassert(13348, "connection died", this); }$/;"	f	class:mongo::DBClientCursor
_authPooledSecondaryConn	include/mongo/client/dbclient_rs.h	/^        static bool _authPooledSecondaryConn;$/;"	m	class:mongo::DBClientReplicaSet
_auths	include/mongo/client/dbclient_rs.h	/^        std::map<std::string, BSONObj> _auths; \/\/ dbName -> auth parameters$/;"	m	class:mongo::DBClientReplicaSet
_autoShutdownGracePeriodMillis	include/mongo/client/options.h	/^        unsigned int _autoShutdownGracePeriodMillis;$/;"	m	class:mongo::client::Options
_awaitingHandshake	include/mongo/util/net/sock.h	/^        bool _awaitingHandshake;$/;"	m	class:mongo::Socket
_b	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder _b;$/;"	m	class:mongo::BSONArrayBuilder
_b	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder &_b;$/;"	m	class:mongo::BSONObjBuilder
_baseMessage	include/mongo/logger/logstream_builder.h	/^        std::string _baseMessage;$/;"	m	class:mongo::logger::LogstreamBuilder
_boundingBox	include/mongo/geo/geometrycollection.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::GeometryCollection
_boundingBox	include/mongo/geo/linestring.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::LineString
_boundingBox	include/mongo/geo/multilinestring.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::MultiLineString
_boundingBox	include/mongo/geo/multipoint.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::MultiPoint
_boundingBox	include/mongo/geo/multipolygon.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::MultiPolygon
_boundingBox	include/mongo/geo/point.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::Point
_boundingBox	include/mongo/geo/polygon.h	/^        mutable boost::scoped_ptr<BoundingBox<TCoordinates> > _boundingBox;$/;"	m	class:mongo::geo::Polygon
_bson	include/mongo/geo/geometrycollection.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::GeometryCollection
_bson	include/mongo/geo/linestring.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::LineString
_bson	include/mongo/geo/multilinestring.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::MultiLineString
_bson	include/mongo/geo/multipoint.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::MultiPoint
_bson	include/mongo/geo/multipolygon.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::MultiPolygon
_bson	include/mongo/geo/point.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::Point
_bson	include/mongo/geo/polygon.h	/^        BSONObj _bson;$/;"	m	class:mongo::geo::Polygon
_buf	BasicSocket.h	/^            char *_buf;$/;"	m	class:Network::BasicSocket
_buf	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder _buf;$/;"	m	class:mongo::BSONObjBuilder
_buf	include/mongo/bson/util/builder.h	/^        _BufBuilder<Allocator> _buf;$/;"	m	class:mongo::StringBuilderImpl
_buf	include/mongo/db/json.h	/^            const char* const _buf;$/;"	m	class:mongo::JParse
_buf	include/mongo/util/net/message.h	/^        char* _buf;$/;"	m	class:mongo::Message
_builder	include/mongo/bson/bsonmisc.h	/^        BSONObjBuilder * _builder;$/;"	m	class:mongo::BSONObjBuilderValueStream
_builder	include/mongo/client/bulk_update_builder.h	/^        BulkOperationBuilder* const _builder;$/;"	m	class:mongo::BulkUpdateBuilder
_builder	include/mongo/client/bulk_upsert_builder.h	/^        BulkOperationBuilder* const _builder;$/;"	m	class:mongo::BulkUpsertBuilder
_bytes	include/mongo/base/data_view.h	/^        bytes_type _bytes;$/;"	m	class:mongo::ConstDataView
_bytesIn	include/mongo/util/net/sock.h	/^        long long _bytesIn;$/;"	m	class:mongo::Socket
_bytesOut	include/mongo/util/net/sock.h	/^        long long _bytesOut;$/;"	m	class:mongo::Socket
_c	include/mongo/client/dbclientcursor.h	/^        DBClientCursor &_c;$/;"	m	class:mongo::DBClientCursorBatchIterator
_cachedAvailableOptions	include/mongo/client/dbclientinterface.h	/^        enum QueryOptions _cachedAvailableOptions;$/;"	m	class:mongo::DBClientWithCommands	typeref:enum:mongo::DBClientWithCommands::QueryOptions
_callShutdownAtExit	include/mongo/client/options.h	/^        bool _callShutdownAtExit;$/;"	m	class:mongo::client::Options
_chunkSize	include/mongo/client/gridfs.h	/^        const size_t _chunkSize; \/\/ taken from GridFS in the constructor$/;"	m	class:mongo::GridFileBuilder
_chunkSize	include/mongo/client/gridfs.h	/^        unsigned int _chunkSize;$/;"	m	class:mongo::GridFS
_chunksNS	include/mongo/client/gridfs.h	/^        std::string _chunksNS;$/;"	m	class:mongo::GridFS
_client	include/mongo/client/bulk_operation_builder.h	/^        DBClientBase* const _client;$/;"	m	class:mongo::BulkOperationBuilder
_client	include/mongo/client/dbclientcursor.h	/^        DBClientBase* _client;$/;"	m	class:mongo::DBClientCursor
_client	include/mongo/client/gridfs.h	/^        DBClientBase& _client;$/;"	m	class:mongo::GridFS
_codePath	Grading.h	/^    std::string _codePath;$/;"	m	class:CCompile
_codePath	Grading.h	/^    std::string _codePath;$/;"	m	class:Compile
_codePath	Grading.h	/^    std::string _codePath;$/;"	m	class:Grading
_codePath	Grading.h	/^    std::string _codePath;$/;"	m	class:JavaCompile
_commandWriter	include/mongo/client/dbclientinterface.h	/^        const boost::scoped_ptr<DBClientWriter> _commandWriter;$/;"	m	class:mongo::DBClientBase
_compile_opt	Grading.cpp	/^std::map<std::string, std::string> Compile::_compile_opt;$/;"	m	class:Compile	file:
_compile_opt	Grading.h	/^    static std::map<std::string, std::string> _compile_opt;$/;"	m	class:Compile
_compiler	Grading.h	/^    Compile *_compiler;$/;"	m	class:Grading
_compiler	Grading.h	/^    std::string _compiler;$/;"	m	class:CCompile
_compiler	Grading.h	/^    std::string _compiler;$/;"	m	class:Compile
_compiler	Grading.h	/^    std::string _compiler;$/;"	m	class:JavaCompile
_component	include/mongo/logger/logstream_builder.h	/^        LogComponent _component;$/;"	m	class:mongo::logger::LogstreamBuilder
_component	include/mongo/logger/message_event.h	/^        LogComponent _component;$/;"	m	class:mongo::logger::MessageEventEphemeral
_conn	JudgeServer.h	/^    std::vector<InetSocket *> _conn;$/;"	m	class:JudgeServer
_connectHook	include/mongo/client/dbclientinterface.h	/^        static ConnectionHook* _connectHook;$/;"	m	class:mongo::ConnectionString
_connectHookMutex	include/mongo/client/dbclientinterface.h	/^        static boost::mutex _connectHookMutex;$/;"	m	class:mongo::ConnectionString
_connectionId	include/mongo/client/dbclientinterface.h	/^        long long _connectionId; \/\/ unique connection id for this connection$/;"	m	class:mongo::DBClientBase
_connectionId	include/mongo/util/net/message_port.h	/^        long long _connectionId;$/;"	m	class:mongo::AbstractMessagingPort
_contextName	include/mongo/logger/logstream_builder.h	/^        std::string _contextName;$/;"	m	class:mongo::logger::LogstreamBuilder
_contextName	include/mongo/logger/message_event.h	/^        StringData _contextName;$/;"	m	class:mongo::logger::MessageEventEphemeral
_coords	include/mongo/geo/point.h	/^        TCoordinates _coords;$/;"	m	class:mongo::geo::Point
_cur	include/mongo/bson/bsonobjiterator.h	/^        int _cur;$/;"	m	class:mongo::BSONIteratorSorted
_currentChunk	include/mongo/client/gridfs.h	/^        unsigned int _currentChunk;$/;"	m	class:mongo::GridFileBuilder
_currentIndex	include/mongo/client/bulk_operation_builder.h	/^        size_t _currentIndex;$/;"	m	class:mongo::BulkOperationBuilder
_data	include/mongo/base/encoded_value_storage.h	/^        char _data[sizeof(Layout)];$/;"	m	class:mongo::EncodedValueStorage
_data	include/mongo/base/string_data.h	/^        const char* _data;        \/\/ is not guaranted to be null terminated (see "notes" above)$/;"	m	class:mongo::StringData
_data	include/mongo/bson/oid.h	/^        char _data[kOIDSize];$/;"	m	class:mongo::OID
_data	include/mongo/client/gridfs.h	/^        BSONObj _data;$/;"	m	class:mongo::GridFSChunk
_data	include/mongo/util/net/message.h	/^            view_type _data;$/;"	m	class:mongo::MSGHEADER::ConstView
_data	include/mongo/util/net/message.h	/^        MsgVec _data;$/;"	m	class:mongo::Message
_database	include/mongo/client/dbclientinterface.h	/^        std::string _database;$/;"	m	class:mongo::ConnectionString
_date	include/mongo/logger/message_event.h	/^        Date_t _date;$/;"	m	class:mongo::logger::MessageEventEphemeral
_dbName	include/mongo/client/gridfs.h	/^        std::string _dbName;$/;"	m	class:mongo::GridFS
_default	include/mongo/bson/bson_field.h	/^        T _default;$/;"	m	class:mongo::BSONField
_defaultLocalThresholdMillis	include/mongo/client/options.h	/^        int _defaultLocalThresholdMillis;$/;"	m	class:mongo::client::Options
_defaultSet	include/mongo/bson/bson_field.h	/^        bool _defaultSet;$/;"	m	class:mongo::BSONField
_domain	include/mongo/logger/logstream_builder.h	/^        MessageLogDomain* _domain;$/;"	m	class:mongo::logger::LogstreamBuilder
_domains	include/mongo/logger/log_manager.h	/^        DomainsByNameMap _domains;$/;"	m	class:mongo::logger::LogManager
_done	include/mongo/bson/bsonobjbuilder.h	/^        char* _done() {$/;"	f	class:mongo::BSONObjBuilder
_doneCalled	include/mongo/bson/bsonobjbuilder.h	/^        bool _doneCalled;$/;"	m	class:mongo::BSONObjBuilder
_dynamicName	include/mongo/client/index_spec.h	/^        bool _dynamicName;$/;"	m	class:mongo::IndexSpec
_ed	PollManager.h	/^        EpollDescriptor _ed;$/;"	m	class:PollManager
_ei	include/mongo/util/assert_util.h	/^        ExceptionInfo _ei;$/;"	m	class:mongo::DBException
_enabled	include/mongo/client/write_concern.h	/^        std::bitset<kNumOptions> _enabled;$/;"	m	class:mongo::WriteConcern
_error	include/mongo/base/status-inl.h	/^        : _error(other._error) {$/;"	f	namespace:mongo
_error	include/mongo/base/status.h	/^        ErrorInfo* _error;$/;"	m	class:mongo::Status
_errorString	include/mongo/client/exceptions.h	/^        const std::string _errorString;$/;"	m	class:mongo::OperationException
_executed	include/mongo/client/bulk_operation_builder.h	/^        bool _executed;$/;"	m	class:mongo::BulkOperationBuilder
_extra	include/mongo/util/net/sock.h	/^        std::string _extra;$/;"	m	class:mongo::SocketException
_failed	include/mongo/client/dbclientinterface.h	/^        bool _failed;$/;"	m	class:mongo::DBClientConnection
_fd	BasicSocket.h	/^            FileDescriptor _fd;$/;"	m	class:Network::BasicSocket
_fd	include/mongo/util/net/sock.h	/^        int _fd;$/;"	m	class:mongo::Socket
_fdCreationMicroSec	include/mongo/util/net/sock.h	/^        uint64_t _fdCreationMicroSec;$/;"	m	class:mongo::Socket
_fieldName	include/mongo/bson/bsonmisc.h	/^        StringData _fieldName;$/;"	m	class:mongo::BSONObjBuilderValueStream
_fields	include/mongo/bson/bsonobjiterator.h	/^        const char ** _fields;$/;"	m	class:mongo::BSONIteratorSorted
_fields	include/mongo/client/dbclientinterface.h	/^        BSONObj _fields;$/;"	m	class:mongo::QuerySpec
_fileId	include/mongo/client/gridfs.h	/^        OID _fileId;$/;"	m	class:mongo::GridFileBuilder
_fileIdObj	include/mongo/client/gridfs.h	/^        BSONObj _fileIdObj;$/;"	m	class:mongo::GridFileBuilder
_fileLength	include/mongo/client/gridfs.h	/^        gridfs_offset _fileLength;$/;"	m	class:mongo::GridFileBuilder
_filesNS	include/mongo/client/gridfs.h	/^        std::string _filesNS;$/;"	m	class:mongo::GridFS
_freeIt	include/mongo/util/net/message.h	/^        bool _freeIt;$/;"	m	class:mongo::Message
_from	include/mongo/util/net/message.h	/^        SockAddr _from;$/;"	m	class:mongo::Message
_fsync	include/mongo/client/write_concern.h	/^        bool _fsync;$/;"	m	class:mongo::WriteConcern
_geometries	include/mongo/geo/geometrycollection.h	/^        std::vector<const GeoObj<TCoordinates>*> _geometries;$/;"	m	class:mongo::geo::GeometryCollection
_getStringType	include/mongo/util/net/sock.h	/^        static std::string _getStringType( Type t ){$/;"	f	class:mongo::SocketException
_globalDomain	include/mongo/logger/log_manager.h	/^        ComponentMessageLogDomain _globalDomain;$/;"	m	class:mongo::logger::LogManager
_grid	include/mongo/client/gridfs.h	/^        GridFS* const _grid;$/;"	m	class:mongo::GridFileBuilder
_grid	include/mongo/client/gridfs.h	/^        const GridFS * _grid;$/;"	m	class:mongo::GridFile
_handler	PollManager.h	/^        PollHandler *_handler;$/;"	m	class:PollManager
_hasMinimumLoggedSeverity	include/mongo/logger/log_component_settings.h	/^        bool _hasMinimumLoggedSeverity[LogComponent::kNumLogComponents];$/;"	m	class:mongo::logger::LogComponentSettings
_hasModifiedCount	include/mongo/client/write_result.h	/^        bool _hasModifiedCount;$/;"	m	class:mongo::WriteResult
_haveCachedAvailableOptions	include/mongo/client/dbclientinterface.h	/^        bool _haveCachedAvailableOptions;$/;"	m	class:mongo::DBClientWithCommands
_holder	include/mongo/util/shared_buffer.h	/^        boost::intrusive_ptr<Holder> _holder;$/;"	m	class:mongo::SharedBuffer
_host	include/mongo/util/net/hostandport.h	/^        std::string _host;$/;"	m	struct:mongo::HostAndPort
_i	include/mongo/bson/bsonobjbuilder.h	/^        int _i;$/;"	m	class:mongo::BSONArrayBuilder
_id	Thread.h	/^        pthread_t _id;$/;"	m	class:Thread::Thread
_increment	include/mongo/bson/timestamp.h	/^        const uint32_t _increment;$/;"	m	class:mongo::Timestamp_t
_index	include/mongo/logger/log_domain.h	/^            size_t _index;$/;"	m	class:mongo::logger::LogDomain::AppenderHandle
_input	include/mongo/db/json.h	/^            const char* _input;$/;"	m	class:mongo::JParse
_input_end	include/mongo/db/json.h	/^            const char* const _input_end;$/;"	m	class:mongo::JParse
_isValid	include/mongo/util/net/sock.h	/^        bool _isValid;$/;"	m	struct:mongo::SockAddr
_j	include/mongo/client/write_concern.h	/^        bool _j;$/;"	m	class:mongo::WriteConcern
_jud_man	JudgeServer.h	/^    JudgeManager _jud_man;$/;"	m	class:JudgeServer
_judges	JudgeManager.h	/^    std::vector<Judge> _judges;$/;"	m	class:JudgeManager
_keys	include/mongo/client/index_spec.h	/^        mutable BSONObjBuilder _keys;$/;"	m	class:mongo::IndexSpec
_label	include/mongo/logger/labeled_level.h	/^        std::string _label;$/;"	m	class:mongo::logger::LabeledLevel
_lastClient	include/mongo/client/dbclient_rs.h	/^            DBClientConnection* _lastClient;$/;"	m	class:mongo::DBClientReplicaSet::LazyState
_lastError	include/mongo/client/exceptions.h	/^        const BSONObj _lastError;$/;"	m	class:mongo::OperationException
_lastErrorTimeMillis	include/mongo/util/time_support.h	/^        unsigned long long _lastErrorTimeMillis;$/;"	m	class:mongo::Backoff
_lastOp	include/mongo/client/dbclient_rs.h	/^            int _lastOp;$/;"	m	class:mongo::DBClientReplicaSet::LazyState
_lastReadPref	include/mongo/client/dbclient_rs.h	/^        boost::shared_ptr<ReadPreferenceSetting> _lastReadPref;$/;"	m	class:mongo::DBClientReplicaSet
_lastSlaveOkConn	include/mongo/client/dbclient_rs.h	/^        std::auto_ptr<DBClientConnection> _lastSlaveOkConn;$/;"	m	class:mongo::DBClientReplicaSet
_lastSlaveOkHost	include/mongo/client/dbclient_rs.h	/^        HostAndPort _lastSlaveOkHost;$/;"	m	class:mongo::DBClientReplicaSet
_lastSleepMillis	include/mongo/util/time_support.h	/^        int _lastSleepMillis;$/;"	m	class:mongo::Backoff
_lastValidityCheckAtSecs	include/mongo/util/net/sock.h	/^        time_t _lastValidityCheckAtSecs;$/;"	m	class:mongo::Socket
_latitude	include/mongo/geo/coordinates2dgeographic.h	/^        double _latitude;$/;"	m	class:mongo::geo::Coordinates2DGeographic
_lazyHost	include/mongo/client/dbclientcursor.h	/^        std::string _lazyHost;$/;"	m	class:mongo::DBClientCursor
_lazyKillCursor	include/mongo/client/dbclientinterface.h	/^        static bool _lazyKillCursor; \/\/ lazy means we piggy back kill cursors on next op$/;"	m	class:mongo::DBClientConnection
_lazyState	include/mongo/client/dbclient_rs.h	/^        } _lazyState;$/;"	m	class:mongo::DBClientReplicaSet	typeref:class:mongo::DBClientReplicaSet::LazyState
_level	include/mongo/logger/labeled_level.h	/^        int _level;$/;"	m	class:mongo::logger::LabeledLevel
_lineStrings	include/mongo/geo/multilinestring.h	/^        std::vector<LineString<TCoordinates> > _lineStrings;$/;"	m	class:mongo::geo::MultiLineString
_linearRings	include/mongo/geo/polygon.h	/^        std::vector<LineString<TCoordinates> > _linearRings;$/;"	m	class:mongo::geo::Polygon
_local	include/mongo/util/net/sock.h	/^        SockAddr _local;$/;"	m	class:mongo::Socket
_logLevel	include/mongo/client/dbclientinterface.h	/^        logger::LogSeverity _logLevel;$/;"	m	class:mongo::DBClientWithCommands
_logLevel	include/mongo/util/net/sock.h	/^        logger::LogSeverity _logLevel; \/\/ passed to log() when logging errors$/;"	m	class:mongo::Socket
_longitude	include/mongo/geo/coordinates2dgeographic.h	/^        double _longitude;$/;"	m	class:mongo::geo::Coordinates2DGeographic
_master	include/mongo/client/dbclient_rs.h	/^        boost::scoped_ptr<DBClientConnection> _master;$/;"	m	class:mongo::DBClientReplicaSet
_masterHost	include/mongo/client/dbclient_rs.h	/^        HostAndPort _masterHost;$/;"	m	class:mongo::DBClientReplicaSet
_max	include/mongo/geo/boundingbox.h	/^        TCoordinates _max;$/;"	m	class:mongo::geo::BoundingBox
_maxBsonObjectSize	include/mongo/client/dbclientinterface.h	/^        int _maxBsonObjectSize;$/;"	m	class:mongo::DBClientBase
_maxMessageSizeBytes	include/mongo/client/dbclientinterface.h	/^        int _maxMessageSizeBytes;$/;"	m	class:mongo::DBClientBase
_maxSleepMillis	include/mongo/util/time_support.h	/^        int _maxSleepMillis;$/;"	m	class:mongo::Backoff
_maxWireVersion	include/mongo/client/dbclientinterface.h	/^        int _maxWireVersion;$/;"	m	class:mongo::DBClientWithCommands
_maxWriteBatchSize	include/mongo/client/dbclientinterface.h	/^        int _maxWriteBatchSize;$/;"	m	class:mongo::DBClientBase
_message	include/mongo/logger/message_event.h	/^        StringData _message;$/;"	m	class:mongo::logger::MessageEventEphemeral
_min	include/mongo/geo/boundingbox.h	/^        TCoordinates _min;$/;"	m	class:mongo::geo::BoundingBox
_minLoggedSeverity	include/mongo/client/options.h	/^        logger::LogSeverity _minLoggedSeverity;$/;"	m	class:mongo::client::Options
_minWireVersion	include/mongo/client/dbclientinterface.h	/^        int _minWireVersion;$/;"	m	class:mongo::DBClientWithCommands
_minimumLoggedSeverity	include/mongo/logger/log_component_settings.h	/^        char _minimumLoggedSeverity[LogComponent::kNumLogComponents];$/;"	m	class:mongo::logger::LogComponentSettings
_n	include/mongo/client/dbclientcursor.h	/^        int _n;$/;"	m	class:mongo::DBClientCursorBatchIterator
_nInserted	include/mongo/client/write_result.h	/^        int _nInserted;$/;"	m	class:mongo::WriteResult
_nMatched	include/mongo/client/write_result.h	/^        int _nMatched;$/;"	m	class:mongo::WriteResult
_nModified	include/mongo/client/write_result.h	/^        int _nModified;$/;"	m	class:mongo::WriteResult
_nRemoved	include/mongo/client/write_result.h	/^        int _nRemoved;$/;"	m	class:mongo::WriteResult
_nUpserted	include/mongo/client/write_result.h	/^        int _nUpserted;$/;"	m	class:mongo::WriteResult
_name	include/mongo/bson/bson_field.h	/^        std::string _name;$/;"	m	class:mongo::BSONField
_name	include/mongo/bson/bson_field.h	/^        std::string _name;$/;"	m	class:mongo::BSONFieldValue
_name	include/mongo/client/index_spec.h	/^        std::string _name;$/;"	m	class:mongo::IndexSpec
_nfields	include/mongo/bson/bsonobjiterator.h	/^        int _nfields;$/;"	m	class:mongo::BSONIteratorSorted
_nonblock	BasicSocket.h	/^            bool _nonblock;$/;"	m	class:Network::BasicSocket
_ns	include/mongo/client/bulk_operation_builder.h	/^        const std::string _ns;$/;"	m	class:mongo::BulkOperationBuilder
_ns	include/mongo/client/dbclientinterface.h	/^        std::string _ns;$/;"	m	class:mongo::QuerySpec
_ntoreturn	include/mongo/client/dbclientinterface.h	/^        int _ntoreturn;$/;"	m	class:mongo::QuerySpec
_ntoskip	include/mongo/client/dbclientinterface.h	/^        int _ntoskip;$/;"	m	class:mongo::QuerySpec
_numConnections	include/mongo/client/dbclientinterface.h	/^        static AtomicInt32 _numConnections;$/;"	m	class:mongo::DBClientConnection
_numberDouble	include/mongo/bson/bsonelement.h	/^        double _numberDouble() const {$/;"	f	class:mongo::BSONElement
_numberInt	include/mongo/bson/bsonelement.h	/^        int _numberInt() const {$/;"	f	class:mongo::BSONElement
_numberLong	include/mongo/bson/bsonelement.h	/^        long long _numberLong() const {$/;"	f	class:mongo::BSONElement
_obj	include/mongo/client/gridfs.h	/^        BSONObj        _obj;$/;"	m	class:mongo::GridFile
_objdata	include/mongo/bson/bsonobj.h	/^        const char* _objdata;$/;"	m	class:mongo::BSONObj
_offset	include/mongo/bson/bsonobjbuilder.h	/^        int _offset;$/;"	m	class:mongo::BSONObjBuilder
_options	include/mongo/client/dbclientinterface.h	/^        BSONObj _options;$/;"	m	class:mongo::ConnectionString
_options	include/mongo/client/dbclientinterface.h	/^        int _options;$/;"	m	class:mongo::QuerySpec
_options	include/mongo/client/index_spec.h	/^        mutable BSONObjBuilder _options;$/;"	m	class:mongo::IndexSpec
_order	include/mongo/bson/bsonmisc.h	/^        BSONObj _order;$/;"	m	class:mongo::BSONObjCmp
_ordered	include/mongo/client/bulk_operation_builder.h	/^        const bool _ordered;$/;"	m	class:mongo::BulkOperationBuilder
_originalHost	include/mongo/client/dbclientcursor.h	/^        std::string _originalHost;$/;"	m	class:mongo::DBClientCursor
_os	include/mongo/logger/logstream_builder.h	/^        std::ostringstream* _os;$/;"	m	class:mongo::logger::LogstreamBuilder
_ownCursor	include/mongo/client/dbclientcursor.h	/^        bool _ownCursor; \/\/ see decouple()$/;"	m	class:mongo::DBClientCursor
_ownedBuffer	include/mongo/bson/bsonobj.h	/^        SharedBuffer _ownedBuffer;$/;"	m	class:mongo::BSONObj
_password	include/mongo/client/dbclientinterface.h	/^        std::string _password;$/;"	m	class:mongo::ConnectionString
_pendingData	include/mongo/client/gridfs.h	/^        boost::scoped_array<char> _pendingData; \/\/ pointer with _chunkSize space$/;"	m	class:mongo::GridFileBuilder
_pendingDataSize	include/mongo/client/gridfs.h	/^        size_t _pendingDataSize;$/;"	m	class:mongo::GridFileBuilder
_pm	JudgeServer.h	/^    PollManager _pm;$/;"	m	class:JudgeServer
_points	include/mongo/geo/linestring.h	/^        std::vector<Point<TCoordinates> > _points;$/;"	m	class:mongo::geo::LineString
_points	include/mongo/geo/multipoint.h	/^        std::vector<Point<TCoordinates> > _points;$/;"	m	class:mongo::geo::MultiPoint
_polygons	include/mongo/geo/multipolygon.h	/^        std::vector<Polygon<TCoordinates> > _polygons;$/;"	m	class:mongo::geo::MultiPolygon
_port	include/mongo/util/net/hostandport.h	/^        int _port; \/\/ -1 indicates unspecified$/;"	m	struct:mongo::HostAndPort
_pos	include/mongo/bson/bsonmisc.h	/^        int _pos;$/;"	m	class:mongo::BSONSizeTracker
_pos	include/mongo/bson/bsonobjiterator.h	/^        const char* _pos;$/;"	m	class:mongo::BSONObjIterator
_postRunCommandHook	include/mongo/client/dbclientinterface.h	/^        PostRunCommandHookFunc _postRunCommandHook;$/;"	m	class:mongo::DBClientWithCommands
_prefix	include/mongo/client/gridfs.h	/^        std::string _prefix;$/;"	m	class:mongo::GridFS
_putBack	include/mongo/client/dbclientcursor.h	/^        std::stack< BSONObj > _putBack;$/;"	m	class:mongo::DBClientCursor
_q	Grading.h	/^    question _q;$/;"	m	class:Grading
_q_list	Judge.h	/^    std::vector<question> _q_list;$/;"	m	class:Judge
_query	include/mongo/client/dbclientinterface.h	/^        BSONObj _query;$/;"	m	class:mongo::QuerySpec
_queryObj	include/mongo/client/dbclientinterface.h	/^        Query _queryObj;$/;"	m	class:mongo::QuerySpec
_refCount	include/mongo/util/shared_buffer.h	/^            AtomicUInt32 _refCount;$/;"	m	class:mongo::SharedBuffer::Holder
_remote	include/mongo/util/net/sock.h	/^        SockAddr _remote;$/;"	m	class:mongo::Socket
_remoteParsed	include/mongo/util/net/message_port.h	/^        mutable HostAndPort _remoteParsed; $/;"	m	class:mongo::MessagingPort
_requiresDetailedInsertResults	include/mongo/client/write_result.h	/^        bool _requiresDetailedInsertResults;$/;"	m	class:mongo::WriteResult
_resetAfterMillis	include/mongo/util/time_support.h	/^        int _resetAfterMillis;$/;"	m	class:mongo::Backoff
_retries	include/mongo/client/dbclient_rs.h	/^            int _retries;$/;"	m	class:mongo::DBClientReplicaSet::LazyState
_runCommandHook	include/mongo/client/dbclientinterface.h	/^        RunCommandHookFunc _runCommandHook;$/;"	m	class:mongo::DBClientWithCommands
_running	Thread.h	/^        bool _running;$/;"	m	class:Thread::Thread
_s	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilderValueStream _s;$/;"	m	class:mongo::BSONObjBuilder
_scopedHost	include/mongo/client/dbclientcursor.h	/^        std::string _scopedHost;$/;"	m	class:mongo::DBClientCursor
_secondaryQueryOk	include/mongo/client/dbclient_rs.h	/^            bool _secondaryQueryOk;$/;"	m	class:mongo::DBClientReplicaSet::LazyState
_seconds	include/mongo/bson/timestamp.h	/^        const uint32_t _seconds;$/;"	m	class:mongo::Timestamp_t
_selector	include/mongo/client/bulk_update_builder.h	/^        const BSONObj& _selector;$/;"	m	class:mongo::BulkUpdateBuilder
_selector	include/mongo/client/bulk_upsert_builder.h	/^        const BSONObj _selector;$/;"	m	class:mongo::BulkUpsertBuilder
_sema	SemaphoreObejct.h	/^        sem_t _sema;$/;"	m	class:Thread::SemaphoreObejct
_serv	JudgeServer.h	/^    ServerSocket _serv;$/;"	m	class:JudgeServer
_server	include/mongo/client/dbclientinterface.h	/^        HostAndPort _server; \/\/ remember for reconnects$/;"	m	class:mongo::DBClientConnection
_server	include/mongo/util/net/sock.h	/^        std::string _server;$/;"	m	class:mongo::SocketException
_serverAddrString	include/mongo/client/dbclientinterface.h	/^        std::string _serverAddrString; \/\/ resolved ip of server$/;"	m	class:mongo::DBClientConnection
_serverString	include/mongo/client/dbclientinterface.h	/^        std::string _serverString;     \/\/ server host and port$/;"	m	class:mongo::DBClientConnection
_servers	include/mongo/client/dbclientinterface.h	/^        std::vector<HostAndPort> _servers;$/;"	m	class:mongo::ConnectionString
_setData	include/mongo/util/net/message.h	/^        void _setData( char* d, bool freeIt ) {$/;"	f	class:mongo::Message
_setName	include/mongo/client/dbclient_rs.h	/^        std::string _setName;$/;"	m	class:mongo::DBClientReplicaSet
_setName	include/mongo/client/dbclientinterface.h	/^        std::string _setName;$/;"	m	class:mongo::ConnectionString
_settings	include/mongo/logger/component_message_log_domain.h	/^        LogComponentSettings _settings;$/;"	m	class:mongo::logger::ComponentMessageLogDomain
_severity	include/mongo/logger/log_severity.h	/^        int _severity;$/;"	m	class:mongo::logger::LogSeverity
_severity	include/mongo/logger/logstream_builder.h	/^        LogSeverity _severity;$/;"	m	class:mongo::logger::LogstreamBuilder
_severity	include/mongo/logger/message_event.h	/^        LogSeverity _severity;$/;"	m	class:mongo::logger::MessageEventEphemeral
_shard	include/mongo/util/assert_util.h	/^        std::string _shard;$/;"	m	class:mongo::DBException
_size	include/mongo/base/string_data.h	/^        size_t _size;     \/\/ 'size' does not include the null terminator$/;"	m	class:mongo::StringData
_sizes	include/mongo/bson/bsonmisc.h	/^        int _sizes[SIZE];$/;"	m	class:mongo::BSONSizeTracker
_so_timeout	include/mongo/client/dbclient_rs.h	/^        double _so_timeout;$/;"	m	class:mongo::DBClientReplicaSet
_so_timeout	include/mongo/client/dbclientinterface.h	/^        double _so_timeout;$/;"	m	class:mongo::DBClientConnection
_socket	ServerSocket.h	/^            InetSocket _socket;$/;"	m	class:Network::ServerSocket
_sslAllowInvalidCertificates	include/mongo/client/options.h	/^        bool _sslAllowInvalidCertificates;$/;"	m	class:mongo::client::Options
_sslAllowInvalidHostnames	include/mongo/client/options.h	/^        bool _sslAllowInvalidHostnames;$/;"	m	class:mongo::client::Options
_sslCAFile	include/mongo/client/options.h	/^        std::string _sslCAFile;$/;"	m	class:mongo::client::Options
_sslCRLFile	include/mongo/client/options.h	/^        std::string _sslCRLFile;$/;"	m	class:mongo::client::Options
_sslCipherConfig	include/mongo/client/options.h	/^        std::string _sslCipherConfig;$/;"	m	class:mongo::client::Options
_sslConnection	include/mongo/util/net/sock.h	/^        boost::scoped_ptr<SSLConnection> _sslConnection;$/;"	m	class:mongo::Socket
_sslDisabledTLSProtocols	include/mongo/client/options.h	/^        std::vector<TLSProtocol> _sslDisabledTLSProtocols;$/;"	m	class:mongo::client::Options
_sslManager	include/mongo/util/net/sock.h	/^        SSLManagerInterface* _sslManager;$/;"	m	class:mongo::Socket
_sslMode	include/mongo/client/options.h	/^        SSLModes _sslMode;$/;"	m	class:mongo::client::Options
_sslPEMKeyFile	include/mongo/client/options.h	/^        std::string _sslPEMKeyFile;$/;"	m	class:mongo::client::Options
_sslPEMKeyPassword	include/mongo/client/options.h	/^        std::string _sslPEMKeyPassword;$/;"	m	class:mongo::client::Options
_status	include/mongo/base/status_with.h	/^        Status _status;$/;"	m	class:mongo::StatusWith
_status	include/mongo/client/init.h	/^        const Status _status;$/;"	m	class:mongo::client::GlobalInstance
_storage	include/mongo/util/net/message.h	/^            ConstDataView _storage;$/;"	m	class:mongo::MsgData::ConstView
_string	include/mongo/client/dbclientinterface.h	/^        std::string _string;$/;"	m	class:mongo::ConnectionString
_subobj	include/mongo/bson/bsonmisc.h	/^        std::auto_ptr< BSONObjBuilder > _subobj;$/;"	m	class:mongo::BSONObjBuilderValueStream
_t	Timer.h	/^        TimerTask *_t;$/;"	m	class:Timer::Timer
_t	include/mongo/base/status_with.h	/^        T _t;$/;"	m	class:mongo::StatusWith
_t	include/mongo/bson/bson_field.h	/^        T _t;$/;"	m	class:mongo::BSONFieldValue
_tags	include/mongo/client/dbclient_rs.h	/^        BSONArray _tags;$/;"	m	class:mongo::TagSet
_target	Grading.cpp	/^    pid_t _target;$/;"	m	class:KillTimerTask	file:
_tee	include/mongo/logger/logstream_builder.h	/^        Tee* _tee;$/;"	m	class:mongo::logger::LogstreamBuilder
_terminateNeeded	include/mongo/client/init.h	/^        bool _terminateNeeded;$/;"	m	class:mongo::client::GlobalInstance
_theend	include/mongo/bson/bsonobjiterator.h	/^        const char* _theend;$/;"	m	class:mongo::BSONObjIterator
_threads	Thread.cpp	/^std::map<pthread_t, Thread::Thread *> Thread::Thread::_threads;$/;"	m	class:Thread::Thread	file:
_threads	Thread.h	/^        static std::map<pthread_t, Thread *> _threads;$/;"	m	class:Thread::Thread
_time	Timer.h	/^        int _time;$/;"	m	class:Timer::Timer
_timeout	include/mongo/client/write_concern.h	/^        int32_t _timeout;$/;"	m	class:mongo::WriteConcern
_timeout	include/mongo/util/net/sock.h	/^        double _timeout;$/;"	m	class:mongo::Socket
_tracker	include/mongo/bson/bsonobjbuilder.h	/^        BSONSizeTracker * _tracker;$/;"	m	class:mongo::BSONObjBuilder
_type	include/mongo/client/dbclientinterface.h	/^        ConnectionType _type;$/;"	m	class:mongo::ConnectionString
_type	include/mongo/util/net/sock.h	/^        const enum Type { CLOSED , RECV_ERROR , SEND_ERROR, RECV_TIMEOUT, SEND_TIMEOUT, FAILED_STATE, CONNECT_ERROR } _type;$/;"	m	class:mongo::SocketException	typeref:enum:mongo::SocketException::Type
_upserted	include/mongo/client/write_result.h	/^        std::vector<BSONObj> _upserted;$/;"	m	class:mongo::WriteResult
_useFIPSMode	include/mongo/client/options.h	/^        bool _useFIPSMode;$/;"	m	class:mongo::client::Options
_user	include/mongo/client/dbclientinterface.h	/^        std::string _user;$/;"	m	class:mongo::ConnectionString
_validateObjects	include/mongo/client/options.h	/^        bool _validateObjects;$/;"	m	class:mongo::client::Options
_value	include/mongo/logger/log_component.h	/^        Value _value;$/;"	m	class:mongo::logger::LogComponent
_value	include/mongo/platform/atomic_word_cxx11.h	/^        std::atomic<WordType> _value;$/;"	m	class:mongo::AtomicWord
_value	include/mongo/platform/atomic_word_intrinsics.h	/^        volatile WordType _value;$/;"	m	class:mongo::AtomicWord
_view	include/mongo/bson/oid.h	/^        DataView _view() {$/;"	f	class:mongo::OID
_w	include/mongo/client/write_concern.h	/^        int32_t _w;$/;"	m	class:mongo::WriteConcern
_w_str	include/mongo/client/write_concern.h	/^        std::string _w_str;$/;"	m	class:mongo::WriteConcern
_what	Thread.h	/^        std::string _what;$/;"	m	class:Thread::ThreadException
_wireProtocolWriter	include/mongo/client/dbclientinterface.h	/^        const boost::scoped_ptr<DBClientWriter> _wireProtocolWriter;$/;"	m	class:mongo::DBClientBase
_writeConcern	include/mongo/client/dbclientinterface.h	/^        WriteConcern _writeConcern;$/;"	m	class:mongo::DBClientBase
_writeConcernErrors	include/mongo/client/write_result.h	/^        std::vector<BSONObj> _writeConcernErrors;$/;"	m	class:mongo::WriteResult
_writeErrors	include/mongo/client/write_result.h	/^        std::vector<BSONObj> _writeErrors;$/;"	m	class:mongo::WriteResult
_write_operations	include/mongo/client/bulk_operation_builder.h	/^        std::vector<WriteOperation*> _write_operations;$/;"	m	class:mongo::BulkOperationBuilder
_x	include/mongo/geo/coordinates2d.h	/^        double _x;$/;"	m	class:mongo::geo::Coordinates2D
_x509SubjectName	include/mongo/util/net/message_port.h	/^        std::string _x509SubjectName;$/;"	m	class:mongo::AbstractMessagingPort
_y	include/mongo/geo/coordinates2d.h	/^        double _y;$/;"	m	class:mongo::geo::Coordinates2D
abandon	include/mongo/bson/bsonobjbuilder.h	/^        void abandon() {$/;"	f	class:mongo::BSONObjBuilder
accept	BasicSocket.cpp	/^Network::BasicSocket *Network::BasicSocket::accept()$/;"	f	class:Network::BasicSocket
accept	InetSocket.cpp	/^BasicSocket *InetSocket::accept()$/;"	f	class:InetSocket
accept	ServerSocket.cpp	/^InetSocket *ServerSocket::accept()$/;"	f	class:ServerSocket
acknowledged	include/mongo/client/write_concern.h	/^        static const WriteConcern acknowledged;$/;"	m	class:mongo::WriteConcern
addAndFetch	include/mongo/platform/atomic_word_cxx11.h	/^        WordType addAndFetch(WordType increment) {$/;"	f	class:mongo::AtomicWord
addAndFetch	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType addAndFetch(WordType increment) {$/;"	f	class:mongo::AtomicWord
addChildValues_	json.h	/^  bool addChildValues_;$/;"	m	class:Json::StyledWriter
addChildValues_	jsoncpp.cpp	/^  bool addChildValues_ : 1;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
addComment	jsoncpp.cpp	/^OurReader::addComment(Location begin, Location end, CommentPlacement placement) {$/;"	f	class:Json::OurReader
addComment	jsoncpp.cpp	/^Reader::addComment(Location begin, Location end, CommentPlacement placement) {$/;"	f	class:Json::Reader
addContext	include/mongo/util/assert_util.h	/^        virtual void addContext( const std::string& str ) {$/;"	f	class:mongo::DBException
addError	jsoncpp.cpp	/^OurReader::addError(const std::string& message, Token& token, Location extra) {$/;"	f	class:Json::OurReader
addError	jsoncpp.cpp	/^Reader::addError(const std::string& message, Token& token, Location extra) {$/;"	f	class:Json::Reader
addErrorAndRecover	jsoncpp.cpp	/^bool OurReader::addErrorAndRecover(const std::string& message,$/;"	f	class:Json::OurReader
addErrorAndRecover	jsoncpp.cpp	/^bool Reader::addErrorAndRecover(const std::string& message,$/;"	f	class:Json::Reader
addEvent	PollManager.cpp	/^bool PollManager::addEvent(FileDescriptor fd, int events = EPOLLIN)$/;"	f	class:PollManager
addPathInArg	jsoncpp.cpp	/^void Path::addPathInArg(const std::string& \/*path*\/,$/;"	f	class:Json::Path
addressSize	include/mongo/util/net/sock.h	/^        socklen_t addressSize;$/;"	m	struct:mongo::SockAddr
after	include/mongo/util/mongoutils/str.h	/^        inline const char * after(const char *s, char x) {$/;"	f	namespace:mongoutils::str
after	include/mongo/util/mongoutils/str.h	/^        inline const char * after(const char *s, const char *x) {$/;"	f	namespace:mongoutils::str
after	include/mongo/util/mongoutils/str.h	/^        inline std::string after(const std::string& s, char x) {$/;"	f	namespace:mongoutils::str
after	include/mongo/util/mongoutils/str.h	/^        inline std::string after(const std::string& s, const std::string& x) {$/;"	f	namespace:mongoutils::str
al	include/mongo/bson/util/builder.h	/^        Allocator al;$/;"	m	class:mongo::_BufBuilder
all	jsoncpp.cpp	/^Features Features::all() { return Features(); }$/;"	f	class:Json::Features
all	jsoncpp.cpp	/^OurFeatures OurFeatures::all() { return OurFeatures(); }$/;"	f	class:Json::OurFeatures
allocate	include/mongo/util/shared_buffer.h	/^        static SharedBuffer allocate(size_t bytes) {$/;"	f	class:mongo::SharedBuffer
allowComments_	json.h	/^  bool allowComments_;$/;"	m	class:Json::Features
allowComments_	jsoncpp.cpp	/^  bool allowComments_;$/;"	m	class:Json::OurFeatures	file:
allowDroppedNullPlaceholders_	json.h	/^  bool allowDroppedNullPlaceholders_;$/;"	m	class:Json::Features
allowDroppedNullPlaceholders_	jsoncpp.cpp	/^  bool allowDroppedNullPlaceholders_;$/;"	m	class:Json::OurFeatures	file:
allowNumericKeys_	json.h	/^  bool allowNumericKeys_;$/;"	m	class:Json::Features
allowNumericKeys_	jsoncpp.cpp	/^  bool allowNumericKeys_;$/;"	m	class:Json::OurFeatures	file:
allowSingleQuotes_	jsoncpp.cpp	/^  bool allowSingleQuotes_;$/;"	m	class:Json::OurFeatures	file:
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& append(const BSONElement& e) {$/;"	f	class:mongo::BSONArrayBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& append(const T& x) {$/;"	f	class:mongo::BSONArrayBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append( const BSONElement& e) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append( const StringData& fieldName, OID oid ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append( const StringData& fieldName, const Timestamp_t& ts ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, BSONArray arr) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, BSONObj subObj) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, Date_t dt) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, bool val) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONBinData& bd) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONCode& code) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONCodeWScope& cws) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONDBRef& dbref) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONRegEx& regex) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const BSONSymbol& symbol) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const StringData& str) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const char *str) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const char *str, int sz) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, const std::string& str) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, double n) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, int n) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, long long n) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& append(const StringData& fieldName, unsigned n) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONArrayBuilder& BSONArrayBuilder::append( const std::list< T >& vals ) {$/;"	f	class:mongo::BSONArrayBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONArrayBuilder& BSONArrayBuilder::append( const std::set< T >& vals ) {$/;"	f	class:mongo::BSONArrayBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObjBuilder& BSONObjBuilder::append( const StringData& fieldName, const std::list< T >& vals ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObjBuilder& BSONObjBuilder::append( const StringData& fieldName, const std::map< K, T >& vals ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObjBuilder& BSONObjBuilder::append( const StringData& fieldName, const std::set< T >& vals ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONObjBuilder& BSONObjBuilder::append( const StringData& fieldName, const std::vector< T >& vals ) {$/;"	f	class:mongo::BSONObjBuilder
append	include/mongo/bson/util/builder.h	/^        void append( const StringData& str ) { str.copyTo( _buf.grow( str.size() ), false ); }$/;"	f	class:mongo::StringBuilderImpl
append	jsoncpp.cpp	/^Value& Value::append(const Value& value) { return (*this)[size()] = value; }$/;"	f	class:Json::Value
appendArray	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendArray(const StringData& fieldName, const BSONObj &subObj) {$/;"	f	class:mongo::BSONObjBuilder
appendAs	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendAs(const BSONElement& e, const StringData& fieldName) {$/;"	f	class:mongo::BSONObjBuilder
appendBinData	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendBinData(int len, BinDataType type, const void* data) {$/;"	f	class:mongo::BSONArrayBuilder
appendBinData	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendBinData( const StringData& fieldName, int len, BinDataType type, const void *data ) {$/;"	f	class:mongo::BSONObjBuilder
appendBinDataArrayDeprecated	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendBinDataArrayDeprecated( const char * fieldName , const void * data , int len ) {$/;"	f	class:mongo::BSONObjBuilder
appendBool	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendBool(bool val) {$/;"	f	class:mongo::BSONArrayBuilder
appendBool	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendBool(const StringData& fieldName, int val) {$/;"	f	class:mongo::BSONObjBuilder
appendBuf	include/mongo/bson/util/builder.h	/^        void appendBuf(const void *src, size_t len) {$/;"	f	class:mongo::_BufBuilder
appendChar	include/mongo/bson/util/builder.h	/^        void appendChar(char j) {$/;"	f	class:mongo::_BufBuilder
appendCode	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendCode(const StringData& code) {$/;"	f	class:mongo::BSONArrayBuilder
appendCode	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendCode(const StringData& fieldName, const StringData& code) {$/;"	f	class:mongo::BSONObjBuilder
appendCodeWScope	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendCodeWScope(const StringData& code, const BSONObj& scope) {$/;"	f	class:mongo::BSONArrayBuilder
appendCodeWScope	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendCodeWScope( const StringData& fieldName, const StringData& code, const BSONObj &scope ) {$/;"	f	class:mongo::BSONObjBuilder
appendComplex	include/mongo/client/dbclientinterface.h	/^        void appendComplex( const char *fieldName, const T& val ) {$/;"	f	class:mongo::Query
appendDBRef	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendDBRef( const StringData& fieldName, const StringData& ns, const OID &oid ) {$/;"	f	class:mongo::BSONObjBuilder
appendData	include/mongo/util/net/message.h	/^        void appendData(char *d, int size) {$/;"	f	class:mongo::Message
appendDate	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendDate(Date_t dt) {$/;"	f	class:mongo::BSONArrayBuilder
appendDoubleNice	include/mongo/bson/util/builder.h	/^        void appendDoubleNice( double x ) {$/;"	f	class:mongo::StringBuilderImpl
appendIntOrLL	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendIntOrLL( const StringData& fieldName , long long n ) {$/;"	f	class:mongo::BSONObjBuilder
appendMaxKey	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendMaxKey( const StringData& fieldName ) {$/;"	f	class:mongo::BSONObjBuilder
appendMinKey	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendMinKey( const StringData& fieldName ) {$/;"	f	class:mongo::BSONObjBuilder
appendNull	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendNull( const StringData& fieldName ) {$/;"	f	class:mongo::BSONObjBuilder
appendNull	include/mongo/bson/bsonobjbuilder.h	/^        void appendNull() {$/;"	f	class:mongo::BSONArrayBuilder
appendNull	include/mongo/bson/bsonobjbuilder.h	/^        void appendNull() {$/;"	f	class:mongo::BSONObjBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(bool j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(char j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(double j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(int j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(long long j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(short j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(unsigned j) {$/;"	f	class:mongo::_BufBuilder
appendNum	include/mongo/bson/util/builder.h	/^        void appendNum(unsigned long long j) {$/;"	f	class:mongo::_BufBuilder
appendNumImpl	include/mongo/bson/util/builder.h	/^        void appendNumImpl(T t) {$/;"	f	class:mongo::_BufBuilder
appendNumber	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendNumber( const StringData& fieldName , double d ) {$/;"	f	class:mongo::BSONObjBuilder
appendNumber	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendNumber( const StringData& fieldName , int n ) {$/;"	f	class:mongo::BSONObjBuilder
appendNumber	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendNumber( const StringData& fieldName , size_t n ) {$/;"	f	class:mongo::BSONObjBuilder
appendNumber	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendNumber( const StringData& fieldName, long long llNumber ) {$/;"	f	class:mongo::BSONObjBuilder
appendOID	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendOID(const StringData& fieldName, OID *oid = 0 , bool generateIfBlank = false ) {$/;"	f	class:mongo::BSONObjBuilder
appendObject	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendObject(const StringData& fieldName, const char * objdata , int size = 0 ) {$/;"	f	class:mongo::BSONObjBuilder
appendPrefix	include/mongo/util/assert_util.h	/^        virtual void appendPrefix( std::stringstream& ss ) const { }$/;"	f	class:mongo::DBException
appendRegex	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendRegex(const StringData& regex, const StringData& options = "") {$/;"	f	class:mongo::BSONArrayBuilder
appendRegex	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendRegex(const StringData& fieldName, const StringData& regex, const StringData& options = "") {$/;"	f	class:mongo::BSONObjBuilder
appendSelfToBufBuilder	include/mongo/bson/bsonobj.h	/^        void appendSelfToBufBuilder(BufBuilder& b) const {$/;"	f	class:mongo::BSONObj
appendStr	include/mongo/bson/util/builder.h	/^        void appendStr(const StringData &str , bool includeEndingNull = true ) {$/;"	f	class:mongo::_BufBuilder
appendStruct	include/mongo/bson/util/builder.h	/^        void appendStruct(const T& s) {$/;"	f	class:mongo::_BufBuilder
appendSymbol	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendSymbol(const StringData& fieldName, const StringData& symbol) {$/;"	f	class:mongo::BSONObjBuilder
appendTimeT	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& appendTimeT(time_t dt) {$/;"	f	class:mongo::BSONArrayBuilder
appendTimeT	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendTimeT(const StringData& fieldName, time_t dt) {$/;"	f	class:mongo::BSONObjBuilder
appendTimestamp	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& appendTimestamp( const StringData& fieldName , const Timestamp_t& ts = Timestamp_t() ) {$/;"	f	class:mongo::BSONObjBuilder
appendUChar	include/mongo/bson/util/builder.h	/^        void appendUChar(unsigned char j) {$/;"	f	class:mongo::_BufBuilder
appendUndefined	include/mongo/bson/bsonobjbuilder.h	/^        void appendUndefined( const StringData& fieldName ) {$/;"	f	class:mongo::BSONObjBuilder
appendUndefined	include/mongo/bson/bsonobjbuilder.h	/^        void appendUndefined() {$/;"	f	class:mongo::BSONArrayBuilder
appendWhere	include/mongo/bson/bsonobjbuilder.h	/^        void appendWhere( const StringData& code, const BSONObj &scope ) {$/;"	f	class:mongo::BSONObjBuilder
args_	json.h	/^  Args args_;$/;"	m	class:Json::Path
arr	include/mongo/bson/bsonobjbuilder.h	/^        BSONArray arr() { return BSONArray(_b.obj()); }$/;"	f	class:mongo::BSONArrayBuilder
arrSize	include/mongo/bson/bsonobjbuilder.h	/^        int arrSize() const { return _i; }$/;"	f	class:mongo::BSONArrayBuilder
arrayValue	json.h	/^  arrayValue,    \/\/\/< array value (ordered list)$/;"	e	enum:Json::ValueType
as	include/mongo/util/net/sock.h	/^        template <typename T> T& as() { return *(T*)(&sa); }$/;"	f	struct:mongo::SockAddr
as	include/mongo/util/net/sock.h	/^        template <typename T> const T& as() const { return *(const T*)(&sa); }$/;"	f	struct:mongo::SockAddr
asBool	jsoncpp.cpp	/^bool Value::asBool() const {$/;"	f	class:Json::Value
asCString	jsoncpp.cpp	/^const char* Value::asCString() const {$/;"	f	class:Json::Value
asConstString	jsoncpp.cpp	/^CppTL::ConstString Value::asConstString() const {$/;"	f	class:Json::Value
asDateT	include/mongo/bson/oid.h	/^        Date_t asDateT() const { return asTimeT() * 1000LL; }$/;"	f	class:mongo::OID
asDouble	jsoncpp.cpp	/^double Value::asDouble() const {$/;"	f	class:Json::Value
asFloat	jsoncpp.cpp	/^float Value::asFloat() const {$/;"	f	class:Json::Value
asInt	jsoncpp.cpp	/^Value::Int Value::asInt() const {$/;"	f	class:Json::Value
asInt64	include/mongo/util/time_support.h	/^        int64_t asInt64() const {$/;"	f	struct:mongo::Date_t
asInt64	jsoncpp.cpp	/^Value::Int64 Value::asInt64() const {$/;"	f	class:Json::Value
asLargestInt	jsoncpp.cpp	/^LargestInt Value::asLargestInt() const {$/;"	f	class:Json::Value
asLargestUInt	jsoncpp.cpp	/^LargestUInt Value::asLargestUInt() const {$/;"	f	class:Json::Value
asString	jsoncpp.cpp	/^std::string Value::asString() const {$/;"	f	class:Json::Value
asTempObj	include/mongo/bson/bsonobjbuilder.h	/^        BSONObj asTempObj() {$/;"	f	class:mongo::BSONObjBuilder
asUInt	jsoncpp.cpp	/^Value::UInt Value::asUInt() const {$/;"	f	class:Json::Value
asUInt64	jsoncpp.cpp	/^Value::UInt64 Value::asUInt64() const {$/;"	f	class:Json::Value
authCache	include/mongo/client/dbclientinterface.h	/^        std::map<std::string, BSONObj> authCache;$/;"	m	class:mongo::DBClientConnection
autoReconnect	include/mongo/client/dbclientinterface.h	/^        const bool autoReconnect;$/;"	m	class:mongo::DBClientConnection
autoReconnectBackoff	include/mongo/client/dbclientinterface.h	/^        Backoff autoReconnectBackoff;$/;"	m	class:mongo::DBClientConnection
batch	include/mongo/client/dbclientcursor.h	/^        Batch batch;$/;"	m	class:mongo::DBClientCursor
batchSize	include/mongo/client/dbclientcursor.h	/^        int batchSize;$/;"	m	class:mongo::DBClientCursor
bb	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder& bb() { return _b.bb(); }$/;"	f	class:mongo::BSONArrayBuilder
bb	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder& bb() { return _b; }$/;"	f	class:mongo::BSONObjBuilder
bdtCustom	include/mongo/bson/bsontypes.h	/^        bdtCustom=128$/;"	e	enum:mongo::BinDataType
bdtUUID	include/mongo/bson/bsontypes.h	/^        bdtUUID = 3, \/* deprecated *\/$/;"	e	enum:mongo::BinDataType
be16toh	include/mongo/platform/endian.h	116;"	d
be16toh	include/mongo/platform/endian.h	129;"	d
be16toh	include/mongo/platform/endian.h	500;"	d
be16toh	include/mongo/platform/endian.h	56;"	d
be32toh	include/mongo/platform/endian.h	117;"	d
be32toh	include/mongo/platform/endian.h	130;"	d
be32toh	include/mongo/platform/endian.h	501;"	d
be32toh	include/mongo/platform/endian.h	57;"	d
be64toh	include/mongo/platform/endian.h	118;"	d
be64toh	include/mongo/platform/endian.h	131;"	d
be64toh	include/mongo/platform/endian.h	502;"	d
be64toh	include/mongo/platform/endian.h	58;"	d
before	include/mongo/util/mongoutils/str.h	/^        inline std::string before(const std::string& s, char x) {$/;"	f	namespace:mongoutils::str
before	include/mongo/util/mongoutils/str.h	/^        inline std::string before(const std::string& s, const std::string& x) {$/;"	f	namespace:mongoutils::str
begin	include/mongo/base/string_data.h	/^        const_iterator begin() const { return rawData(); }$/;"	f	class:mongo::StringData
begin	jsoncpp.cpp	/^Value::const_iterator Value::begin() const {$/;"	f	class:Json::Value
begin	jsoncpp.cpp	/^Value::iterator Value::begin() {$/;"	f	class:Json::Value
begin_	json.h	/^  Location begin_;$/;"	m	class:Json::Reader
begin_	jsoncpp.cpp	/^  Location begin_;$/;"	m	class:Json::OurReader	file:
bigToNative	include/mongo/platform/endian.h	/^        inline static T bigToNative(T t) {$/;"	f	struct:mongo::endian::ByteOrderConverter
bigToNative	include/mongo/platform/endian.h	/^    inline T bigToNative(T t) {$/;"	f	namespace:mongo::endian
binData	include/mongo/bson/bsonelement.h	/^        const char *binData(int& len) const {$/;"	f	class:mongo::BSONElement
binDataClean	include/mongo/bson/bsonelement.h	/^        const char *binDataClean(int& len) const {$/;"	f	class:mongo::BSONElement
binDataType	include/mongo/bson/bsonelement.h	/^        BinDataType binDataType() const {$/;"	f	class:mongo::BSONElement
binaryEqual	include/mongo/bson/bsonobj.h	/^        bool binaryEqual(const BSONObj& r) const {$/;"	f	class:mongo::BSONObj
bind	BasicSocket.cpp	/^bool Network::BasicSocket::bind(struct sockaddr *addr, socklen_t adr_sz)$/;"	f	class:Network::BasicSocket
bits	include/mongo/bson/ordering.h	/^        unsigned bits;$/;"	m	class:mongo::Ordering
bool_	json.h	/^    bool bool_;$/;"	m	union:Json::Value::ValueHolder
boolean	include/mongo/bson/bsonelement.h	/^        bool boolean() const {$/;"	f	class:mongo::BSONElement
booleanSafe	include/mongo/bson/bsonelement.h	/^        bool booleanSafe() const { return isBoolean() && boolean(); }$/;"	f	class:mongo::BSONElement
booleanValue	json.h	/^  booleanValue,  \/\/\/< bool value$/;"	e	enum:Json::ValueType
bswap_slow16	include/mongo/platform/endian.h	/^    static inline uint16_t bswap_slow16(uint16_t v) {$/;"	f	namespace:mongo::endian
bswap_slow32	include/mongo/platform/endian.h	/^    static inline uint32_t bswap_slow32(uint32_t v) {$/;"	f	namespace:mongo::endian
bswap_slow64	include/mongo/platform/endian.h	/^    static inline uint64_t bswap_slow64(uint64_t v) {$/;"	f	namespace:mongo::endian
buf	InetSocket.h	/^        std::string buf;$/;"	m	struct:Network::packet
buf	include/mongo/bson/util/builder.h	/^        char buf[SZ];$/;"	m	class:mongo::StackAllocator
buf	include/mongo/bson/util/builder.h	/^        char* buf() { return data; }$/;"	f	class:mongo::_BufBuilder
buf	include/mongo/bson/util/builder.h	/^        const char* buf() const { return data; }$/;"	f	class:mongo::_BufBuilder
buf	include/mongo/util/assert_util.h	/^        char buf[256];$/;"	m	class:mongo::ErrorMsg
builder	include/mongo/bson/bsonmisc.h	/^        BSONObjBuilder& builder() { return *_builder; }$/;"	f	class:mongo::BSONObjBuilderValueStream
bytes	include/mongo/bson/oid.h	/^            uint8_t bytes[kIncrementSize];$/;"	m	struct:mongo::OID::Increment
bytes	include/mongo/bson/oid.h	/^            uint8_t bytes[kInstanceUniqueSize];$/;"	m	struct:mongo::OID::InstanceUnique
bytes_type	include/mongo/base/data_view.h	/^        typedef char* bytes_type;$/;"	t	class:mongo::DataView
bytes_type	include/mongo/base/data_view.h	/^        typedef const char* bytes_type;$/;"	t	class:mongo::ConstDataView
c_str	json.h	/^  const char* c_str() const { return c_str_; }$/;"	f	class:Json::StaticString
c_str_	json.h	/^  const char* c_str_;$/;"	m	class:Json::StaticString
callRead	include/mongo/client/dbclient_rs.h	/^        virtual bool callRead( Message& toSend , Message& response ) { return checkMaster()->callRead( toSend , response ); }$/;"	f	class:mongo::DBClientReplicaSet
callRead	include/mongo/client/dbclientinterface.h	/^        virtual bool callRead( Message& toSend , Message& response ) { return call( toSend , response ); }$/;"	f	class:mongo::DBClientConnection
canonicalType	include/mongo/bson/bsonelement.h	/^        int canonicalType() const { return canonicalizeBSONType(type()); }$/;"	f	class:mongo::BSONElement
canonicalizeBSONType	include/mongo/bson/bsontypes.h	/^    inline int canonicalizeBSONType(BSONType type) {$/;"	f	namespace:mongo
cast	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::cast(int ll) { return LogSeverity(ll); }$/;"	f	class:mongo::logger::LogSeverity
checkAndGetStringData	include/mongo/bson/bsonelement.h	/^        const StringData checkAndGetStringData() const {$/;"	f	class:mongo::BSONElement
checkConnection	include/mongo/client/dbclientinterface.h	/^        void checkConnection() { if( _failed ) _checkConnection(); }$/;"	f	class:mongo::DBClientConnection
checkFieldName	include/mongo/bson/bsonobjbuilder.h	/^    inline void checkFieldName(StringData fieldName) {$/;"	f	namespace:mongo
checkResponse	include/mongo/client/dbclientinterface.h	/^        virtual void checkResponse( const char* data, int nReturned, bool* retry = NULL, std::string* targetHost = NULL ) {$/;"	f	class:mongo::DBConnector
childValues_	json.h	/^  ChildValues childValues_;$/;"	m	class:Json::StyledStreamWriter
childValues_	json.h	/^  ChildValues childValues_;$/;"	m	class:Json::StyledWriter
childValues_	jsoncpp.cpp	/^  ChildValues childValues_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
chk	include/mongo/bson/bsonelement.h	/^        const BSONElement& chk(bool expr) const {$/;"	f	class:mongo::BSONElement
chk	include/mongo/bson/bsonelement.h	/^        const BSONElement& chk(int t) const {$/;"	f	class:mongo::BSONElement
claimReservedBytes	include/mongo/bson/util/builder.h	/^        void claimReservedBytes(int bytes) {$/;"	f	class:mongo::_BufBuilder
clear	include/mongo/bson/oid.h	/^        void clear() { std::memset(_data, 0, kOIDSize); }$/;"	f	class:mongo::OID
clear	jsoncpp.cpp	/^void Value::clear() {$/;"	f	class:Json::Value
clearCounters	include/mongo/util/net/sock.h	/^        void clearCounters() { _bytesIn = 0; _bytesOut = 0; }$/;"	f	class:mongo::Socket
client	include/mongo/client/init.h	/^namespace client {$/;"	n	namespace:mongo
client	include/mongo/client/options.h	/^namespace client {$/;"	n	namespace:mongo
client	include/mongo/version.h	/^namespace client {$/;"	n	namespace:mongo
clientSet	include/mongo/client/dbclientinterface.h	/^        DBClientReplicaSet *clientSet;$/;"	m	class:mongo::DBClientConnection
close	BasicSocket.h	/^            void close() {::close(_fd);}$/;"	f	class:Network::BasicSocket
close	SemaphoreObejct.h	/^        void close() { sem_destroy(&_sema); }$/;"	f	class:Thread::SemaphoreObejct
closesocket	include/mongo/util/net/sock.h	/^    inline void closesocket(int s) { close(s); }$/;"	f	namespace:mongo
code	include/mongo/base/status-inl.h	/^    inline ErrorCodes::Error Status::code() const {$/;"	f	class:mongo::Status
code	include/mongo/base/status.h	/^            const ErrorCodes::Error code;  \/\/ error code$/;"	m	struct:mongo::Status::ErrorInfo
code	include/mongo/bson/bsonmisc.h	/^        StringData code;$/;"	m	struct:mongo::BSONCode
code	include/mongo/bson/bsonmisc.h	/^        StringData code;$/;"	m	struct:mongo::BSONCodeWScope
code	include/mongo/util/assert_util.h	/^        int code;$/;"	m	struct:mongo::ExceptionInfo
code	question.h	/^    std::string code;$/;"	m	struct:question
codePointToUTF8	jsoncpp.cpp	/^static inline std::string codePointToUTF8(unsigned int cp) {$/;"	f	namespace:Json
codeString	include/mongo/base/status-inl.h	/^    inline std::string Status::codeString() const {$/;"	f	class:mongo::Status
codeWScopeCode	include/mongo/bson/bsonelement.h	/^        const char * codeWScopeCode() const {$/;"	f	class:mongo::BSONElement
codeWScopeCodeLen	include/mongo/bson/bsonelement.h	/^        int codeWScopeCodeLen() const {$/;"	f	class:mongo::BSONElement
codeWScopeScopeData	include/mongo/bson/bsonelement.h	/^        const char * codeWScopeScopeData() const {$/;"	f	class:mongo::BSONElement
codeWScopeScopeDataUnsafe	include/mongo/bson/bsonelement.h	/^        const char * codeWScopeScopeDataUnsafe() const {$/;"	f	class:mongo::BSONElement
collectComments_	json.h	/^  bool collectComments_;$/;"	m	class:Json::Reader
collectComments_	jsoncpp.cpp	/^  bool collectComments_;$/;"	m	class:Json::OurReader	file:
collectComments_	jsoncpp.cpp	/^  bool const collectComments_;$/;"	m	class:Json::OurCharReader	file:
colonSymbol_	jsoncpp.cpp	/^  std::string colonSymbol_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
commentAfter	json.h	/^  commentAfter, \/\/\/< a comment on the line after a value (only make sense for$/;"	e	enum:Json::CommentPlacement
commentAfterOnSameLine	json.h	/^  commentAfterOnSameLine, \/\/\/< a comment just after a value on the same line$/;"	e	enum:Json::CommentPlacement
commentBefore	json.h	/^  commentBefore = 0,      \/\/\/< a comment placed on the line before a value$/;"	e	enum:Json::CommentPlacement
comment_	json.h	/^    char* comment_;$/;"	m	struct:Json::Value::CommentInfo
commentsBefore_	json.h	/^  std::string commentsBefore_;$/;"	m	class:Json::Reader
commentsBefore_	jsoncpp.cpp	/^  std::string commentsBefore_;$/;"	m	class:Json::OurReader	file:
comments_	json.h	/^  CommentInfo* comments_;$/;"	m	class:Json::Value
compare	include/mongo/base/string_data-inl.h	/^    inline int StringData::compare(const StringData& other) const {$/;"	f	class:mongo::StringData
compare	include/mongo/bson/oid.h	/^        int compare( const OID& other ) const { return memcmp( _data , other._data , kOIDSize ); }$/;"	f	class:mongo::OID
compare	jsoncpp.cpp	/^int Value::compare(const Value& other) const {$/;"	f	class:Json::Value
compareAndSwap	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static T compareAndSwap(volatile T* dest, T expected, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
compareAndSwap	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static T compareAndSwap(volatile T* dest, T expected, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
compareAndSwap	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static T compareAndSwap(volatile T* dest, T expected, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
compareAndSwap	include/mongo/platform/atomic_intrinsics_win32.h	/^            static T compareAndSwap(volatile T* dest, T expected, T newValue) {$/;"	f	struct:mongo::details::InterlockedImpl64
compareAndSwap	include/mongo/platform/atomic_intrinsics_win32.h	/^        static T compareAndSwap(volatile T* dest, T expected, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
compareAndSwap	include/mongo/platform/atomic_word_cxx11.h	/^        WordType compareAndSwap(WordType expected, WordType newValue) {$/;"	f	class:mongo::AtomicWord
compareAndSwap	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType compareAndSwap(WordType expected, WordType newValue) {$/;"	f	class:mongo::AtomicWord
compile	Grading.cpp	/^compile_result CCompile::compile()$/;"	f	class:CCompile
compile	Grading.cpp	/^compile_result JavaCompile::compile()$/;"	f	class:JavaCompile
compile_result	Grading.h	/^struct compile_result:public result { };$/;"	s
computeBoundingBox	include/mongo/geo/geometry.h	/^    BoundingBox<TCoordinates>* Geometry<TCoordinates>::computeBoundingBox($/;"	f	class:mongo::geo::Geometry
computeBoundingBox	include/mongo/geo/geometrycollection.h	/^    BoundingBox<TCoordinates>* GeometryCollection<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::GeometryCollection
computeBoundingBox	include/mongo/geo/linestring.h	/^    BoundingBox<TCoordinates>* LineString<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::LineString
computeBoundingBox	include/mongo/geo/multilinestring.h	/^    BoundingBox<TCoordinates>* MultiLineString<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::MultiLineString
computeBoundingBox	include/mongo/geo/multipoint.h	/^    BoundingBox<TCoordinates>* MultiPoint<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::MultiPoint
computeBoundingBox	include/mongo/geo/multipolygon.h	/^    BoundingBox<TCoordinates>* MultiPolygon<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::MultiPolygon
computeBoundingBox	include/mongo/geo/point.h	/^    BoundingBox<TCoordinates>* Point<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::Point
computeBoundingBox	include/mongo/geo/polygon.h	/^    BoundingBox<TCoordinates>* Polygon<TCoordinates>::computeBoundingBox() const {$/;"	f	class:mongo::geo::Polygon
computeDistance	jsoncpp.cpp	/^ValueIteratorBase::computeDistance(const SelfType& other) const {$/;"	f	class:Json::ValueIteratorBase
concat	include/mongo/util/net/message.h	/^        void concat() {$/;"	f	class:mongo::Message
connect	BasicSocket.cpp	/^bool Network::BasicSocket::connect(struct sockaddr *addr, socklen_t adr_sz)$/;"	f	class:Network::BasicSocket
connect	include/mongo/client/dbclientinterface.h	/^        bool connect(const std::string& server, std::string& errmsg) {$/;"	f	class:mongo::DBClientConnection
connect	include/mongo/client/dbclientinterface.h	/^        void connect(const std::string& serverHostname) {$/;"	f	class:mongo::DBClientConnection
connect	include/mongo/util/net/message_port.h	/^        bool connect(SockAddr& farEnd) {$/;"	f	class:mongo::MessagingPort
connectionId	include/mongo/util/net/message_port.h	/^        long long connectionId() const { return _connectionId; }$/;"	f	class:mongo::AbstractMessagingPort
constView	include/mongo/base/encoded_value_storage.h	/^        ConstView constView() const {$/;"	f	class:mongo::EncodedValueStorage
const_iterator	include/mongo/base/string_data.h	/^        typedef const char* const_iterator;$/;"	t	class:mongo::StringData
const_iterator	json.h	/^  typedef ValueConstIterator const_iterator;$/;"	t	class:Json::Value
contains	include/mongo/util/mongoutils/str.h	/^        inline bool contains(const std::string& s, char x) {$/;"	f	namespace:mongoutils::str
contains	include/mongo/util/mongoutils/str.h	/^        inline bool contains(const std::string& s, const std::string& x) {$/;"	f	namespace:mongoutils::str
containsControlCharacter	jsoncpp.cpp	/^static bool containsControlCharacter(const char* str) {$/;"	f	namespace:Json
containsControlCharacter0	jsoncpp.cpp	/^static bool containsControlCharacter0(const char* str, unsigned len) {$/;"	f	namespace:Json
containsNewLine	jsoncpp.cpp	/^static bool containsNewLine(Reader::Location begin, Reader::Location end) {$/;"	f	namespace:Json
coords2d	include/mongo/geo/namespaces.h	/^namespace coords2d {$/;"	n	namespace:mongo::geo
coords2dgeographic	include/mongo/geo/namespaces.h	/^namespace coords2dgeographic {$/;"	n	namespace:mongo::geo
copy	jsoncpp.cpp	/^void ValueIteratorBase::copy(const SelfType& other) {$/;"	f	class:Json::ValueIteratorBase
copyTo	include/mongo/base/string_data-inl.h	/^    inline void StringData::copyTo( char* dest, bool includeEndingNull ) const {$/;"	f	class:mongo::StringData
correct	Grading.h	/^    bool correct;$/;"	m	struct:grading_result
count	include/mongo/util/mongoutils/str.h	/^        inline unsigned count( const std::string& s , char c ) {$/;"	f	namespace:mongoutils::str
createBSON	include/mongo/geo/linestring.h	/^    BSONObj LineString<TCoordinates>::createBSON(const std::vector<Point<TCoordinates> >& points) {$/;"	f	class:mongo::geo::LineString
createBSON	include/mongo/geo/multilinestring.h	/^    BSONObj MultiLineString<TCoordinates>::createBSON($/;"	f	class:mongo::geo::MultiLineString
createBSON	include/mongo/geo/point.h	/^    BSONObj Point<TCoordinates>::createBSON(const TCoordinates& coords) {$/;"	f	class:mongo::geo::Point
createBSON	include/mongo/geo/polygon.h	/^    BSONObj Polygon<TCoordinates>::createBSON($/;"	f	class:mongo::geo::Polygon
createCode	Judge.cpp	/^std::string Judge::createCode(const question &q) const {$/;"	f	class:Judge
createIndex	include/mongo/client/dbclientinterface.h	/^        void createIndex( const StringData& ns, const BSONObj& keys ) {$/;"	f	class:mongo::DBClientWithCommands
createNewConnection	JudgeServer.cpp	/^void JudgeServer::createNewConnection()$/;"	f	class:JudgeServer
cs_	jsoncpp.cpp	/^  CommentStyle::Enum cs_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
cstr_	json.h	/^    char const* cstr_;  \/\/ actually, a prefixed string, unless policy is noDup$/;"	m	class:Json::Value::CZString
currentThread	Thread.h	/^        static Thread *currentThread(){};$/;"	f	class:Thread::Thread
currentValue	jsoncpp.cpp	/^Value& OurReader::currentValue() { return *(nodes_.top()); }$/;"	f	class:Json::OurReader
currentValue	jsoncpp.cpp	/^Value& Reader::currentValue() { return *(nodes_.top()); }$/;"	f	class:Json::Reader
current_	json.h	/^  Location current_;$/;"	m	class:Json::Reader
current_	json.h	/^  Value::ObjectValues::iterator current_;$/;"	m	class:Json::ValueIteratorBase
current_	jsoncpp.cpp	/^  Location current_;$/;"	m	class:Json::OurReader	file:
cursorId	include/mongo/client/dbclientcursor.h	/^        long long cursorId;$/;"	m	class:mongo::DBClientCursor
data	include/mongo/bson/bsonelement.h	/^        const char *data;$/;"	m	class:mongo::BSONElement
data	include/mongo/bson/bsonmisc.h	/^        const void* data;$/;"	m	struct:mongo::BSONBinData
data	include/mongo/bson/util/builder.h	/^        char *data;$/;"	m	class:mongo::_BufBuilder
data	include/mongo/client/dbclientcursor.h	/^            const char *data;$/;"	m	class:mongo::DBClientCursor::Batch
data	include/mongo/client/gridfs.h	/^        const char * data( int & len ) const {$/;"	f	class:mongo::GridFSChunk
data	include/mongo/util/net/message.h	/^            char data[4];$/;"	m	struct:mongo::MsgData::Layout
data	include/mongo/util/net/message.h	/^            char* data() {$/;"	f	class:mongo::MsgData::View
data	include/mongo/util/net/message.h	/^            const char* data() const {$/;"	f	class:mongo::MsgData::ConstView
data	include/mongo/util/net/message.h	/^            const view_type& data() const {$/;"	f	class:mongo::MSGHEADER::ConstView
data	include/mongo/util/net/message.h	/^            view_type data() const {$/;"	f	class:mongo::MSGHEADER::View
data	include/mongo/util/shared_buffer.h	/^            char* data() {$/;"	f	class:mongo::SharedBuffer::Holder
data	include/mongo/util/shared_buffer.h	/^            const char* data() const {$/;"	f	class:mongo::SharedBuffer::Holder
data	jsoncpp.cpp	/^const char* Value::CZString::data() const { return cstr_; }$/;"	f	class:Json::Value::CZString
dataLen	include/mongo/util/net/message.h	/^        inline int ConstView::dataLen() const {$/;"	f	class:mongo::MsgData::ConstView
dataReceived	include/mongo/client/dbclientcursor.h	/^        void dataReceived() { bool retry; std::string lazyHost; dataReceived( retry, lazyHost ); }$/;"	f	class:mongo::DBClientCursor
dataSize	include/mongo/util/net/message.h	/^        int dataSize() const { return size() - sizeof(MSGHEADER::Value); }$/;"	f	class:mongo::Message
date	include/mongo/bson/bsonelement.h	/^        Date_t date() const {$/;"	f	class:mongo::BSONElement
dbDelete	include/mongo/util/net/operation.h	/^        dbDelete = 2006,$/;"	e	enum:mongo::Operations
dbGetMore	include/mongo/util/net/operation.h	/^        dbGetMore = 2005,$/;"	e	enum:mongo::Operations
dbInsert	include/mongo/util/net/operation.h	/^        dbInsert = 2002,$/;"	e	enum:mongo::Operations
dbKillCursors	include/mongo/util/net/operation.h	/^        dbKillCursors = 2007$/;"	e	enum:mongo::Operations
dbMsg	include/mongo/util/net/operation.h	/^        dbMsg = 1000,    \/* generic msg command followed by a string *\/$/;"	e	enum:mongo::Operations
dbQuery	include/mongo/util/net/operation.h	/^        dbQuery = 2004,$/;"	e	enum:mongo::Operations
dbUpdate	include/mongo/util/net/operation.h	/^        dbUpdate = 2001, \/* update object *\/$/;"	e	enum:mongo::Operations
dbWriteDelete	include/mongo/util/net/operation.h	/^        dbWriteDelete = dbDelete$/;"	e	enum:mongo::WriteOpType
dbWriteInsert	include/mongo/util/net/operation.h	/^        dbWriteInsert = dbInsert,$/;"	e	enum:mongo::WriteOpType
dbWriteUpdate	include/mongo/util/net/operation.h	/^        dbWriteUpdate = dbUpdate,$/;"	e	enum:mongo::WriteOpType
dbrefNS	include/mongo/bson/bsonelement.h	/^        const char * dbrefNS() const {$/;"	f	class:mongo::BSONElement
dbrefOID	include/mongo/bson/bsonelement.h	/^        const mongo::OID dbrefOID() const {$/;"	f	class:mongo::BSONElement
decodeDouble	jsoncpp.cpp	/^bool OurReader::decodeDouble(Token& token) {$/;"	f	class:Json::OurReader
decodeDouble	jsoncpp.cpp	/^bool OurReader::decodeDouble(Token& token, Value& decoded) {$/;"	f	class:Json::OurReader
decodeDouble	jsoncpp.cpp	/^bool Reader::decodeDouble(Token& token) {$/;"	f	class:Json::Reader
decodeDouble	jsoncpp.cpp	/^bool Reader::decodeDouble(Token& token, Value& decoded) {$/;"	f	class:Json::Reader
decodeNumber	jsoncpp.cpp	/^bool OurReader::decodeNumber(Token& token) {$/;"	f	class:Json::OurReader
decodeNumber	jsoncpp.cpp	/^bool OurReader::decodeNumber(Token& token, Value& decoded) {$/;"	f	class:Json::OurReader
decodeNumber	jsoncpp.cpp	/^bool Reader::decodeNumber(Token& token) {$/;"	f	class:Json::Reader
decodeNumber	jsoncpp.cpp	/^bool Reader::decodeNumber(Token& token, Value& decoded) {$/;"	f	class:Json::Reader
decodePrefixedString	jsoncpp.cpp	/^inline static void decodePrefixedString($/;"	f	namespace:Json
decodeString	jsoncpp.cpp	/^bool OurReader::decodeString(Token& token) {$/;"	f	class:Json::OurReader
decodeString	jsoncpp.cpp	/^bool OurReader::decodeString(Token& token, std::string& decoded) {$/;"	f	class:Json::OurReader
decodeString	jsoncpp.cpp	/^bool Reader::decodeString(Token& token) {$/;"	f	class:Json::Reader
decodeString	jsoncpp.cpp	/^bool Reader::decodeString(Token& token, std::string& decoded) {$/;"	f	class:Json::Reader
decodeUnicodeCodePoint	jsoncpp.cpp	/^bool OurReader::decodeUnicodeCodePoint(Token& token,$/;"	f	class:Json::OurReader
decodeUnicodeCodePoint	jsoncpp.cpp	/^bool Reader::decodeUnicodeCodePoint(Token& token,$/;"	f	class:Json::Reader
decodeUnicodeEscapeSequence	jsoncpp.cpp	/^bool OurReader::decodeUnicodeEscapeSequence(Token& token,$/;"	f	class:Json::OurReader
decodeUnicodeEscapeSequence	jsoncpp.cpp	/^bool Reader::decodeUnicodeEscapeSequence(Token& token,$/;"	f	class:Json::Reader
decouple	include/mongo/bson/bsonobjbuilder.h	/^        void decouple() {$/;"	f	class:mongo::BSONObjBuilder
decouple	include/mongo/bson/util/builder.h	/^        void decouple() { data = 0; }$/;"	f	class:mongo::_BufBuilder
decouple	include/mongo/client/dbclientcursor.h	/^        void decouple() { _ownCursor = false; }$/;"	f	class:mongo::DBClientCursor
decrement	jsoncpp.cpp	/^void ValueIteratorBase::decrement() {$/;"	f	class:Json::ValueIteratorBase
deref	jsoncpp.cpp	/^Value& ValueIteratorBase::deref() const {$/;"	f	class:Json::ValueIteratorBase
descending	include/mongo/bson/ordering.h	/^        unsigned descending(unsigned mask) const { return bits & mask; }$/;"	f	class:mongo::Ordering
detach	Thread.cpp	/^void Thread::Thread::detach() {$/;"	f	class:Thread::Thread
details	include/mongo/platform/atomic_intrinsics_win32.h	/^    namespace details {$/;"	n	namespace:mongo
difference_type	json.h	/^  typedef int difference_type;$/;"	t	class:Json::ValueIterator
difference_type	json.h	/^  typedef int difference_type;$/;"	t	class:Json::ValueIteratorBase
dimensionality	include/mongo/geo/coordinates2d.h	/^        static size_t MONGO_CLIENT_FUNC dimensionality() { return 2; }$/;"	f	class:mongo::geo::Coordinates2D
dimensionality	include/mongo/geo/coordinates2dgeographic.h	/^        static size_t MONGO_CLIENT_FUNC dimensionality() { return 2; }$/;"	f	class:mongo::geo::Coordinates2DGeographic
doIFreeIt	include/mongo/util/net/message.h	/^        bool doIFreeIt() {$/;"	f	class:mongo::Message
document_	json.h	/^  std::ostream* document_;$/;"	m	class:Json::StyledStreamWriter
document_	json.h	/^  std::string document_;$/;"	m	class:Json::FastWriter
document_	json.h	/^  std::string document_;$/;"	m	class:Json::Reader
document_	json.h	/^  std::string document_;$/;"	m	class:Json::StyledWriter
document_	jsoncpp.cpp	/^  std::string document_;$/;"	m	class:Json::OurReader	file:
done	include/mongo/bson/bsonobjbuilder.h	/^        BSONObj done() { return _b.done(); }$/;"	f	class:mongo::BSONArrayBuilder
done	include/mongo/bson/bsonobjbuilder.h	/^        BSONObj done() {$/;"	f	class:mongo::BSONObjBuilder
doneFast	include/mongo/bson/bsonobjbuilder.h	/^        void doneFast() { _b.doneFast(); }$/;"	f	class:mongo::BSONArrayBuilder
doneFast	include/mongo/bson/bsonobjbuilder.h	/^        void doneFast() {$/;"	f	class:mongo::BSONObjBuilder
dropCollection	include/mongo/client/dbclientinterface.h	/^        virtual bool dropCollection( const std::string &ns, BSONObj* info = NULL ) {$/;"	f	class:mongo::DBClientWithCommands
dropDatabase	include/mongo/client/dbclientinterface.h	/^        virtual bool dropDatabase(const std::string &dbname, BSONObj *info = 0) {$/;"	f	class:mongo::DBClientWithCommands
dropNullPlaceholders	jsoncpp.cpp	/^void FastWriter::dropNullPlaceholders() { dropNullPlaceholders_ = true; }$/;"	f	class:Json::FastWriter
dropNullPlaceholders_	json.h	/^  bool dropNullPlaceholders_;$/;"	m	class:Json::FastWriter
duplicate	json.h	/^      duplicate,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicateAndPrefixStringValue	jsoncpp.cpp	/^static inline char* duplicateAndPrefixStringValue($/;"	f	namespace:Json
duplicateOnCopy	json.h	/^      duplicateOnCopy$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
duplicateStringValue	jsoncpp.cpp	/^static inline char* duplicateStringValue(const char* value,$/;"	f	namespace:Json
empty	include/mongo/base/string_data.h	/^        bool empty() const { return size() == 0; }$/;"	f	class:mongo::StringData
empty	include/mongo/util/assert_util.h	/^        bool empty() const { return msg.empty(); }$/;"	f	struct:mongo::ExceptionInfo
empty	include/mongo/util/net/message.h	/^        bool empty() const { return !_buf && _data.empty(); }$/;"	f	class:mongo::Message
empty	jsoncpp.cpp	/^bool Value::empty() const {$/;"	f	class:Json::Value
enableYAMLCompatibility	jsoncpp.cpp	/^void FastWriter::enableYAMLCompatibility() { yamlCompatiblityEnabled_ = true; }$/;"	f	class:Json::FastWriter
end	include/mongo/base/string_data.h	/^        const_iterator end() const { return rawData() + size(); }$/;"	f	class:mongo::StringData
end	jsoncpp.cpp	/^Value::const_iterator Value::end() const {$/;"	f	class:Json::Value
end	jsoncpp.cpp	/^Value::iterator Value::end() {$/;"	f	class:Json::Value
end_	json.h	/^    Location end_;$/;"	m	class:Json::Reader::Token
end_	json.h	/^  Location end_;$/;"	m	class:Json::Reader
end_	jsoncpp.cpp	/^    Location end_;$/;"	m	class:Json::OurReader::Token	file:
end_	jsoncpp.cpp	/^  Location end_;$/;"	m	class:Json::OurReader	file:
endian	include/mongo/platform/endian.h	/^namespace endian {$/;"	n	namespace:mongo
endingLineFeedSymbol_	jsoncpp.cpp	/^  std::string endingLineFeedSymbol_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
endsWith	include/mongo/base/string_data-inl.h	/^    inline bool StringData::endsWith( const StringData& suffix ) const {$/;"	f	class:mongo::StringData
endsWith	include/mongo/util/mongoutils/str.h	/^        inline bool endsWith(const char *p, const char *suffix) {$/;"	f	namespace:mongoutils::str
endsWith	include/mongo/util/mongoutils/str.h	/^        inline bool endsWith(const char *s, char p) {$/;"	f	namespace:mongoutils::str
endsWith	include/mongo/util/mongoutils/str.h	/^        inline bool endsWith(const std::string& s, const std::string& p) {$/;"	f	namespace:mongoutils::str
eoo	include/mongo/bson/bsonelement.h	/^        bool eoo() const { return type() == EOO; }$/;"	f	class:mongo::BSONElement
equalCaseInsensitive	include/mongo/base/string_data-inl.h	/^    inline bool StringData::equalCaseInsensitive( const StringData& other ) const {$/;"	f	class:mongo::StringData
equals	include/mongo/client/dbclient_rs.h	/^        inline bool equals(const ReadPreferenceSetting& other) const {$/;"	f	struct:mongo::ReadPreferenceSetting
equals	include/mongo/util/mongoutils/str.h	/^        inline bool equals( const char * a , const char * b ) { return strcmp( a , b ) == 0; }$/;"	f	namespace:mongoutils::str
error	Grading.h	/^    bool error;$/;"	m	struct:result
errorPollIntervalSecs	include/mongo/util/net/sock.h	/^        static const int errorPollIntervalSecs;$/;"	m	class:mongo::Socket
errors_	json.h	/^  Errors errors_;$/;"	m	class:Json::Reader
errors_	jsoncpp.cpp	/^  Errors errors_;$/;"	m	class:Json::OurReader	file:
eval	include/mongo/client/dbclientinterface.h	/^        bool eval(const std::string &dbname, const std::string &jscode, T parm1) {$/;"	f	class:mongo::DBClientWithCommands
eval	include/mongo/client/dbclientinterface.h	/^        bool eval(const std::string &dbname, const std::string &jscode, T parm1, NumType& ret) {$/;"	f	class:mongo::DBClientWithCommands
examinee	question.h	/^    Network::InetSocket *examinee;$/;"	m	struct:question
examinee_id	question.h	/^    std::string examinee_id;$/;"	m	struct:question
execute	Grading.cpp	/^bool execute(const char *binPath, int excute_limit, const std::string &send, std::string &recv)$/;"	f
exists	include/mongo/client/gridfs.h	/^        bool exists() const {$/;"	f	class:mongo::GridFile
extends	question.h	/^    std::string extends;$/;"	m	struct:question
extra_	json.h	/^    Location extra_;$/;"	m	class:Json::Reader::ErrorInfo
extra_	jsoncpp.cpp	/^    Location extra_;$/;"	m	class:Json::OurReader::ErrorInfo	file:
failIfExtra_	jsoncpp.cpp	/^  bool failIfExtra_;$/;"	m	class:Json::OurFeatures	file:
fassert	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void MONGO_CLIENT_FUNC fassert(int msgid, bool testOK) {$/;"	f	namespace:mongo
fassert	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void MONGO_CLIENT_FUNC fassert(int msgid, const Status& status) {$/;"	f	namespace:mongo
fassertNoTrace	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void fassertNoTrace(int msgid, const Status& status) {$/;"	f	namespace:mongo
features	CMakeFiles/feature_tests.c	/^  const char features[] = {""$/;"	v
features	CMakeFiles/feature_tests.cxx	/^  const char features[] = {""$/;"	v
features_	json.h	/^  Features features_;$/;"	m	class:Json::Reader
features_	jsoncpp.cpp	/^  OurFeatures const features_;$/;"	m	class:Json::OurReader	file:
fetchAndAdd	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static T fetchAndAdd(volatile T* dest, T increment) {$/;"	f	class:mongo::AtomicIntrinsics
fetchAndAdd	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static T fetchAndAdd(volatile T* dest, T increment) {$/;"	f	class:mongo::AtomicIntrinsics
fetchAndAdd	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static T fetchAndAdd(volatile T* dest, T increment) {$/;"	f	class:mongo::AtomicIntrinsics
fetchAndAdd	include/mongo/platform/atomic_intrinsics_win32.h	/^            static T fetchAndAdd(volatile T* dest, T increment) {$/;"	f	struct:mongo::details::InterlockedImpl64
fetchAndAdd	include/mongo/platform/atomic_intrinsics_win32.h	/^        static T fetchAndAdd(volatile T* dest, T increment) {$/;"	f	class:mongo::AtomicIntrinsics
fetchAndAdd	include/mongo/platform/atomic_word_cxx11.h	/^        WordType fetchAndAdd(WordType increment) {$/;"	f	class:mongo::AtomicWord
fetchAndAdd	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType fetchAndAdd(WordType increment) {$/;"	f	class:mongo::AtomicWord
fetchAndSubtract	include/mongo/platform/atomic_word_cxx11.h	/^        WordType fetchAndSubtract(WordType decrement) {$/;"	f	class:mongo::AtomicWord
fetchAndSubtract	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType fetchAndSubtract(WordType decrement) {$/;"	f	class:mongo::AtomicWord
fieldName	include/mongo/bson/bsonelement.h	/^        const char * fieldName() const {$/;"	f	class:mongo::BSONElement
fieldNameSize	include/mongo/bson/bsonelement.h	/^        int fieldNameSize() const {$/;"	f	class:mongo::BSONElement
fieldNameSize_	include/mongo/bson/bsonelement.h	/^        mutable int fieldNameSize_; \/\/ cached value$/;"	m	class:mongo::BSONElement
fieldNameStringData	include/mongo/bson/bsonelement.h	/^        const StringData fieldNameStringData() const {$/;"	f	class:mongo::BSONElement
fields	include/mongo/client/dbclientinterface.h	/^        BSONObj fields() const { return _fields; }$/;"	f	class:mongo::QuerySpec
fieldsData	include/mongo/client/dbclientinterface.h	/^        BSONObj* fieldsData() { return &_fields; }$/;"	f	class:mongo::QuerySpec
fieldsPtr	include/mongo/client/dbclientinterface.h	/^        const BSONObj* fieldsPtr() const { return &_fields; }$/;"	f	class:mongo::QuerySpec
fieldsToReturn	include/mongo/client/dbclientcursor.h	/^        const BSONObj *fieldsToReturn;$/;"	m	class:mongo::DBClientCursor
filter	include/mongo/client/dbclientinterface.h	/^        BSONObj filter() const { return _queryObj.getFilter(); }$/;"	f	class:mongo::QuerySpec
find	include/mongo/base/string_data-inl.h	/^    inline size_t StringData::find( char c, size_t fromPos ) const {$/;"	f	class:mongo::StringData
find	include/mongo/base/string_data-inl.h	/^    inline size_t StringData::find( const StringData& needle ) const {$/;"	f	class:mongo::StringData
find	jsoncpp.cpp	/^Value const* Value::find(char const* key, char const* end) const$/;"	f	class:Json::Value
findMinAndMaxCoordinatesOfDimension	include/mongo/geo/geometry.h	/^    void Geometry<TCoordinates>::findMinAndMaxCoordinatesOfDimension($/;"	f	class:mongo::geo::Geometry
firstElement	include/mongo/bson/bsonobj.h	/^        BSONElement firstElement() const { return BSONElement(objdata() + 4); }$/;"	f	class:mongo::BSONObj
firstElementFieldName	include/mongo/bson/bsonobj.h	/^        const char * firstElementFieldName() const {$/;"	f	class:mongo::BSONObj
firstElementType	include/mongo/bson/bsonobj.h	/^        BSONType firstElementType() const {$/;"	f	class:mongo::BSONObj
fixNumericLocale	jsoncpp.cpp	/^static inline void fixNumericLocale(char* begin, char* end) {$/;"	f	namespace:Json
flags	include/mongo/bson/bsonmisc.h	/^        StringData flags;$/;"	m	struct:mongo::BSONRegEx
from	include/mongo/bson/oid.h	/^        static OID MONGO_CLIENT_FUNC from(T* buf) {$/;"	f	class:mongo::OID
gen	include/mongo/bson/oid.h	/^        static OID MONGO_CLIENT_FUNC gen() {$/;"	f	class:mongo::OID
genOID	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& genOID() {$/;"	f	class:mongo::BSONObjBuilder
geo	include/mongo/geo/boundingbox.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/constants.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/coordinates.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/coordinates2d.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/coordinates2dgeographic.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/geometry.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/geometrycollection.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/geoobj.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/linestring.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/multilinestring.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/multipoint.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/multipolygon.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/namespaces.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/parser-impl.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/parser.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/point.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/polygon.h	/^namespace geo {$/;"	n	namespace:mongo
geo	include/mongo/geo/queryutils.h	/^namespace geo {$/;"	n	namespace:mongo
get	include/mongo/bson/ordering.h	/^        int get(int i) const {$/;"	f	class:mongo::Ordering
get	include/mongo/util/shared_buffer.h	/^        char* get() const {$/;"	f	class:mongo::SharedBuffer
get	jsoncpp.cpp	/^Value Value::get(ArrayIndex index, const Value& defaultValue) const {$/;"	f	class:Json::Value
get	jsoncpp.cpp	/^Value Value::get(char const* key, Value const& defaultValue) const$/;"	f	class:Json::Value
get	jsoncpp.cpp	/^Value Value::get(char const* key, char const* end, Value const& defaultValue) const$/;"	f	class:Json::Value
get	jsoncpp.cpp	/^Value Value::get(const CppTL::ConstString& key,$/;"	f	class:Json::Value
get	jsoncpp.cpp	/^Value Value::get(std::string const& key, Value const& defaultValue) const$/;"	f	class:Json::Value
getAbortOnFailure	include/mongo/logger/log_domain.h	/^        bool getAbortOnFailure() const { return _abortOnFailure; }$/;"	f	class:mongo::logger::LogDomain
getBinaryPath	Grading.h	/^    virtual std::string getBinaryPath() {$/;"	f	class:CCompile
getBinaryPath	Grading.h	/^    virtual std::string getBinaryPath() {$/;"	f	class:JavaCompile
getBoundingBox	include/mongo/geo/geometrycollection.h	/^    BoundingBox<TCoordinates> GeometryCollection<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::GeometryCollection
getBoundingBox	include/mongo/geo/linestring.h	/^    BoundingBox<TCoordinates> LineString<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::LineString
getBoundingBox	include/mongo/geo/multilinestring.h	/^    BoundingBox<TCoordinates> MultiLineString<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::MultiLineString
getBoundingBox	include/mongo/geo/multipoint.h	/^    BoundingBox<TCoordinates> MultiPoint<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::MultiPoint
getBoundingBox	include/mongo/geo/multipolygon.h	/^    BoundingBox<TCoordinates> MultiPolygon<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::MultiPolygon
getBoundingBox	include/mongo/geo/point.h	/^    BoundingBox<TCoordinates> Point<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::Point
getBoundingBox	include/mongo/geo/polygon.h	/^    BoundingBox<TCoordinates> Polygon<TCoordinates>::getBoundingBox() const {$/;"	f	class:mongo::geo::Polygon
getBytesIn	include/mongo/util/net/sock.h	/^        long long getBytesIn() const { return _bytesIn; }$/;"	f	class:mongo::Socket
getBytesOut	include/mongo/util/net/sock.h	/^        long long getBytesOut() const { return _bytesOut; }$/;"	f	class:mongo::Socket
getChunkSize	include/mongo/client/gridfs.h	/^        int getChunkSize() const {$/;"	f	class:mongo::GridFile
getCode	include/mongo/util/assert_util.h	/^        virtual int getCode() const { return _ei.code; }$/;"	f	class:mongo::DBException
getCommand	Grading.cpp	/^std::string Compile::getCommand()$/;"	f	class:Compile
getComment	jsoncpp.cpp	/^std::string Value::getComment(CommentPlacement placement) const {$/;"	f	class:Json::Value
getComponent	include/mongo/logger/message_event.h	/^        LogComponent getComponent() const { return _component; }$/;"	f	class:mongo::logger::MessageEventEphemeral
getConnectionHook	include/mongo/client/dbclientinterface.h	/^        static ConnectionHook* getConnectionHook() {$/;"	f	class:mongo::ConnectionString
getConnectionId	include/mongo/client/dbclientinterface.h	/^        long long getConnectionId() const { return _connectionId; }$/;"	f	class:mongo::DBClientBase
getContentLength	include/mongo/client/gridfs.h	/^        gridfs_offset getContentLength() const {$/;"	f	class:mongo::GridFile
getContentType	include/mongo/client/gridfs.h	/^        std::string getContentType() const {$/;"	f	class:mongo::GridFile
getContextName	include/mongo/logger/message_event.h	/^        StringData getContextName() const { return _contextName; }$/;"	f	class:mongo::logger::MessageEventEphemeral
getCoordinates	include/mongo/geo/point.h	/^        TCoordinates getCoordinates() const { return _coords; }$/;"	f	class:mongo::geo::Point
getCoordsField	include/mongo/geo/geometry.h	/^    BSONElement Geometry<TCoordinates>::getCoordsField(const BSONObj& bson) {$/;"	f	class:mongo::geo::Geometry
getCursor	include/mongo/util/net/message.h	/^            int64_t getCursor() const {$/;"	f	class:mongo::MsgData::ConstView
getCursorId	include/mongo/client/dbclientcursor.h	/^        long long getCursorId() const { return cursorId; }$/;"	f	class:mongo::DBClientCursor
getDatabase	include/mongo/client/dbclientinterface.h	/^        const std::string& getDatabase() const { return _database; }$/;"	f	class:mongo::ConnectionString
getDate	include/mongo/logger/message_event.h	/^        uint64_t getDate() const { return _date; }$/;"	f	class:mongo::logger::MessageEventEphemeral
getDefault	include/mongo/bson/bson_field.h	/^        const T& getDefault() const {$/;"	f	class:mongo::BSONField
getFileDescriptor	BasicSocket.h	/^            FileDescriptor getFileDescriptor() const {$/;"	f	class:Network::BasicSocket
getFileDescriptor	ServerSocket.h	/^            FileDescriptor getFileDescriptor() const {$/;"	f	class:Network::ServerSocket
getFileField	include/mongo/client/gridfs.h	/^        BSONElement getFileField( const std::string& name ) const {$/;"	f	class:mongo::GridFile
getFilename	include/mongo/client/gridfs.h	/^        std::string getFilename() const {$/;"	f	class:mongo::GridFile
getFormatedErrorMessages	jsoncpp.cpp	/^std::string Reader::getFormatedErrorMessages() const {$/;"	f	class:Json::Reader
getFormattedErrorMessages	jsoncpp.cpp	/^std::string OurReader::getFormattedErrorMessages() const {$/;"	f	class:Json::OurReader
getFormattedErrorMessages	jsoncpp.cpp	/^std::string Reader::getFormattedErrorMessages() const {$/;"	f	class:Json::Reader
getGeometries	include/mongo/geo/geometrycollection.h	/^    GeometryCollection<TCoordinates>::getGeometries() const {$/;"	f	class:mongo::geo::GeometryCollection
getGlobalDomain	include/mongo/logger/log_manager.h	/^        ComponentMessageLogDomain* getGlobalDomain() { return &_globalDomain; }$/;"	f	class:mongo::logger::LogManager
getId	include/mongo/util/net/message.h	/^            MSGID getId() const {$/;"	f	class:mongo::MsgData::ConstView
getInfo	include/mongo/util/assert_util.h	/^        const ExceptionInfo& getInfo() const { return _ei; }$/;"	f	class:mongo::DBException
getInstance	JudgeServer.h	/^    static JudgeServer *getInstance() {$/;"	f	class:JudgeServer
getIpAddress	BasicSocket.cpp	/^std::string Network::BasicSocket::getIpAddress()$/;"	f	class:Network::BasicSocket
getLabel	include/mongo/logger/labeled_level.h	/^        const std::string& getLabel() const { return _label; }$/;"	f	class:mongo::logger::LabeledLevel
getLatitude	include/mongo/geo/coordinates2dgeographic.h	/^        double getLatitude() const { return _latitude; }$/;"	f	class:mongo::geo::Coordinates2DGeographic
getLazyKillCursor	include/mongo/client/dbclientinterface.h	/^        static bool MONGO_CLIENT_FUNC getLazyKillCursor() { return _lazyKillCursor; }$/;"	f	class:mongo::DBClientConnection
getLen	include/mongo/util/net/message.h	/^            int32_t getLen() const {$/;"	f	class:mongo::MsgData::ConstView
getLevel	include/mongo/logger/labeled_level.h	/^        int getLevel() const { return _level; }$/;"	f	class:mongo::logger::LabeledLevel
getLineStrings	include/mongo/geo/multilinestring.h	/^    std::vector<LineString<TCoordinates> > MultiLineString<TCoordinates>::getLineStrings() const {$/;"	f	class:mongo::geo::MultiLineString
getLinearRings	include/mongo/geo/polygon.h	/^    std::vector<LineString<TCoordinates> > Polygon<TCoordinates>::getLinearRings() const {$/;"	f	class:mongo::geo::Polygon
getLocationLineAndColumn	jsoncpp.cpp	/^std::string OurReader::getLocationLineAndColumn(Location location) const {$/;"	f	class:Json::OurReader
getLocationLineAndColumn	jsoncpp.cpp	/^std::string Reader::getLocationLineAndColumn(Location location) const {$/;"	f	class:Json::Reader
getLocationLineAndColumn	jsoncpp.cpp	/^void OurReader::getLocationLineAndColumn(Location location,$/;"	f	class:Json::OurReader
getLocationLineAndColumn	jsoncpp.cpp	/^void Reader::getLocationLineAndColumn(Location location,$/;"	f	class:Json::Reader
getLogLevel	include/mongo/util/net/sock.h	/^        logger::LogSeverity getLogLevel() const { return _logLevel; }$/;"	f	class:mongo::Socket
getLongitude	include/mongo/geo/coordinates2dgeographic.h	/^        double getLongitude() const { return _longitude; }$/;"	f	class:mongo::geo::Coordinates2DGeographic
getMD5	include/mongo/client/gridfs.h	/^        std::string getMD5() const {$/;"	f	class:mongo::GridFile
getMax	include/mongo/geo/boundingbox.h	/^        TCoordinates getMax() const { return _max; }$/;"	f	class:mongo::geo::BoundingBox
getMaxBsonObjectSize	include/mongo/client/dbclientinterface.h	/^        int getMaxBsonObjectSize() { return _maxBsonObjectSize; }$/;"	f	class:mongo::DBClientBase
getMaxMessageSizeBytes	include/mongo/client/dbclientinterface.h	/^        int getMaxMessageSizeBytes() { return _maxMessageSizeBytes; }$/;"	f	class:mongo::DBClientBase
getMaxWireVersion	include/mongo/client/dbclientinterface.h	/^        int getMaxWireVersion() { return _maxWireVersion; }$/;"	f	class:mongo::DBClientBase
getMaxWriteBatchSize	include/mongo/client/dbclientinterface.h	/^        int getMaxWriteBatchSize() { return _maxWriteBatchSize; }$/;"	f	class:mongo::DBClientBase
getMemberNames	jsoncpp.cpp	/^Value::Members Value::getMemberNames() const {$/;"	f	class:Json::Value
getMessage	include/mongo/client/dbclientcursor.h	/^        Message* getMessage(){ return batch.m.get(); }$/;"	f	class:mongo::DBClientCursor
getMessage	include/mongo/logger/message_event.h	/^        StringData getMessage() const { return _message; }$/;"	f	class:mongo::logger::MessageEventEphemeral
getMessageLength	include/mongo/util/net/message.h	/^            int32_t getMessageLength() const {$/;"	f	class:mongo::MSGHEADER::ConstView
getMin	include/mongo/geo/boundingbox.h	/^        TCoordinates getMin() const { return _min; }$/;"	f	class:mongo::geo::BoundingBox
getMinWireVersion	include/mongo/client/dbclientinterface.h	/^        int getMinWireVersion() { return _minWireVersion; }$/;"	f	class:mongo::DBClientBase
getNextChar	jsoncpp.cpp	/^OurReader::Char OurReader::getNextChar() {$/;"	f	class:Json::OurReader
getNextChar	jsoncpp.cpp	/^Reader::Char Reader::getNextChar() {$/;"	f	class:Json::Reader
getNumChunks	include/mongo/client/gridfs.h	/^        int getNumChunks() const {$/;"	f	class:mongo::GridFile
getNumConnections	include/mongo/client/dbclientinterface.h	/^        static int MONGO_CLIENT_FUNC getNumConnections() {$/;"	f	class:mongo::DBClientConnection
getOffsetLimit	jsoncpp.cpp	/^size_t Value::getOffsetLimit() const { return limit_; }$/;"	f	class:Json::Value
getOffsetStart	jsoncpp.cpp	/^size_t Value::getOffsetStart() const { return start_; }$/;"	f	class:Json::Value
getOpCode	include/mongo/util/net/message.h	/^            int32_t getOpCode() const {$/;"	f	class:mongo::MSGHEADER::ConstView
getOperation	include/mongo/util/net/message.h	/^            int32_t getOperation() const {$/;"	f	class:mongo::MsgData::ConstView
getOptions	include/mongo/client/dbclientinterface.h	/^        const BSONObj& getOptions() const { return _options; }$/;"	f	class:mongo::ConnectionString
getPassword	include/mongo/client/dbclientinterface.h	/^        const std::string& getPassword() const { return _password; }$/;"	f	class:mongo::ConnectionString
getPoints	include/mongo/geo/linestring.h	/^        std::vector<Point<TCoordinates> > getPoints() const { return _points; }$/;"	f	class:mongo::geo::LineString
getPoints	include/mongo/geo/multilinestring.h	/^    std::vector<Point<TCoordinates> > MultiLineString<TCoordinates>::getPoints() const {$/;"	f	class:mongo::geo::MultiLineString
getPoints	include/mongo/geo/multipoint.h	/^        std::vector<Point<TCoordinates> > getPoints() const { return _points; }$/;"	f	class:mongo::geo::MultiPoint
getPoints	include/mongo/geo/multipolygon.h	/^    std::vector<Point<TCoordinates> > MultiPolygon<TCoordinates>::getPoints() const {$/;"	f	class:mongo::geo::MultiPolygon
getPoints	include/mongo/geo/polygon.h	/^    std::vector<Point<TCoordinates> > Polygon<TCoordinates>::getPoints() const {$/;"	f	class:mongo::geo::Polygon
getPolygons	include/mongo/geo/multipolygon.h	/^        std::vector<Polygon<TCoordinates> > getPolygons() const { return _polygons; }$/;"	f	class:mongo::geo::MultiPolygon
getPostRunCommandHook	include/mongo/client/dbclientinterface.h	/^        PostRunCommandHookFunc getPostRunCommandHook() const {$/;"	f	class:mongo::DBClientWithCommands
getQuestion	Judge.cpp	/^question &Judge::getQuestion() {$/;"	f	class:Judge
getRequestID	include/mongo/util/net/message.h	/^            int32_t getRequestID() const {$/;"	f	class:mongo::MSGHEADER::ConstView
getResponseTo	include/mongo/util/net/message.h	/^            MSGID getResponseTo() const {$/;"	f	class:mongo::MsgData::ConstView
getResponseTo	include/mongo/util/net/message.h	/^            int32_t getResponseTo() const {$/;"	f	class:mongo::MSGHEADER::ConstView
getRunCommandHook	include/mongo/client/dbclientinterface.h	/^        RunCommandHookFunc getRunCommandHook() const {$/;"	f	class:mongo::DBClientWithCommands
getServerAddress	include/mongo/client/dbclientinterface.h	/^        std::string getServerAddress() const { return _serverString; }$/;"	f	class:mongo::DBClientConnection
getServerHostAndPort	include/mongo/client/dbclientinterface.h	/^        const HostAndPort& getServerHostAndPort() const { return _server; }$/;"	f	class:mongo::DBClientConnection
getServers	include/mongo/client/dbclientinterface.h	/^        const std::vector<HostAndPort>& getServers() const { return _servers; }$/;"	f	class:mongo::ConnectionString
getSetName	include/mongo/client/dbclientinterface.h	/^        std::string getSetName() const { return _setName; }$/;"	f	class:mongo::ConnectionString
getSeverity	include/mongo/logger/message_event.h	/^        LogSeverity getSeverity() const { return _severity; }$/;"	f	class:mongo::logger::MessageEventEphemeral
getSize	include/mongo/bson/bsonmisc.h	/^        int getSize() const {$/;"	f	class:mongo::BSONSizeTracker
getSize	include/mongo/bson/util/builder.h	/^        int getSize() const { return size; }$/;"	f	class:mongo::_BufBuilder
getSoTimeout	include/mongo/client/dbclient_rs.h	/^        double getSoTimeout() const { return _so_timeout; }$/;"	f	class:mongo::DBClientReplicaSet
getSoTimeout	include/mongo/client/dbclientinterface.h	/^        double getSoTimeout() const { return _so_timeout; }$/;"	f	class:mongo::DBClientConnection
getSockCreationMicroSec	include/mongo/client/dbclientinterface.h	/^        virtual uint64_t getSockCreationMicroSec() const {$/;"	f	class:mongo::DBClientBase
getSockCreationMicroSec	include/mongo/util/net/message_port.h	/^        uint64_t getSockCreationMicroSec() const {$/;"	f	class:mongo::MessagingPort
getSockCreationMicroSec	include/mongo/util/net/sock.h	/^        uint64_t getSockCreationMicroSec() const {$/;"	f	class:mongo::Socket
getStatus	include/mongo/base/status_with.h	/^        const Status& getStatus() const { return _status;}$/;"	f	class:mongo::StatusWith
getString	jsoncpp.cpp	/^bool Value::getString(char const** str, char const** end) const {$/;"	f	class:Json::Value
getStructuredErrors	jsoncpp.cpp	/^std::vector<OurReader::StructuredError> OurReader::getStructuredErrors() const {$/;"	f	class:Json::OurReader
getStructuredErrors	jsoncpp.cpp	/^std::vector<Reader::StructuredError> Reader::getStructuredErrors() const {$/;"	f	class:Json::Reader
getTagBSON	include/mongo/client/dbclient_rs.h	/^        const BSONArray& getTagBSON() const { return _tags; }$/;"	f	class:mongo::TagSet
getThreadId	Thread.h	/^        pthread_t getThreadId() const {return _id;}$/;"	f	class:Thread::Thread
getType	include/mongo/geo/geometrycollection.h	/^        virtual GeoObjType getType() const { return GeoObjType_GeometryCollection; }$/;"	f	class:mongo::geo::GeometryCollection
getType	include/mongo/geo/linestring.h	/^        virtual GeoObjType getType() const { return GeoObjType_LineString; }$/;"	f	class:mongo::geo::LineString
getType	include/mongo/geo/multilinestring.h	/^        virtual GeoObjType getType() const { return GeoObjType_MultiLineString; }$/;"	f	class:mongo::geo::MultiLineString
getType	include/mongo/geo/multipoint.h	/^        virtual GeoObjType getType() const { return GeoObjType_MultiPoint; }$/;"	f	class:mongo::geo::MultiPoint
getType	include/mongo/geo/multipolygon.h	/^        virtual GeoObjType getType() const { return GeoObjType_MultiPolygon; }$/;"	f	class:mongo::geo::MultiPolygon
getType	include/mongo/geo/point.h	/^        virtual GeoObjType getType() const { return GeoObjType_Point; }$/;"	f	class:mongo::geo::Point
getType	include/mongo/geo/polygon.h	/^        virtual GeoObjType getType() const { return GeoObjType_Polygon; }$/;"	f	class:mongo::geo::Polygon
getUploadDate	include/mongo/client/gridfs.h	/^        Date_t getUploadDate() const {$/;"	f	class:mongo::GridFile
getUser	include/mongo/client/dbclientinterface.h	/^        const std::string& getUser() const { return _user; }$/;"	f	class:mongo::ConnectionString
getValidReaderKeys	jsoncpp.cpp	/^static void getValidReaderKeys(std::set<std::string>* valid_keys)$/;"	f	namespace:Json
getValidWriterKeys	jsoncpp.cpp	/^static void getValidWriterKeys(std::set<std::string>* valid_keys)$/;"	f	namespace:Json
getValue	include/mongo/base/status_with.h	/^        const T& getValue() const { \/* verify( isOK() ); *\/ return _t; } \/\/ TODO$/;"	f	class:mongo::StatusWith
getWriteConcern	include/mongo/client/dbclientinterface.h	/^        const WriteConcern& getWriteConcern() const { return _writeConcern; }$/;"	f	class:mongo::DBClientBase
getX	include/mongo/geo/coordinates2d.h	/^        double getX() const { return _x; }$/;"	f	class:mongo::geo::Coordinates2D
getX509SubjectName	include/mongo/util/net/message_port.h	/^        std::string getX509SubjectName() {$/;"	f	class:mongo::AbstractMessagingPort
getY	include/mongo/geo/coordinates2d.h	/^        double getY() const { return _y; }$/;"	f	class:mongo::geo::Coordinates2D
getns	include/mongo/client/dbclientcursor.h	/^        std::string getns() const { return ns; }$/;"	f	class:mongo::DBClientCursor
globalLogDomain	include/mongo/logger/logger.h	/^    inline ComponentMessageLogDomain* globalLogDomain() { return globalLogManager()->getGlobalDomain(); }$/;"	f	namespace:mongo::logger
good	jsoncpp.cpp	/^bool OurReader::good() const {$/;"	f	class:Json::OurReader
good	jsoncpp.cpp	/^bool Reader::good() const {$/;"	f	class:Json::Reader
got	include/mongo/bson/bsonmisc.h	/^        void got( int size ) {$/;"	f	class:mongo::BSONSizeTracker
grade	Grading.cpp	/^grading_result Grading::grade()$/;"	f	class:Grading
grading_result	Grading.h	/^    grading_result() : result(), correct(false) {}$/;"	f	struct:grading_result
grading_result	Grading.h	/^struct grading_result:public result$/;"	s
gridfs_offset	include/mongo/client/gridfs.h	/^    typedef unsigned long long gridfs_offset;$/;"	t	namespace:mongo
grow	include/mongo/bson/util/builder.h	/^        inline char* grow(int by) {$/;"	f	class:mongo::_BufBuilder
grow_reallocate	include/mongo/bson/util/builder.h	/^        void NOINLINE_DECL grow_reallocate(int minSize) {$/;"	f	class:mongo::_BufBuilder
gt	include/mongo/bson/bson_field.h	/^        BSONFieldValue<BSONObj> gt(const T& t) const {$/;"	f	class:mongo::BSONField
hasComment	jsoncpp.cpp	/^bool Value::hasComment(CommentPlacement placement) const {$/;"	f	class:Json::Value
hasCommentForValue	jsoncpp.cpp	/^bool BuiltStyledStreamWriter::hasCommentForValue(const Value& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
hasCommentForValue	jsoncpp.cpp	/^bool StyledStreamWriter::hasCommentForValue(const Value& value) {$/;"	f	class:Json::StyledStreamWriter
hasCommentForValue	jsoncpp.cpp	/^bool StyledWriter::hasCommentForValue(const Value& value) {$/;"	f	class:Json::StyledWriter
hasDefault	include/mongo/bson/bson_field.h	/^        bool hasDefault() const {$/;"	f	class:mongo::BSONField
hasElement	include/mongo/bson/bsonobj.h	/^        bool hasElement(const StringData& name) const { return hasField(name); }$/;"	f	class:mongo::BSONObj
hasField	include/mongo/bson/bsonobj.h	/^        bool hasField( const StringData& name ) const { return !getField(name).eoo(); }$/;"	f	class:mongo::BSONObj
hasPort	include/mongo/util/net/hostandport.h	/^        bool hasPort() const {$/;"	f	struct:mongo::HostAndPort
hasResultFlag	include/mongo/client/dbclientcursor.h	/^        bool hasResultFlag( int flag ) {$/;"	f	class:mongo::DBClientCursor
hash	include/mongo/util/net/hostandport.h	/^struct hash<mongo::HostAndPort> {$/;"	s
haveSubobj	include/mongo/bson/bsonmisc.h	/^        bool haveSubobj() const { return _subobj.get() != 0; }$/;"	f	class:mongo::BSONObjBuilderValueStream
header	include/mongo/util/net/message.h	/^            MSGHEADER::ConstView header() const {$/;"	f	class:mongo::MsgData::ConstView
header	include/mongo/util/net/message.h	/^            MSGHEADER::Layout header;$/;"	m	struct:mongo::MsgData::Layout
header	include/mongo/util/net/message.h	/^            MSGHEADER::View header() const {$/;"	f	class:mongo::MsgData::View
header	include/mongo/util/net/message.h	/^        MsgData::View header() const {$/;"	f	class:mongo::Message
hint	include/mongo/client/dbclientinterface.h	/^        BSONElement hint() const { return _queryObj.getHint(); }$/;"	f	class:mongo::QuerySpec
host	include/mongo/util/net/hostandport.h	/^        const std::string& host() const {$/;"	f	struct:mongo::HostAndPort
htobe16	include/mongo/platform/endian.h	110;"	d
htobe16	include/mongo/platform/endian.h	123;"	d
htobe16	include/mongo/platform/endian.h	494;"	d
htobe16	include/mongo/platform/endian.h	50;"	d
htobe32	include/mongo/platform/endian.h	111;"	d
htobe32	include/mongo/platform/endian.h	124;"	d
htobe32	include/mongo/platform/endian.h	495;"	d
htobe32	include/mongo/platform/endian.h	51;"	d
htobe64	include/mongo/platform/endian.h	112;"	d
htobe64	include/mongo/platform/endian.h	125;"	d
htobe64	include/mongo/platform/endian.h	496;"	d
htobe64	include/mongo/platform/endian.h	52;"	d
htole16	include/mongo/platform/endian.h	113;"	d
htole16	include/mongo/platform/endian.h	126;"	d
htole16	include/mongo/platform/endian.h	497;"	d
htole16	include/mongo/platform/endian.h	53;"	d
htole32	include/mongo/platform/endian.h	114;"	d
htole32	include/mongo/platform/endian.h	127;"	d
htole32	include/mongo/platform/endian.h	498;"	d
htole32	include/mongo/platform/endian.h	54;"	d
htole64	include/mongo/platform/endian.h	115;"	d
htole64	include/mongo/platform/endian.h	128;"	d
htole64	include/mongo/platform/endian.h	499;"	d
htole64	include/mongo/platform/endian.h	55;"	d
in	Judge.h	/^    SemaphoreObejct in, out;$/;"	m	class:Judge
increment	include/mongo/bson/timestamp.h	/^        uint32_t increment() const { return _increment; }$/;"	f	class:mongo::Timestamp_t
increment	jsoncpp.cpp	/^void ValueIteratorBase::increment() {$/;"	f	class:Json::ValueIteratorBase
indent	jsoncpp.cpp	/^void BuiltStyledStreamWriter::indent() { indentString_ += indentation_; }$/;"	f	class:Json::BuiltStyledStreamWriter
indent	jsoncpp.cpp	/^void StyledStreamWriter::indent() { indentString_ += indentation_; }$/;"	f	class:Json::StyledStreamWriter
indent	jsoncpp.cpp	/^void StyledWriter::indent() { indentString_ += std::string(indentSize_, ' '); }$/;"	f	class:Json::StyledWriter
indentSize_	json.h	/^  int indentSize_;$/;"	m	class:Json::StyledWriter
indentString_	json.h	/^  std::string indentString_;$/;"	m	class:Json::StyledStreamWriter
indentString_	json.h	/^  std::string indentString_;$/;"	m	class:Json::StyledWriter
indentString_	jsoncpp.cpp	/^  std::string indentString_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
indentation_	json.h	/^  std::string indentation_;$/;"	m	class:Json::StyledStreamWriter
indentation_	jsoncpp.cpp	/^  std::string indentation_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
indented_	jsoncpp.cpp	/^  bool indented_ : 1;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
index	jsoncpp.cpp	/^ArrayIndex Value::CZString::index() const { return index_; }$/;"	f	class:Json::Value::CZString
index	jsoncpp.cpp	/^UInt ValueIteratorBase::index() const {$/;"	f	class:Json::ValueIteratorBase
index_	json.h	/^      ArrayIndex index_;$/;"	m	union:Json::Value::CZString::__anon1
index_	json.h	/^  ArrayIndex index_;$/;"	m	class:Json::PathArgument
info_arch	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	PollManager.cpp	/^void PollManager::init(PollHandler &handler, bool isEdge)$/;"	f	class:PollManager
init	ServerSocket.cpp	/^void ServerSocket::init(int port)$/;"	f	class:ServerSocket
init	include/mongo/bson/bsonobj.h	/^        void init(const char *data) {$/;"	f	class:mongo::BSONObj
initBasic	jsoncpp.cpp	/^void Value::initBasic(ValueType type, bool allocated) {$/;"	f	class:Json::Value
initialized	include/mongo/client/init.h	/^        bool initialized() const {$/;"	f	class:mongo::client::GlobalInstance
instance	JudgeServer.cpp	/^JudgeServer *JudgeServer::instance = NULL;$/;"	m	class:JudgeServer	file:
instance	JudgeServer.h	/^    static JudgeServer *instance;$/;"	m	class:JudgeServer
intValue	json.h	/^  intValue,      \/\/\/< signed integer value$/;"	e	enum:Json::ValueType
int_	json.h	/^    LargestInt int_;$/;"	m	union:Json::Value::ValueHolder
integerToDouble	jsoncpp.cpp	/^static inline double integerToDouble(Json::UInt64 value) {$/;"	f	namespace:Json
integerToDouble	jsoncpp.cpp	/^template <typename T> static inline double integerToDouble(T value) {$/;"	f	namespace:Json
intrusive_ptr_add_ref	include/mongo/util/shared_buffer.h	/^            friend void intrusive_ptr_add_ref(Holder* h) {$/;"	f	class:mongo::SharedBuffer::Holder
intrusive_ptr_release	include/mongo/util/shared_buffer.h	/^            friend void intrusive_ptr_release(Holder* h) {$/;"	f	class:mongo::SharedBuffer::Holder
invalidPath	jsoncpp.cpp	/^void Path::invalidPath(const std::string& \/*path*\/, int \/*location*\/) {$/;"	f	class:Json::Path
invariant	include/mongo/client/redef_macros.h	47;"	d
invariant	include/mongo/client/redef_macros.h	48;"	d
invariant	include/mongo/client/undef_macros.h	45;"	d
invariant	include/mongo/util/assert_util.h	264;"	d
invariantOK	include/mongo/client/redef_macros.h	50;"	d
invariantOK	include/mongo/client/redef_macros.h	51;"	d
invariantOK	include/mongo/client/undef_macros.h	47;"	d
invariantOK	include/mongo/util/assert_util.h	265;"	d
isABSONObj	include/mongo/bson/bsonelement.h	/^        bool isABSONObj() const {$/;"	f	class:mongo::BSONElement
isArray	include/mongo/bson/bsonobjbuilder.h	/^        bool isArray() const {$/;"	f	class:mongo::BSONArrayBuilder
isArray	include/mongo/bson/bsonobjbuilder.h	/^        bool isArray() const {$/;"	f	class:mongo::BSONObjBuilder
isArray	jsoncpp.cpp	/^bool Value::isArray() const { return type_ == arrayValue; }$/;"	f	class:Json::Value
isAwaitingHandshake	include/mongo/util/net/sock.h	/^        bool isAwaitingHandshake() {$/;"	f	class:mongo::Socket
isBool	jsoncpp.cpp	/^bool Value::isBool() const { return type_ == booleanValue; }$/;"	f	class:Json::Value
isBoolean	include/mongo/bson/bsonelement.h	/^        bool isBoolean() const { return type() == mongo::Bool; }$/;"	f	class:mongo::BSONElement
isControlCharacter	jsoncpp.cpp	/^static inline bool isControlCharacter(char ch) { return ch > 0 && ch <= 0x1F; }$/;"	f	namespace:Json
isConvertibleTo	jsoncpp.cpp	/^bool Value::isConvertibleTo(ValueType other) const {$/;"	f	class:Json::Value
isCorrectCode	Judge.cpp	/^bool Judge::isCorrectCode(const std::string &code) {$/;"	f	class:Judge
isDead	include/mongo/client/dbclientcursor.h	/^        bool isDead() const { return cursorId == 0; }$/;"	f	class:mongo::DBClientCursor
isDouble	jsoncpp.cpp	/^bool Value::isDouble() const { return type_ == realValue || isIntegral(); }$/;"	f	class:Json::Value
isEmpty	include/mongo/bson/bsonobj.h	/^        bool isEmpty() const { return objsize() <= 5; }$/;"	f	class:mongo::BSONObj
isEmpty	include/mongo/client/dbclientinterface.h	/^        bool isEmpty() const { return _ns.size() == 0; }$/;"	f	class:mongo::QuerySpec
isEqual	jsoncpp.cpp	/^bool ValueIteratorBase::isEqual(const SelfType& other) const {$/;"	f	class:Json::ValueIteratorBase
isExplain	include/mongo/client/dbclientinterface.h	/^        bool isExplain() const { return _queryObj.isExplain(); }$/;"	f	class:mongo::QuerySpec
isFailed	include/mongo/client/dbclient_rs.h	/^        virtual bool isFailed() const { return ! _master || _master->isFailed(); }$/;"	f	class:mongo::DBClientReplicaSet
isFailed	include/mongo/client/dbclientinterface.h	/^        bool isFailed() const { return _failed; }$/;"	f	class:mongo::DBClientConnection
isInf	include/mongo/platform/float_utils.h	/^    inline bool isInf(double d, int* sign = 0) {$/;"	f	namespace:mongo
isInt	jsoncpp.cpp	/^bool Value::isInt() const {$/;"	f	class:Json::Value
isInt64	jsoncpp.cpp	/^bool Value::isInt64() const {$/;"	f	class:Json::Value
isIntegral	jsoncpp.cpp	/^bool Value::isIntegral() const {$/;"	f	class:Json::Value
isMember	jsoncpp.cpp	/^bool Value::isMember(char const* key) const$/;"	f	class:Json::Value
isMember	jsoncpp.cpp	/^bool Value::isMember(char const* key, char const* end) const$/;"	f	class:Json::Value
isMember	jsoncpp.cpp	/^bool Value::isMember(const CppTL::ConstString& key) const {$/;"	f	class:Json::Value
isMember	jsoncpp.cpp	/^bool Value::isMember(std::string const& key) const$/;"	f	class:Json::Value
isMultineArray	jsoncpp.cpp	/^bool BuiltStyledStreamWriter::isMultineArray(Value const& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
isMultineArray	jsoncpp.cpp	/^bool StyledStreamWriter::isMultineArray(const Value& value) {$/;"	f	class:Json::StyledStreamWriter
isMultineArray	jsoncpp.cpp	/^bool StyledWriter::isMultineArray(const Value& value) {$/;"	f	class:Json::StyledWriter
isNaN	include/mongo/platform/float_utils.h	/^    inline bool isNaN(double d) { $/;"	f	namespace:mongo
isNonblockSocket	BasicSocket.cpp	/^bool Network::BasicSocket::isNonblockSocket()$/;"	f	class:Network::BasicSocket
isNull	include/mongo/bson/bsonelement.h	/^        bool isNull() const {$/;"	f	class:mongo::BSONElement
isNull	jsoncpp.cpp	/^bool Value::isNull() const { return type_ == nullValue; }$/;"	f	class:Json::Value
isNull_	json.h	/^  bool isNull_;$/;"	m	class:Json::ValueIteratorBase
isNumber	include/mongo/bson/bsonelement.h	/^    inline bool BSONElement::isNumber() const {$/;"	f	class:mongo::BSONElement
isNumeric	jsoncpp.cpp	/^bool Value::isNumeric() const { return isIntegral() || isDouble(); }$/;"	f	class:Json::Value
isOK	include/mongo/base/status-inl.h	/^    inline bool Status::isOK() const {$/;"	f	class:mongo::Status
isOK	include/mongo/base/status_with.h	/^        bool isOK() const { return _status.isOK(); }$/;"	f	class:mongo::StatusWith
isObject	jsoncpp.cpp	/^bool Value::isObject() const { return type_ == objectValue; }$/;"	f	class:Json::Value
isOwned	include/mongo/bson/bsonobj.h	/^        bool isOwned() const { return _ownedBuffer.get() != 0; }$/;"	f	class:mongo::BSONObj
isRunning	Thread.h	/^        bool isRunning() const { return _running; }$/;"	f	class:Thread::Thread
isSet	include/mongo/bson/oid.h	/^        bool isSet() const {$/;"	f	class:mongo::OID
isSimpleType	include/mongo/bson/bsonelement.h	/^    inline bool BSONElement::isSimpleType() const {$/;"	f	class:mongo::BSONElement
isStaticString	jsoncpp.cpp	/^bool Value::CZString::isStaticString() const { return storage_.policy_ == noDuplication; }$/;"	f	class:Json::Value::CZString
isStillConnected	include/mongo/client/dbclientinterface.h	/^        bool isStillConnected() { return p ? p->isStillConnected() : true; }$/;"	f	class:mongo::DBClientConnection
isStillConnected	include/mongo/util/net/message_port.h	/^        bool isStillConnected() {$/;"	f	class:mongo::MessagingPort
isString	jsoncpp.cpp	/^bool Value::isString() const { return type_ == stringValue; }$/;"	f	class:Json::Value
isUInt	jsoncpp.cpp	/^bool Value::isUInt() const {$/;"	f	class:Json::Value
isUInt64	jsoncpp.cpp	/^bool Value::isUInt64() const {$/;"	f	class:Json::Value
isUserAssertion	include/mongo/util/assert_util.h	/^        virtual bool isUserAssertion() const { return false; }$/;"	f	class:mongo::AssertionException
isUserAssertion	include/mongo/util/assert_util.h	/^        virtual bool isUserAssertion() const { return true; }$/;"	f	class:mongo::UserException
isValid	include/mongo/bson/bsonobj.h	/^        bool isValid() const {$/;"	f	class:mongo::BSONObj
isValid	include/mongo/client/dbclientinterface.h	/^        bool isValid() const { return _type != INVALID; }$/;"	f	class:mongo::ConnectionString
isValid	include/mongo/util/net/sock.h	/^        bool isValid() const { return _isValid; }$/;"	f	struct:mongo::SockAddr
isValidIndex	jsoncpp.cpp	/^bool Value::isValidIndex(ArrayIndex index) const { return index < size(); }$/;"	f	class:Json::Value
isfinite	jsoncpp.cpp	3953;"	d	file:
isfinite	jsoncpp.cpp	3970;"	d	file:
itcount	include/mongo/client/dbclientcursor.h	/^        int itcount() {$/;"	f	class:mongo::DBClientCursor
iterator	include/mongo/bson/bsonobj.h	/^        typedef BSONObjIterator iterator;$/;"	t	class:mongo::BSONObj
iterator	json.h	/^  typedef ValueIterator iterator;$/;"	t	class:Json::Value
iterator_category	json.h	/^  typedef std::bidirectional_iterator_tag iterator_category;$/;"	t	class:Json::ValueIteratorBase
j	include/mongo/bson/util/builder.h	/^        void appendNum(bool j) = delete;$/;"	m	class:mongo::_BufBuilder
join	Thread.cpp	/^void Thread::Thread::join(void **ret_data)$/;"	f	class:Thread::Thread
journaled	include/mongo/client/write_concern.h	/^        static const WriteConcern journaled;$/;"	m	class:mongo::WriteConcern
jstNULL	include/mongo/bson/bsontypes.h	/^        jstNULL=10,$/;"	e	enum:mongo::BSONType
jstOID	include/mongo/bson/bsontypes.h	/^        jstOID=7,$/;"	e	enum:mongo::BSONType
kAccessControl	include/mongo/logger/log_component.h	/^            kAccessControl,$/;"	e	enum:mongo::logger::LogComponent::Value
kBoundingBoxFieldName	include/mongo/geo/constants.h	/^    const char kBoundingBoxFieldName[] = "bbox";$/;"	m	namespace:mongo::geo
kCommand	include/mongo/logger/log_component.h	/^            kCommand,$/;"	e	enum:mongo::logger::LogComponent::Value
kConfigServer	include/mongo/client/options.h	/^            kConfigServer = 27019$/;"	e	enum:mongo::client::Options::DefaultPorts
kControl	include/mongo/logger/log_component.h	/^            kControl,$/;"	e	enum:mongo::logger::LogComponent::Value
kCoordsFieldName	include/mongo/geo/constants.h	/^    const char kCoordsFieldName[] = "coordinates";$/;"	m	namespace:mongo::geo
kDbServer	include/mongo/client/options.h	/^            kDbServer = 27017,$/;"	e	enum:mongo::client::Options::DefaultPorts
kDefault	include/mongo/logger/log_component.h	/^            kDefault = 0,$/;"	e	enum:mongo::logger::LogComponent::Value
kDefaultAutoShutdownGracePeriodMillis	include/mongo/client/options.h	/^        static const unsigned int kDefaultAutoShutdownGracePeriodMillis = 0;$/;"	m	class:mongo::client::Options
kDefaultDefaultLocalThresholdMillis	include/mongo/client/options.h	/^        static const int kDefaultDefaultLocalThresholdMillis = 15;$/;"	m	class:mongo::client::Options
kFsync	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	e	enum:mongo::WriteConcern::Options
kGeo	include/mongo/logger/log_component.h	/^            kGeo,$/;"	e	enum:mongo::logger::LogComponent::Value
kGeometriesFieldName	include/mongo/geo/constants.h	/^    const char kGeometriesFieldName[] = "geometries";$/;"	m	namespace:mongo::geo
kGeometryCollectionTypeStr	include/mongo/geo/constants.h	/^    const char kGeometryCollectionTypeStr[] = "GeometryCollection";$/;"	m	namespace:mongo::geo
kGitRevision	include/mongo/version.h	/^    const char kGitRevision[] = "nogitversion";$/;"	m	namespace:mongo::client
kIncrementSize	include/mongo/bson/oid.h	/^            kIncrementSize = 3$/;"	e	enum:mongo::OID::__anon4
kIndex	include/mongo/logger/log_component.h	/^            kIndex,$/;"	e	enum:mongo::logger::LogComponent::Value
kIndexTypeAscending	include/mongo/client/index_spec.h	/^            kIndexTypeAscending,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeDescending	include/mongo/client/index_spec.h	/^            kIndexTypeDescending,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeGeo2D	include/mongo/client/index_spec.h	/^            kIndexTypeGeo2D,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeGeo2DSphere	include/mongo/client/index_spec.h	/^            kIndexTypeGeo2DSphere,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeGeoHaystack	include/mongo/client/index_spec.h	/^            kIndexTypeGeoHaystack,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeHashed	include/mongo/client/index_spec.h	/^            kIndexTypeHashed,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexTypeText	include/mongo/client/index_spec.h	/^            kIndexTypeText,$/;"	e	enum:mongo::IndexSpec::IndexType
kIndexValAscending	include/mongo/client/index_spec.h	/^        static const int kIndexValAscending = 1;$/;"	m	class:mongo::IndexSpec
kIndexValDescending	include/mongo/client/index_spec.h	/^        static const int kIndexValDescending = -1;$/;"	m	class:mongo::IndexSpec
kIndexValGeo2D	include/mongo/client/index_spec.h	/^        static const char kIndexValGeo2D[];$/;"	m	class:mongo::IndexSpec
kIndexValGeo2DSphere	include/mongo/client/index_spec.h	/^        static const char kIndexValGeo2DSphere[];$/;"	m	class:mongo::IndexSpec
kIndexValGeoHaystack	include/mongo/client/index_spec.h	/^        static const char kIndexValGeoHaystack[];$/;"	m	class:mongo::IndexSpec
kIndexValHashed	include/mongo/client/index_spec.h	/^        static const char kIndexValHashed[];$/;"	m	class:mongo::IndexSpec
kIndexValText	include/mongo/client/index_spec.h	/^        static const char kIndexValText[];$/;"	m	class:mongo::IndexSpec
kInstanceUniqueSize	include/mongo/bson/oid.h	/^            kInstanceUniqueSize = 5,$/;"	e	enum:mongo::OID::__anon4
kJ	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	e	enum:mongo::WriteConcern::Options
kJournal	include/mongo/logger/log_component.h	/^            kJournal,$/;"	e	enum:mongo::logger::LogComponent::Value
kLineStringTypeStr	include/mongo/geo/constants.h	/^    const char kLineStringTypeStr[] = "LineString";$/;"	m	namespace:mongo::geo
kMajority	include/mongo/client/write_concern.h	/^        static const char kMajority[];$/;"	m	class:mongo::WriteConcern
kMultiLineStringTypeStr	include/mongo/geo/constants.h	/^    const char kMultiLineStringTypeStr[] = "MultiLineString";$/;"	m	namespace:mongo::geo
kMultiPointTypeStr	include/mongo/geo/constants.h	/^    const char kMultiPointTypeStr[] = "MultiPoint";$/;"	m	namespace:mongo::geo
kMultiPolygonTypeStr	include/mongo/geo/constants.h	/^    const char kMultiPolygonTypeStr[] = "MultiPolygon";$/;"	m	namespace:mongo::geo
kNetwork	include/mongo/logger/log_component.h	/^            kNetwork,$/;"	e	enum:mongo::logger::LogComponent::Value
kNull	jsoncpp.cpp	/^static const unsigned char ALIGNAS(8) kNull[sizeof(Value)] = { 0 };$/;"	m	namespace:Json	file:
kNullRef	jsoncpp.cpp	/^const unsigned char& kNullRef = kNull[0];$/;"	m	namespace:Json	file:
kNumLogComponents	include/mongo/logger/log_component.h	/^            kNumLogComponents$/;"	e	enum:mongo::logger::LogComponent::Value
kNumOptions	include/mongo/client/write_concern.h	/^        static const size_t kNumOptions = 5;$/;"	m	class:mongo::WriteConcern
kOIDSize	include/mongo/bson/oid.h	/^            kOIDSize = 12,$/;"	e	enum:mongo::OID::__anon4
kPointTypeStr	include/mongo/geo/constants.h	/^    const char kPointTypeStr[] = "Point";$/;"	m	namespace:mongo::geo
kPolygonTypeStr	include/mongo/geo/constants.h	/^    const char kPolygonTypeStr[] = "Polygon";$/;"	m	namespace:mongo::geo
kQuery	include/mongo/logger/log_component.h	/^            kQuery,$/;"	e	enum:mongo::logger::LogComponent::Value
kReplication	include/mongo/logger/log_component.h	/^            kReplication,$/;"	e	enum:mongo::logger::LogComponent::Value
kSSLDisabled	include/mongo/client/options.h	/^            kSSLDisabled,$/;"	e	enum:mongo::client::Options::SSLModes
kSSLRequired	include/mongo/client/options.h	/^            kSSLRequired$/;"	e	enum:mongo::client::Options::SSLModes
kShardServer	include/mongo/client/options.h	/^            kShardServer = 27018,$/;"	e	enum:mongo::client::Options::DefaultPorts
kSharding	include/mongo/logger/log_component.h	/^            kSharding,$/;"	e	enum:mongo::logger::LogComponent::Value
kStorage	include/mongo/logger/log_component.h	/^            kStorage,$/;"	e	enum:mongo::logger::LogComponent::Value
kTLS1_0	include/mongo/client/options.h	/^            kTLS1_0,$/;"	e	enum:mongo::client::Options::TLSProtocol
kTLS1_1	include/mongo/client/options.h	/^            kTLS1_1,$/;"	e	enum:mongo::client::Options::TLSProtocol
kTLS1_2	include/mongo/client/options.h	/^            kTLS1_2$/;"	e	enum:mongo::client::Options::TLSProtocol
kTimeout	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	e	enum:mongo::WriteConcern::Options
kTimestampSize	include/mongo/bson/oid.h	/^            kTimestampSize = 4,$/;"	e	enum:mongo::OID::__anon4
kTypeFieldName	include/mongo/geo/constants.h	/^    const char kTypeFieldName[] = "type";$/;"	m	namespace:mongo::geo
kVersion	include/mongo/version.h	/^    const unsigned int kVersion = MONGOCLIENT_VERSION;$/;"	m	namespace:mongo::client
kVersionMajor	include/mongo/version.h	/^    const unsigned int kVersionMajor = MONGOCLIENT_VERSION_MAJOR;$/;"	m	namespace:mongo::client
kVersionMinor	include/mongo/version.h	/^    const unsigned int kVersionMinor = MONGOCLIENT_VERSION_MINOR;$/;"	m	namespace:mongo::client
kVersionPatch	include/mongo/version.h	/^    const unsigned int kVersionPatch = MONGOCLIENT_VERSION_PATCH;$/;"	m	namespace:mongo::client
kVersionString	include/mongo/version.h	/^    const char kVersionString[] = "1.0.3-rc1-pre";$/;"	m	namespace:mongo::client
kW	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	e	enum:mongo::WriteConcern::Options
kWStr	include/mongo/client/write_concern.h	/^        enum Options { kW, kWStr, kJ, kFsync, kTimeout };$/;"	e	enum:mongo::WriteConcern::Options
kWrite	include/mongo/logger/log_component.h	/^            kWrite,$/;"	e	enum:mongo::logger::LogComponent::Value
kZeroInitTag	include/mongo/base/encoded_value_storage.h	/^    const ZeroInitTag_t kZeroInitTag;$/;"	m	namespace:mongo
key	jsoncpp.cpp	/^Value ValueIteratorBase::key() const {$/;"	f	class:Json::ValueIteratorBase
key_	json.h	/^  std::string key_;$/;"	m	class:Json::PathArgument
kill	include/mongo/bson/util/builder.h	/^        void kill() {$/;"	f	class:mongo::_BufBuilder
kindIndex	json.h	/^    kindIndex,$/;"	e	enum:Json::PathArgument::Kind
kindKey	json.h	/^    kindKey$/;"	e	enum:Json::PathArgument::Kind
kindNone	json.h	/^    kindNone = 0,$/;"	e	enum:Json::PathArgument::Kind
kind_	json.h	/^  Kind kind_;$/;"	m	class:Json::PathArgument
l	include/mongo/bson/util/builder.h	/^        int l;$/;"	m	class:mongo::_BufBuilder
l_	include/mongo/bson/bsonmisc.h	/^            const char *l_;$/;"	m	struct:mongo::Labeler::Label
l_	include/mongo/bson/bsonmisc.h	/^        const Label &l_;$/;"	m	class:mongo::Labeler
lastValueEnd_	json.h	/^  Location lastValueEnd_;$/;"	m	class:Json::Reader
lastValueEnd_	jsoncpp.cpp	/^  Location lastValueEnd_;$/;"	m	class:Json::OurReader	file:
lastValue_	json.h	/^  Value* lastValue_;$/;"	m	class:Json::Reader
lastValue_	jsoncpp.cpp	/^  Value* lastValue_;$/;"	m	class:Json::OurReader	file:
lazySupported	include/mongo/client/dbclient_rs.h	/^        virtual bool lazySupported() const { return true; }$/;"	f	class:mongo::DBClientReplicaSet
lazySupported	include/mongo/client/dbclientinterface.h	/^        virtual bool lazySupported() const { return true; }$/;"	f	class:mongo::DBClientConnection
le16toh	include/mongo/platform/endian.h	119;"	d
le16toh	include/mongo/platform/endian.h	132;"	d
le16toh	include/mongo/platform/endian.h	503;"	d
le16toh	include/mongo/platform/endian.h	59;"	d
le32toh	include/mongo/platform/endian.h	120;"	d
le32toh	include/mongo/platform/endian.h	133;"	d
le32toh	include/mongo/platform/endian.h	504;"	d
le32toh	include/mongo/platform/endian.h	60;"	d
le64toh	include/mongo/platform/endian.h	121;"	d
le64toh	include/mongo/platform/endian.h	134;"	d
le64toh	include/mongo/platform/endian.h	505;"	d
le64toh	include/mongo/platform/endian.h	61;"	d
len	InetSocket.h	/^        int len;$/;"	m	struct:Network::packet
len	include/mongo/bson/bsonobjbuilder.h	/^        int len() const { return _b.len(); }$/;"	f	class:mongo::BSONArrayBuilder
len	include/mongo/bson/bsonobjbuilder.h	/^        int len() const { return _b.len(); }$/;"	f	class:mongo::BSONObjBuilder
len	include/mongo/bson/util/builder.h	/^        int len() const { return _buf.l; }$/;"	f	class:mongo::StringBuilderImpl
len	include/mongo/bson/util/builder.h	/^        int len() const { return l; }$/;"	f	class:mongo::_BufBuilder
len	include/mongo/client/gridfs.h	/^        int len() const {$/;"	f	class:mongo::GridFSChunk
length	include/mongo/bson/bsonmisc.h	/^        int length;$/;"	m	struct:mongo::BSONBinData
length	jsoncpp.cpp	/^unsigned Value::CZString::length() const { return storage_.length_; }$/;"	f	class:Json::Value::CZString
length_	json.h	/^      unsigned length_: 30; \/\/ 1GB max$/;"	m	struct:Json::Value::CZString::StringStorage
lessSevere	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::lessSevere() const { return LogSeverity(_severity + 1); }$/;"	f	class:mongo::logger::LogSeverity
limit	question.h	/^    int limit;$/;"	m	struct:question
limit_	json.h	/^  size_t limit_;$/;"	m	class:Json::Value
listen	BasicSocket.cpp	/^bool Network::BasicSocket::listen(int backlog)$/;"	f	class:Network::BasicSocket
littleToNative	include/mongo/platform/endian.h	/^        inline static T littleToNative(T t) {$/;"	f	struct:mongo::endian::ByteOrderConverter
littleToNative	include/mongo/platform/endian.h	/^    inline T littleToNative(T t) {$/;"	f	namespace:mongo::endian
load	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static T load(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
load	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static T load(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
load	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static T load(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
load	include/mongo/platform/atomic_intrinsics_win32.h	/^        static T load(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
load	include/mongo/platform/atomic_word_cxx11.h	/^        WordType load() const {$/;"	f	class:mongo::AtomicWord
load	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType load() const { return AtomicIntrinsics<WordType>::load(&_value); }$/;"	f	class:mongo::AtomicWord
loadRelaxed	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static T loadRelaxed(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
loadRelaxed	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static T loadRelaxed(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
loadRelaxed	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static T loadRelaxed(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
loadRelaxed	include/mongo/platform/atomic_intrinsics_win32.h	/^        static T loadRelaxed(volatile const T* value) {$/;"	f	class:mongo::AtomicIntrinsics
loadRelaxed	include/mongo/platform/atomic_word_cxx11.h	/^        WordType loadRelaxed() const {$/;"	f	class:mongo::AtomicWord
loadRelaxed	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType loadRelaxed() const { return AtomicIntrinsics<WordType>::loadRelaxed(&_value); }$/;"	f	class:mongo::AtomicWord
localAddr	include/mongo/util/net/sock.h	/^        SockAddr localAddr() const { return _local; }$/;"	f	class:mongo::Socket
location	include/mongo/base/status-inl.h	/^    inline int Status::location() const {$/;"	f	class:mongo::Status
location	include/mongo/base/status.h	/^            const int location;            \/\/ unique location of the triggering line in the code$/;"	m	struct:mongo::Status::ErrorInfo
logger	include/mongo/logger/appender.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/component_message_log_domain.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/labeled_level.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_component.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_component_settings.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_domain.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_manager.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_severity-inl.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/log_severity.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/logger.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/logstream_builder.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/message_event.h	/^namespace logger {$/;"	n	namespace:mongo
logger	include/mongo/logger/message_log_domain.h	/^namespace logger {$/;"	n	namespace:mongo
lt	include/mongo/bson/bson_field.h	/^        BSONFieldValue<BSONObj> lt(const T& t) const {$/;"	f	class:mongo::BSONField
ltrim	include/mongo/util/mongoutils/str.h	/^        inline std::string ltrim(const std::string& s) {$/;"	f	namespace:mongoutils::str
m	include/mongo/client/dbclientcursor.h	/^            std::auto_ptr<Message> m;$/;"	m	class:mongo::DBClientCursor::Batch
main	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/2.8.12.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/2.8.12.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	main.cpp	/^int main(int argc, const char *argv[])$/;"	f
main	test_client.cc	/^int main()$/;"	f
majority	include/mongo/client/write_concern.h	/^        static const WriteConcern majority;$/;"	m	class:mongo::WriteConcern
make	include/mongo/bson/bson_field.h	/^        BSONFieldValue<T> make(const T& t) const {$/;"	f	class:mongo::BSONField
make	include/mongo/bson/ordering.h	/^        static Ordering make(const BSONObj& obj) {$/;"	f	class:mongo::Ordering
make	jsoncpp.cpp	/^Value& Path::make(Value& root) const {$/;"	f	class:Json::Path
makePath	jsoncpp.cpp	/^void Path::makePath(const std::string& path, const InArgs& in) {$/;"	f	class:Json::Path
manip	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<< (std::ios_base& ( MONGO_CLIENT_FUNC *manip)(std::ios_base&)) {$/;"	f	class:mongo::logger::LogstreamBuilder
manip	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<< (std::ostream& ( MONGO_CLIENT_FUNC *manip )(std::ostream&)) {$/;"	f	class:mongo::logger::LogstreamBuilder
map_	json.h	/^    ObjectValues* map_;$/;"	m	union:Json::Value::ValueHolder
massert	include/mongo/client/redef_macros.h	56;"	d
massert	include/mongo/client/redef_macros.h	57;"	d
massert	include/mongo/client/undef_macros.h	39;"	d
massert	include/mongo/util/assert_util.h	268;"	d
massertNoTraceStatusOK	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void massertNoTraceStatusOK(const Status& status) {$/;"	f	namespace:mongo
massertStatusOK	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void massertStatusOK(const Status& status) {$/;"	f	namespace:mongo
match	jsoncpp.cpp	/^bool OurReader::match(Location pattern, int patternLength) {$/;"	f	class:Json::OurReader
match	jsoncpp.cpp	/^bool Reader::match(Location pattern, int patternLength) {$/;"	f	class:Json::Reader
max	include/mongo/bson/oid.h	/^        static OID MONGO_CLIENT_FUNC max() {$/;"	f	class:mongo::OID
max	include/mongo/client/redef_macros.h	29;"	d
maxInt	json.h	/^  static const Int maxInt;$/;"	m	class:Json::Value
maxInt	jsoncpp.cpp	/^const Int Value::maxInt = Int(UInt(-1) \/ 2);$/;"	m	class:Json::Value	file:
maxInt64	json.h	/^  static const Int64 maxInt64;$/;"	m	class:Json::Value
maxInt64	jsoncpp.cpp	/^const Int64 Value::maxInt64 = Int64(UInt64(-1) \/ 2);$/;"	m	class:Json::Value	file:
maxLargestInt	json.h	/^  static const LargestInt maxLargestInt;$/;"	m	class:Json::Value
maxLargestInt	jsoncpp.cpp	/^const LargestInt Value::maxLargestInt = LargestInt(LargestUInt(-1) \/ 2);$/;"	m	class:Json::Value	file:
maxLargestUInt	json.h	/^  static const LargestUInt maxLargestUInt;$/;"	m	class:Json::Value
maxLargestUInt	jsoncpp.cpp	/^const LargestUInt Value::maxLargestUInt = LargestUInt(-1);$/;"	m	class:Json::Value	file:
maxToStringRecursionDepth	include/mongo/bson/bsonobj.h	/^        enum { maxToStringRecursionDepth = 100 };$/;"	e	enum:mongo::BSONObj::__anon3
maxUInt	json.h	/^  static const UInt maxUInt;$/;"	m	class:Json::Value
maxUInt	jsoncpp.cpp	/^const UInt Value::maxUInt = UInt(-1);$/;"	m	class:Json::Value	file:
maxUInt64	json.h	/^  static const UInt64 maxUInt64;$/;"	m	class:Json::Value
maxUInt64	jsoncpp.cpp	/^const UInt64 Value::maxUInt64 = UInt64(-1);$/;"	m	class:Json::Value	file:
maxUInt64AsDouble	jsoncpp.cpp	/^static const double maxUInt64AsDouble = 18446744073709551615.0;$/;"	m	namespace:Json	file:
mayEncapsulate	include/mongo/bson/bsonelement.h	/^        bool mayEncapsulate() const {$/;"	f	class:mongo::BSONElement
memberName	jsoncpp.cpp	/^char const* ValueIteratorBase::memberName() const {$/;"	f	class:Json::ValueIteratorBase
memberName	jsoncpp.cpp	/^char const* ValueIteratorBase::memberName(char const** end) const {$/;"	f	class:Json::ValueIteratorBase
message	Grading.h	/^    std::string message;$/;"	m	struct:result
message	json.h	/^    std::string message;$/;"	m	struct:Json::Reader::StructuredError
message	jsoncpp.cpp	/^    std::string message;$/;"	m	struct:Json::OurReader::StructuredError	file:
messageLength	include/mongo/util/net/message.h	/^            int32_t messageLength; \/\/ total message size, including this$/;"	m	struct:mongo::MSGHEADER::Layout
message_	json.h	/^    std::string message_;$/;"	m	class:Json::Reader::ErrorInfo
message_	jsoncpp.cpp	/^    std::string message_;$/;"	m	class:Json::OurReader::ErrorInfo	file:
millis	include/mongo/util/time_support.h	/^        unsigned long long millis;$/;"	m	struct:mongo::Date_t
min	include/mongo/client/redef_macros.h	27;"	d
minInt	json.h	/^  static const Int minInt;$/;"	m	class:Json::Value
minInt	jsoncpp.cpp	/^const Int Value::minInt = Int(~(UInt(-1) \/ 2));$/;"	m	class:Json::Value	file:
minInt64	json.h	/^  static const Int64 minInt64;$/;"	m	class:Json::Value
minInt64	jsoncpp.cpp	/^const Int64 Value::minInt64 = Int64(~(UInt64(-1) \/ 2));$/;"	m	class:Json::Value	file:
minLargestInt	json.h	/^  static const LargestInt minLargestInt;$/;"	m	class:Json::Value
minLargestInt	jsoncpp.cpp	/^const LargestInt Value::minLargestInt = LargestInt(~(LargestUInt(-1) \/ 2));$/;"	m	class:Json::Value	file:
mock	include/mongo/client/dbclientinterface.h	/^        static ConnectionString mock( const HostAndPort& server ) {$/;"	f	class:mongo::ConnectionString
mongo	include/mongo/base/data_cursor.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/data_view.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/encoded_value_storage.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/error_codes.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/parse_number.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/status-inl.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/status.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/status_with.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/string_data-inl.h	/^namespace mongo {$/;"	n
mongo	include/mongo/base/string_data.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bson-inl.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bson_db.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bson_field.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsonelement.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsonmisc.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsonobj.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsonobjbuilder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsonobjiterator.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/bsontypes.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/oid.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/ordering.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/timestamp.h	/^namespace mongo {$/;"	n
mongo	include/mongo/bson/util/builder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/bulk_operation_builder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/bulk_update_builder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/bulk_upsert_builder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/dbclient_rs.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/dbclientcursor.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/dbclientinterface.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/exceptions.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/gridfs.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/index_spec.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/init.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/options.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/sasl_client_authenticate.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/write_concern.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/write_options.h	/^namespace mongo {$/;"	n
mongo	include/mongo/client/write_result.h	/^namespace mongo {$/;"	n
mongo	include/mongo/db/json.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/boundingbox.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/constants.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/coordinates.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/coordinates2d.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/coordinates2dgeographic.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/geometry.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/geometrycollection.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/geoobj.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/linestring.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/multilinestring.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/multipoint.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/multipolygon.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/namespaces.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/parser-impl.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/parser.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/point.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/polygon.h	/^namespace mongo {$/;"	n
mongo	include/mongo/geo/queryutils.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/appender.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/component_message_log_domain.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/labeled_level.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_component.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_component_settings.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_domain.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_manager.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_severity-inl.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/log_severity.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/logger.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/logstream_builder.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/message_event.h	/^namespace mongo {$/;"	n
mongo	include/mongo/logger/message_log_domain.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_intrinsics_win32.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_word_cxx11.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/atomic_word_intrinsics.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/cstdint.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/endian.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/float_utils.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/strnlen.h	/^namespace mongo {$/;"	n
mongo	include/mongo/platform/unordered_map.h	/^namespace mongo {$/;"	n
mongo	include/mongo/stdx/functional.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/assert_util.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/mongoutils/str.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/net/hostandport.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/net/message.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/net/message_port.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/net/operation.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/net/sock.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/shared_buffer.h	/^namespace mongo {$/;"	n
mongo	include/mongo/util/time_support.h	/^namespace mongo {$/;"	n
mongo	include/mongo/version.h	/^namespace mongo {$/;"	n
mongoutils	include/mongo/util/mongoutils/str.h	/^namespace mongoutils {$/;"	n
more	include/mongo/bson/bsonobjiterator.h	/^        bool more() { return _pos < _theend; }$/;"	f	class:mongo::BSONObjIterator
more	include/mongo/bson/bsonobjiterator.h	/^        bool more() {$/;"	f	class:mongo::BSONIteratorSorted
moreInCurrentBatch	include/mongo/client/dbclientcursor.h	/^        bool moreInCurrentBatch() { return _c.moreInCurrentBatch(); }$/;"	f	class:mongo::DBClientCursorBatchIterator
moreInCurrentBatch	include/mongo/client/dbclientcursor.h	/^        bool moreInCurrentBatch() { return objsLeftInBatch() > 0; }$/;"	f	class:mongo::DBClientCursor
moreSevere	include/mongo/logger/log_severity-inl.h	/^    LogSeverity LogSeverity::moreSevere() const { return LogSeverity(_severity - 1); }$/;"	f	class:mongo::logger::LogSeverity
moreWithEOO	include/mongo/bson/bsonobjiterator.h	/^        bool moreWithEOO() { return _pos <= _theend; }$/;"	f	class:mongo::BSONObjIterator
moveFrom	include/mongo/util/shared_buffer.h	/^        SharedBuffer moveFrom() {$/;"	f	class:mongo::SharedBuffer
msg	include/mongo/util/assert_util.h	/^        std::string msg;$/;"	m	struct:mongo::ExceptionInfo
msg_	jsoncpp.cpp	/^  std::string const msg_;$/;"	m	class:Json::Exception::std	file:
mutex	Judge.h	/^    SemaphoreObejct mutex;$/;"	m	class:Judge
n	include/mongo/client/dbclientcursor.h	/^        int n() const { return _n; }$/;"	f	class:mongo::DBClientCursorBatchIterator
nReturned	include/mongo/client/dbclientcursor.h	/^            int nReturned;$/;"	m	class:mongo::DBClientCursor::Batch
nReturned	include/mongo/client/dbclientcursor.h	/^        long long nReturned;$/;"	m	class:mongo::DBClientCursor
nToReturn	include/mongo/client/dbclientcursor.h	/^        int nToReturn;$/;"	m	class:mongo::DBClientCursor
nToSkip	include/mongo/client/dbclientcursor.h	/^        int nToSkip;$/;"	m	class:mongo::DBClientCursor
name	include/mongo/bson/bson_field.h	/^        const std::string& name() const { return _name; }$/;"	f	class:mongo::BSONFieldValue
name	include/mongo/bson/bson_field.h	/^        const std::string& name() const {$/;"	f	class:mongo::BSONField
name	jsoncpp.cpp	/^std::string ValueIteratorBase::name() const {$/;"	f	class:Json::ValueIteratorBase
nativeToBig	include/mongo/platform/endian.h	/^        inline static T nativeToBig(T t) {$/;"	f	struct:mongo::endian::ByteOrderConverter
nativeToBig	include/mongo/platform/endian.h	/^    inline T nativeToBig(T t) {$/;"	f	namespace:mongo::endian
nativeToLittle	include/mongo/platform/endian.h	/^        inline static T nativeToLittle(T t) {$/;"	f	struct:mongo::endian::ByteOrderConverter
nativeToLittle	include/mongo/platform/endian.h	/^    inline T nativeToLittle(T t) {$/;"	f	namespace:mongo::endian
ne	include/mongo/bson/bson_field.h	/^        BSONFieldValue<BSONObj> ne(const T& t) const {$/;"	f	class:mongo::BSONField
newCharReader	jsoncpp.cpp	/^CharReader* CharReaderBuilder::newCharReader() const$/;"	f	class:Json::CharReaderBuilder
newStreamWriter	jsoncpp.cpp	/^StreamWriter* StreamWriterBuilder::newStreamWriter() const$/;"	f	class:Json::StreamWriterBuilder
newUUID	include/mongo/bson/bsontypes.h	/^        newUUID=4, \/* language-independent UUID format across all drivers *\/$/;"	e	enum:mongo::BinDataType
next	include/mongo/bson/bsonobjiterator.h	/^        BSONElement next( bool checkEnd ) {$/;"	f	class:mongo::BSONObjIterator
next	include/mongo/bson/bsonobjiterator.h	/^        BSONElement next() {$/;"	f	class:mongo::BSONIteratorSorted
next	include/mongo/bson/bsonobjiterator.h	/^        BSONElement next() {$/;"	f	class:mongo::BSONObjIterator
nextJudge	JudgeManager.cpp	/^Judge& JudgeManager::nextJudge() {$/;"	f	class:JudgeManager
nextSafe	include/mongo/client/dbclientcursor.h	/^        BSONObj nextSafe() {$/;"	f	class:mongo::DBClientCursorBatchIterator
noDuplication	json.h	/^      noDuplication = 0,$/;"	e	enum:Json::Value::CZString::DuplicationPolicy
no_initialize_tag	include/mongo/bson/oid.h	/^        struct no_initialize_tag {};$/;"	s	class:mongo::OID
nodes_	json.h	/^  Nodes nodes_;$/;"	m	class:Json::Reader
nodes_	jsoncpp.cpp	/^  Nodes nodes_;$/;"	m	class:Json::OurReader	file:
noexcept	include/mongo/base/status.h	/^        inline Status& operator=(Status&& other) noexcept;$/;"	m	class:mongo::Status
noexcept	include/mongo/base/status.h	/^        inline Status(Status&& other) noexcept;$/;"	m	class:mongo::Status
normalizeEOL	jsoncpp.cpp	/^static std::string normalizeEOL(Reader::Location begin, Reader::Location end) {$/;"	f	namespace:Json
ns	include/mongo/bson/bsonmisc.h	/^        StringData ns;$/;"	m	struct:mongo::BSONDBRef
ns	include/mongo/client/dbclientcursor.h	/^        std::string ns;$/;"	m	class:mongo::DBClientCursor
ns	include/mongo/client/dbclientinterface.h	/^        std::string ns() const { return _ns; }$/;"	f	class:mongo::QuerySpec
ntoreturn	include/mongo/client/dbclientinterface.h	/^        int ntoreturn() const { return _ntoreturn; }$/;"	f	class:mongo::QuerySpec
ntoskip	include/mongo/client/dbclientinterface.h	/^        int ntoskip() const { return _ntoskip; }$/;"	f	class:mongo::QuerySpec
null	json.h	/^  static const Value& null;  \/\/\/< We regret this reference to a global instance; prefer the simpler Value().$/;"	m	class:Json::Value
null	jsoncpp.cpp	/^const Value& Value::null = reinterpret_cast<const Value&>(kNullRef);$/;"	m	class:Json::Value	file:
nullRef	json.h	/^  static const Value& nullRef;  \/\/\/< just a kludge for binary-compatibility; same as null$/;"	m	class:Json::Value
nullRef	jsoncpp.cpp	/^const Value& Value::nullRef = null;$/;"	m	class:Json::Value	file:
nullSymbol_	jsoncpp.cpp	/^  std::string nullSymbol_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
nullValue	json.h	/^  nullValue = 0, \/\/\/< 'null' value$/;"	e	enum:Json::ValueType
num	include/mongo/bson/bsonobjbuilder.h	/^        std::string num() { return _b.numStr(_i++); }$/;"	f	class:mongo::BSONArrayBuilder
numStr	include/mongo/bson/bsonobjbuilder.h	/^        static std::string MONGO_CLIENT_FUNC numStr( int i ) {$/;"	f	class:mongo::BSONObjBuilder
numStrs	include/mongo/bson/bsonobjbuilder.h	/^        static const std::string numStrs[100]; \/\/ cache of 0 to 99 inclusive$/;"	m	class:mongo::BSONObjBuilder
numStrsReady	include/mongo/bson/bsonobjbuilder.h	/^        static bool numStrsReady; \/\/ for static init safety.$/;"	m	class:mongo::BSONObjBuilder
number	include/mongo/bson/bsonelement.h	/^        double number() const { return numberDouble(); }$/;"	f	class:mongo::BSONElement
numberDouble	include/mongo/bson/bsonelement.h	/^    inline double BSONElement::numberDouble() const {$/;"	f	class:mongo::BSONElement
numberInt	include/mongo/bson/bsonelement.h	/^    inline int BSONElement::numberInt() const {$/;"	f	class:mongo::BSONElement
numberLong	include/mongo/bson/bsonelement.h	/^    inline long long BSONElement::numberLong() const {$/;"	f	class:mongo::BSONElement
numberOfCommentPlacement	json.h	/^  numberOfCommentPlacement$/;"	e	enum:Json::CommentPlacement
obj	include/mongo/bson/bsonobjbuilder.h	/^        BSONObj obj() { return _b.obj(); }$/;"	f	class:mongo::BSONArrayBuilder
obj	include/mongo/bson/bsonobjbuilder.h	/^        BSONObj obj() {$/;"	f	class:mongo::BSONObjBuilder
obj	include/mongo/client/dbclientinterface.h	/^        BSONObj obj;$/;"	m	class:mongo::Query
obj	include/mongo/client/exceptions.h	/^        const BSONObj& obj() const { return _lastError; }$/;"	f	class:mongo::OperationException
objdata	include/mongo/bson/bsonobj.h	/^        const char *objdata() const {$/;"	f	class:mongo::BSONObj
objectValue	json.h	/^  objectValue    \/\/\/< object value (collection of name\/value pairs).$/;"	e	enum:Json::ValueType
objsLeftInBatch	include/mongo/client/dbclientcursor.h	/^        int objsLeftInBatch() const { _assertIfNull(); return _putBack.size() + batch.nReturned - batch.pos; }$/;"	f	class:mongo::DBClientCursor
objsize	include/mongo/bson/bsonelement.h	/^        size_t objsize() const {$/;"	f	class:mongo::BSONElement
objsize	include/mongo/bson/bsonobj.h	/^        int objsize() const {$/;"	f	class:mongo::BSONObj
offset	include/mongo/db/json.h	/^            inline int offset() { return (_input - _buf); }$/;"	f	class:mongo::JParse
offset_limit	json.h	/^    size_t offset_limit;$/;"	m	struct:Json::Reader::StructuredError
offset_limit	jsoncpp.cpp	/^    size_t offset_limit;$/;"	m	struct:Json::OurReader::StructuredError	file:
offset_start	json.h	/^    size_t offset_start;$/;"	m	struct:Json::Reader::StructuredError
offset_start	jsoncpp.cpp	/^    size_t offset_start;$/;"	m	struct:Json::OurReader::StructuredError	file:
oid	include/mongo/bson/bsonmisc.h	/^        OID oid;$/;"	m	struct:mongo::BSONDBRef
ok	include/mongo/bson/bsonelement.h	/^        bool ok() const { return !eoo(); }$/;"	f	class:mongo::BSONElement
okForStorage	include/mongo/bson/bsonobj.h	/^        inline bool okForStorage() const {$/;"	f	class:mongo::BSONObj
okForStorageAsRoot	include/mongo/bson/bsonobj.h	/^        inline bool okForStorageAsRoot() const {$/;"	f	class:mongo::BSONObj
omitEndingLineFeed	jsoncpp.cpp	/^void FastWriter::omitEndingLineFeed() { omitEndingLineFeed_ = true; }$/;"	f	class:Json::FastWriter
omitEndingLineFeed_	json.h	/^  bool omitEndingLineFeed_;$/;"	m	class:Json::FastWriter
onError	JudgeServer.h	/^    virtual void onError(int fd) {InformMessage("error on %d", fd);}$/;"	f	class:JudgeServer
onEvent	PollManager.cpp	/^void PollManager::onEvent(const struct epoll_event &event)$/;"	f	class:PollManager
onRead	JudgeServer.cpp	/^void JudgeServer::onRead(int fd)$/;"	f	class:JudgeServer
onWrite	JudgeServer.h	/^    virtual void onWrite(int fd) {InformMessage("write on %d", fd);}$/;"	f	class:JudgeServer
opALL	include/mongo/bson/bsonobj.h	/^            opALL = 0x0B,$/;"	e	enum:mongo::BSONObj::MatchType
opCode	include/mongo/util/net/message.h	/^            int32_t opCode;$/;"	m	struct:mongo::MSGHEADER::Layout
opELEM_MATCH	include/mongo/bson/bsonobj.h	/^            opELEM_MATCH = 0x12,$/;"	e	enum:mongo::BSONObj::MatchType
opEXISTS	include/mongo/bson/bsonobj.h	/^            opEXISTS = 0x0D,$/;"	e	enum:mongo::BSONObj::MatchType
opGEO_INTERSECTS	include/mongo/bson/bsonobj.h	/^            opGEO_INTERSECTS = 0x16,$/;"	e	enum:mongo::BSONObj::MatchType
opIN	include/mongo/bson/bsonobj.h	/^            opIN = 0x8, \/\/ { x : { $in : [1,2,3] } }$/;"	e	enum:mongo::BSONObj::MatchType
opIsWrite	include/mongo/util/net/message.h	/^    inline bool opIsWrite( int op ) {$/;"	f	namespace:mongo
opMAX_DISTANCE	include/mongo/bson/bsonobj.h	/^            opMAX_DISTANCE = 0x15,$/;"	e	enum:mongo::BSONObj::MatchType
opMOD	include/mongo/bson/bsonobj.h	/^            opMOD = 0x0E,$/;"	e	enum:mongo::BSONObj::MatchType
opNEAR	include/mongo/bson/bsonobj.h	/^            opNEAR = 0x13,$/;"	e	enum:mongo::BSONObj::MatchType
opOPTIONS	include/mongo/bson/bsonobj.h	/^            opOPTIONS = 0x11,$/;"	e	enum:mongo::BSONObj::MatchType
opREGEX	include/mongo/bson/bsonobj.h	/^            opREGEX = 0x10,$/;"	e	enum:mongo::BSONObj::MatchType
opReply	include/mongo/util/net/operation.h	/^        opReply = 1,     \/* reply. responseTo is set. *\/$/;"	e	enum:mongo::Operations
opSIZE	include/mongo/bson/bsonobj.h	/^            opSIZE = 0x0A,$/;"	e	enum:mongo::BSONObj::MatchType
opTYPE	include/mongo/bson/bsonobj.h	/^            opTYPE = 0x0F,$/;"	e	enum:mongo::BSONObj::MatchType
opToString	include/mongo/util/net/message.h	/^    inline const char * opToString( int op ) {$/;"	f	namespace:mongo
opWITHIN	include/mongo/bson/bsonobj.h	/^            opWITHIN = 0x14,$/;"	e	enum:mongo::BSONObj::MatchType
operation	include/mongo/util/net/message.h	/^        int operation() const { return header().getOperation(); }$/;"	f	class:mongo::Message
operator !	jsoncpp.cpp	/^bool Value::operator!() const { return isNull(); }$/;"	f	class:Json::Value
operator !=	include/mongo/base/status-inl.h	/^    inline bool MONGO_CLIENT_FUNC operator!=(const ErrorCodes::Error lhs, const Status& rhs) {$/;"	f	namespace:mongo
operator !=	include/mongo/base/string_data.h	/^    inline bool operator!=(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator !=	include/mongo/bson/bsonelement.h	/^        bool operator!=(const BSONElement& r) const { return !operator==(r); }$/;"	f	class:mongo::BSONElement
operator !=	include/mongo/bson/bsonobj.h	/^        bool operator!=(const BSONObj& other) const { return !operator==( other); }$/;"	f	class:mongo::BSONObj
operator !=	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline bool MONGO_CLIENT_FUNC operator!=(const OID& lhs, const OID& rhs) { return lhs.compare(rhs) != 0; }$/;"	f	namespace:mongo
operator !=	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator!=(LogSeverity other) const { return _severity != other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator !=	include/mongo/util/net/hostandport.h	/^        bool operator!=(const HostAndPort& r) const { return !(*this == r); }$/;"	f	struct:mongo::HostAndPort
operator !=	json.h	/^  bool operator!=(const SelfType& other) const { return !isEqual(other); }$/;"	f	class:Json::ValueIteratorBase
operator !=	jsoncpp.cpp	/^bool Value::operator!=(const Value& other) const { return !(*this == other); }$/;"	f	class:Json::Value
operator ()	include/mongo/bson/bson_field.h	/^        BSONFieldValue<T> operator()(const T& t) const {$/;"	f	class:mongo::BSONField
operator ()	include/mongo/bson/bson_field.h	/^        std::string operator()() const {$/;"	f	class:mongo::BSONField
operator ()	include/mongo/bson/bsonmisc.h	/^        bool operator()( const BSONElement &l, const BSONElement &r ) const {$/;"	f	struct:mongo::BSONElementCmpWithoutField
operator ()	include/mongo/bson/bsonmisc.h	/^        bool operator()( const BSONObj &l, const BSONObj &r ) const {$/;"	f	class:mongo::BSONObjCmp
operator *	include/mongo/bson/bsonobjiterator.h	/^        BSONElement operator*() {$/;"	f	class:mongo::BSONObjIterator
operator *	json.h	/^  reference operator*() const { return deref(); }$/;"	f	class:Json::ValueConstIterator
operator *	json.h	/^  reference operator*() const { return deref(); }$/;"	f	class:Json::ValueIterator
operator +	include/mongo/base/data_cursor.h	/^        ConstDataCursor operator+(std::size_t s) const {$/;"	f	class:mongo::ConstDataCursor
operator +	include/mongo/base/data_cursor.h	/^        DataCursor operator+(std::size_t s) const {$/;"	f	class:mongo::DataCursor
operator +	include/mongo/logger/labeled_level.h	/^        LabeledLevel operator+( int i ) const {$/;"	f	class:mongo::logger::LabeledLevel
operator ++	include/mongo/base/data_cursor.h	/^        ConstDataCursor operator++(int) {$/;"	f	class:mongo::ConstDataCursor
operator ++	include/mongo/base/data_cursor.h	/^        ConstDataCursor& operator++() {$/;"	f	class:mongo::ConstDataCursor
operator ++	include/mongo/base/data_cursor.h	/^        DataCursor operator++(int) {$/;"	f	class:mongo::DataCursor
operator ++	include/mongo/base/data_cursor.h	/^        DataCursor& operator++() {$/;"	f	class:mongo::DataCursor
operator ++	include/mongo/bson/bsonobjiterator.h	/^        void operator++() { next(); }$/;"	f	class:mongo::BSONObjIterator
operator ++	include/mongo/bson/bsonobjiterator.h	/^        void operator++(int) { next(); }$/;"	f	class:mongo::BSONObjIterator
operator ++	json.h	/^  SelfType operator++(int) {$/;"	f	class:Json::ValueConstIterator
operator ++	json.h	/^  SelfType operator++(int) {$/;"	f	class:Json::ValueIterator
operator ++	json.h	/^  SelfType& operator++() {$/;"	f	class:Json::ValueConstIterator
operator ++	json.h	/^  SelfType& operator++() {$/;"	f	class:Json::ValueIterator
operator +=	include/mongo/base/data_cursor.h	/^        ConstDataCursor& operator+=(std::size_t s) {$/;"	f	class:mongo::ConstDataCursor
operator +=	include/mongo/base/data_cursor.h	/^        DataCursor& operator+=(std::size_t s) {$/;"	f	class:mongo::DataCursor
operator -	include/mongo/base/data_cursor.h	/^        ConstDataCursor operator-(std::size_t s) const {$/;"	f	class:mongo::ConstDataCursor
operator -	include/mongo/base/data_cursor.h	/^        DataCursor operator-(std::size_t s) const {$/;"	f	class:mongo::DataCursor
operator -	include/mongo/logger/labeled_level.h	/^        LabeledLevel operator-( int i ) const {$/;"	f	class:mongo::logger::LabeledLevel
operator -	json.h	/^  difference_type operator-(const SelfType& other) const {$/;"	f	class:Json::ValueIteratorBase
operator --	include/mongo/base/data_cursor.h	/^        ConstDataCursor operator--(int) {$/;"	f	class:mongo::ConstDataCursor
operator --	include/mongo/base/data_cursor.h	/^        ConstDataCursor& operator--() {$/;"	f	class:mongo::ConstDataCursor
operator --	include/mongo/base/data_cursor.h	/^        DataCursor operator--(int) {$/;"	f	class:mongo::DataCursor
operator --	include/mongo/base/data_cursor.h	/^        DataCursor& operator--() {$/;"	f	class:mongo::DataCursor
operator --	json.h	/^  SelfType operator--(int) {$/;"	f	class:Json::ValueConstIterator
operator --	json.h	/^  SelfType operator--(int) {$/;"	f	class:Json::ValueIterator
operator --	json.h	/^  SelfType& operator--() {$/;"	f	class:Json::ValueConstIterator
operator --	json.h	/^  SelfType& operator--() {$/;"	f	class:Json::ValueIterator
operator -=	include/mongo/base/data_cursor.h	/^        ConstDataCursor& operator-=(std::size_t s) {$/;"	f	class:mongo::ConstDataCursor
operator -=	include/mongo/base/data_cursor.h	/^        DataCursor& operator-=(std::size_t s) {$/;"	f	class:mongo::DataCursor
operator ->	json.h	/^  pointer operator->() const { return &deref(); }$/;"	f	class:Json::ValueConstIterator
operator ->	json.h	/^  pointer operator->() const { return &deref(); }$/;"	f	class:Json::ValueIterator
operator <	include/mongo/base/string_data.h	/^    inline bool operator<(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator <	include/mongo/bson/bsonelement.h	/^        bool operator<( const BSONElement& other ) const {$/;"	f	class:mongo::BSONElement
operator <	include/mongo/bson/bsonobj.h	/^        bool operator<( const BSONObj& other ) const { return woCompare( other ) < 0; }$/;"	f	class:mongo::BSONObj
operator <	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline bool MONGO_CLIENT_FUNC operator<(const OID& lhs, const OID& rhs) { return lhs.compare(rhs) < 0; }$/;"	f	namespace:mongo
operator <	include/mongo/client/dbclientinterface.h	/^        bool operator<(const ConnectionString& other) const {$/;"	f	class:mongo::ConnectionString
operator <	include/mongo/logger/labeled_level.h	/^    inline bool operator<( const LabeledLevel& ll, const int i ) { return ll.getLevel() < i; }$/;"	f	namespace:mongo::logger
operator <	include/mongo/logger/labeled_level.h	/^    inline bool operator<( const int i, const LabeledLevel& ll ) { return i < ll.getLevel(); }$/;"	f	namespace:mongo::logger
operator <	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator<(LogSeverity other) const { return _severity > other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator <	jsoncpp.cpp	/^bool Value::CZString::operator<(const CZString& other) const {$/;"	f	class:Json::Value::CZString
operator <	jsoncpp.cpp	/^bool Value::operator<(const Value& other) const {$/;"	f	class:Json::Value
operator <<	include/mongo/bson/bson-inl.h	/^    BSONObjBuilder& Labeler::operator<<( T value ) {$/;"	f	class:mongo::Labeler
operator <<	include/mongo/bson/bson-inl.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<( T value ) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bson_db.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<(const DateNowLabeler& id) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bson_db.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<(const MaxKeyLabeler& id) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bson_db.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<(const MinKeyLabeler& id) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bson_db.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<(const NullLabeler& id) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bson_db.h	/^    inline BSONObjBuilder& BSONObjBuilderValueStream::operator<<(const UndefinedLabeler& id) {$/;"	f	class:mongo::BSONObjBuilderValueStream
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& operator<<(const BSONElement& e) {$/;"	f	class:mongo::BSONArrayBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONArrayBuilder& operator<<(const T& x) {$/;"	f	class:mongo::BSONArrayBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& operator<<( GENOIDLabeler ) { return genOID(); }$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& operator<<( const BSONElement& e ){$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilder& operator<<( const BSONFieldValue<T>& v ) {$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilderValueStream &operator<<( const StringData& name ) {$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        BSONObjBuilderValueStream& operator<<( const BSONField<T>& f ) {$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/bsonobjbuilder.h	/^        Labeler operator<<( const Labeler::Label &l ) {$/;"	f	class:mongo::BSONObjBuilder
operator <<	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline StringBuilder& MONGO_CLIENT_FUNC operator<<(StringBuilder& s, const OID& o) {$/;"	f	namespace:mongo
operator <<	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline std::ostream& MONGO_CLIENT_FUNC operator<<(std::ostream &s, const OID &o) {$/;"	f	namespace:mongo
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( char c ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( double x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( int x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( long long x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( long x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( short x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( unsigned long long x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( unsigned long x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<( unsigned x ) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<(const StringData& str) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<(const char* str) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/bson/util/builder.h	/^        StringBuilderImpl& operator<<(const void* x) {$/;"	f	class:mongo::StringBuilderImpl
operator <<	include/mongo/client/dbclientinterface.h	/^    MONGO_CLIENT_API inline std::ostream& MONGO_CLIENT_FUNC operator<<( std::ostream &s, const Query &q ) {$/;"	f	namespace:mongo
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(bool x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(char *x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(char x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(const StringData& x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(const T& x) {$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(const char *x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(const std::string& x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(const void *x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(double x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(int x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(long long x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(long x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(unsigned long long x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(unsigned long x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(unsigned short x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(unsigned x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& operator<<(void *x) { stream() << x; return *this; }$/;"	f	class:mongo::logger::LogstreamBuilder
operator <<	include/mongo/util/mongoutils/str.h	/^            stream& operator<<(const T& v) {$/;"	f	class:mongoutils::str::stream
operator <<	jsoncpp.cpp	/^std::ostream& operator<<(std::ostream& sout, Value const& root) {$/;"	f	namespace:Json
operator <=	include/mongo/base/string_data.h	/^    inline bool operator<=(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator <=	include/mongo/bson/bsonobj.h	/^        bool operator<=( const BSONObj& other ) const { return woCompare( other ) <= 0; }$/;"	f	class:mongo::BSONObj
operator <=	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline bool MONGO_CLIENT_FUNC operator<=(const OID& lhs, const OID& rhs) { return lhs.compare(rhs) <= 0; }$/;"	f	namespace:mongo
operator <=	include/mongo/logger/labeled_level.h	/^    inline bool operator<=( const LabeledLevel& ll, const int i ) { return ll.getLevel() <= i; }$/;"	f	namespace:mongo::logger
operator <=	include/mongo/logger/labeled_level.h	/^    inline bool operator<=( const int i, const LabeledLevel& ll ) { return i <= ll.getLevel(); }$/;"	f	namespace:mongo::logger
operator <=	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator<=(LogSeverity other) const { return _severity >= other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator <=	jsoncpp.cpp	/^bool Value::operator<=(const Value& other) const { return !(other < *this); }$/;"	f	class:Json::Value
operator =	BasicSocket.h	/^            virtual BasicSocket operator= (const FileDescriptor &fd) {$/;"	f	class:Network::BasicSocket
operator =	InetSocket.h	/^        virtual BasicSocket operator= (const FileDescriptor &fd) {$/;"	f	class:Network::InetSocket
operator =	include/mongo/base/status-inl.h	/^    inline Status& Status::operator=(const Status& other) {$/;"	f	class:mongo::Status
operator =	include/mongo/bson/bsonobj.h	/^        BSONObj& operator=(BSONObj otherCopy) {$/;"	f	class:mongo::BSONObj
operator =	include/mongo/bson/ordering.h	/^        void operator=(const Ordering& r) {$/;"	f	class:mongo::Ordering
operator =	include/mongo/geo/linestring.h	/^    LineString<TCoordinates>& LineString<TCoordinates>::operator=(LineString<TCoordinates> other) {$/;"	f	class:mongo::geo::LineString
operator =	include/mongo/geo/point.h	/^    Point<TCoordinates>& Point<TCoordinates>::operator=($/;"	f	class:mongo::geo::Point
operator =	include/mongo/geo/polygon.h	/^    Polygon<TCoordinates>& Polygon<TCoordinates>::operator=(Polygon<TCoordinates> other) {$/;"	f	class:mongo::geo::Polygon
operator =	include/mongo/util/net/message.h	/^        Message& operator=(Message& r) {$/;"	f	class:mongo::Message
operator =	jsoncpp.cpp	/^Value& Value::operator=(Value other) {$/;"	f	class:Json::Value
operator =	jsoncpp.cpp	/^Value::CZString& Value::CZString::operator=(CZString other) {$/;"	f	class:Json::Value::CZString
operator =	jsoncpp.cpp	/^ValueIterator& ValueIterator::operator=(const SelfType& other) {$/;"	f	class:Json::ValueIterator
operator =	jsoncpp.cpp	/^operator=(const ValueIteratorBase& other) {$/;"	f	class:Json::ValueConstIterator
operator ==	include/mongo/base/status-inl.h	/^    inline bool MONGO_CLIENT_FUNC operator==(const ErrorCodes::Error lhs, const Status& rhs) {$/;"	f	namespace:mongo
operator ==	include/mongo/base/string_data.h	/^    inline bool operator==(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator ==	include/mongo/bson/bsonelement.h	/^        bool operator==(const BSONElement& r) const {$/;"	f	class:mongo::BSONElement
operator ==	include/mongo/bson/bsonobj.h	/^        bool operator==( const BSONObj& other ) const { return equal( other ); }$/;"	f	class:mongo::BSONObj
operator ==	include/mongo/bson/oid.h	/^    MONGO_CLIENT_API inline bool MONGO_CLIENT_FUNC operator==(const OID& lhs, const OID& rhs) { return lhs.compare(rhs) == 0; }$/;"	f	namespace:mongo
operator ==	include/mongo/client/dbclient_rs.h	/^        bool operator==(const TagSet& other) const { return _tags == other._tags; }$/;"	f	class:mongo::TagSet
operator ==	include/mongo/logger/labeled_level.h	/^    inline bool operator==( const LabeledLevel& ll, const int i ) { return ll.getLevel() == i; }$/;"	f	namespace:mongo::logger
operator ==	include/mongo/logger/labeled_level.h	/^    inline bool operator==( const int i, const LabeledLevel& ll ) { return i == ll.getLevel(); }$/;"	f	namespace:mongo::logger
operator ==	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator==(LogSeverity other) const { return _severity == other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator ==	json.h	/^  bool operator==(const SelfType& other) const { return isEqual(other); }$/;"	f	class:Json::ValueIteratorBase
operator ==	jsoncpp.cpp	/^bool Value::CZString::operator==(const CZString& other) const {$/;"	f	class:Json::Value::CZString
operator ==	jsoncpp.cpp	/^bool Value::operator==(const Value& other) const {$/;"	f	class:Json::Value
operator >	include/mongo/base/string_data.h	/^    inline bool operator>(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator >	include/mongo/bson/bsonobj.h	/^        bool operator>( const BSONObj& other ) const { return woCompare( other ) > 0; }$/;"	f	class:mongo::BSONObj
operator >	include/mongo/logger/labeled_level.h	/^    inline bool operator>( const LabeledLevel& ll, const int i ) { return ll.getLevel() > i; }$/;"	f	namespace:mongo::logger
operator >	include/mongo/logger/labeled_level.h	/^    inline bool operator>( const int i, const LabeledLevel& ll ) { return i > ll.getLevel(); }$/;"	f	namespace:mongo::logger
operator >	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator>(LogSeverity other) const { return _severity < other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator >	jsoncpp.cpp	/^bool Value::operator>(const Value& other) const { return other < *this; }$/;"	f	class:Json::Value
operator >=	include/mongo/base/string_data.h	/^    inline bool operator>=(const StringData& lhs, const StringData& rhs) {$/;"	f	namespace:mongo
operator >=	include/mongo/bson/bsonobj.h	/^        bool operator>=( const BSONObj& other ) const { return woCompare( other ) >= 0; }$/;"	f	class:mongo::BSONObj
operator >=	include/mongo/logger/labeled_level.h	/^    inline bool operator>=( const LabeledLevel& ll, const int i ) { return ll.getLevel() >= i; }$/;"	f	namespace:mongo::logger
operator >=	include/mongo/logger/labeled_level.h	/^    inline bool operator>=( const int i, const LabeledLevel& ll ) { return i >= ll.getLevel(); }$/;"	f	namespace:mongo::logger
operator >=	include/mongo/logger/log_severity-inl.h	/^    bool LogSeverity::operator>=(LogSeverity other) const { return _severity <= other._severity; }$/;"	f	class:mongo::logger::LogSeverity
operator >=	jsoncpp.cpp	/^bool Value::operator>=(const Value& other) const { return !(*this < other); }$/;"	f	class:Json::Value
operator >>	jsoncpp.cpp	/^std::istream& operator>>(std::istream& sin, Value& root) {$/;"	f	namespace:Json
operator ConstDataCursor	include/mongo/base/data_cursor.h	/^        operator ConstDataCursor() const {$/;"	f	class:mongo::DataCursor
operator ConstView	include/mongo/base/encoded_value_storage.h	/^        operator ConstView() const {$/;"	f	class:mongo::EncodedValueStorage
operator LogSeverity	include/mongo/logger/labeled_level.h	/^        operator LogSeverity () const { return logger::LogSeverity::cast(_level); }$/;"	f	class:mongo::logger::LabeledLevel
operator Value	include/mongo/logger/log_component.h	/^        operator Value() const { return _value; }$/;"	f	class:mongo::logger::LogComponent
operator View	include/mongo/base/encoded_value_storage.h	/^        operator View() {$/;"	f	class:mongo::EncodedValueStorage
operator []	include/mongo/base/string_data.h	/^        char operator[] ( unsigned pos ) const { return _data[pos]; }$/;"	f	class:mongo::StringData
operator []	include/mongo/bson/bsonobj.h	/^        BSONElement operator[] (const StringData& field) const {$/;"	f	class:mongo::BSONObj
operator []	include/mongo/bson/bsonobj.h	/^        BSONElement operator[] (int field) const {$/;"	f	class:mongo::BSONObj
operator []	include/mongo/geo/point.h	/^        double operator[](size_t dimension) const { return _coords[dimension]; }$/;"	f	class:mongo::geo::Point
operator []	jsoncpp.cpp	/^Value const& Value::operator[](CppTL::ConstString const& key) const$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value const& Value::operator[](std::string const& key) const$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& CharReaderBuilder::operator[](std::string key)$/;"	f	class:Json::CharReaderBuilder
operator []	jsoncpp.cpp	/^Value& StreamWriterBuilder::operator[](std::string key)$/;"	f	class:Json::StreamWriterBuilder
operator []	jsoncpp.cpp	/^Value& Value::operator[](ArrayIndex index) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& Value::operator[](const CppTL::ConstString& key) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& Value::operator[](const StaticString& key) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& Value::operator[](const char* key) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& Value::operator[](const std::string& key) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^Value& Value::operator[](int index) {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^const Value& Value::operator[](ArrayIndex index) const {$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^const Value& Value::operator[](const char* key) const$/;"	f	class:Json::Value
operator []	jsoncpp.cpp	/^const Value& Value::operator[](int index) const {$/;"	f	class:Json::Value
operator const char*	json.h	/^  operator const char*() const { return c_str_; }$/;"	f	class:Json::StaticString
operator const unsigned long long&	include/mongo/util/time_support.h	/^        operator const unsigned long long&() const { return millis; }$/;"	f	struct:mongo::Date_t
operator std::string	include/mongo/bson/bsonelement.h	/^        operator std::string() const { return toString(); }$/;"	f	class:mongo::BSONElement
operator std::string	include/mongo/client/dbclientinterface.h	/^        operator std::string() const { return toString(); }$/;"	f	class:mongo::Query
operator std::string	include/mongo/util/assert_util.h	/^        operator std::string() const { return buf; }$/;"	f	class:mongo::ErrorMsg
operator std::string	include/mongo/util/mongoutils/str.h	/^            operator std::string () const { return ss.str(); }$/;"	f	class:mongoutils::str::stream
operator unsigned long long&	include/mongo/util/time_support.h	/^        operator unsigned long long&() { return millis; }$/;"	f	struct:mongo::Date_t
options	include/mongo/client/dbclientinterface.h	/^        int options() const { return _options; }$/;"	f	class:mongo::QuerySpec
opts	include/mongo/client/dbclientcursor.h	/^        int opts;$/;"	m	class:mongo::DBClientCursor
order	include/mongo/bson/bsonmisc.h	/^        BSONObj order() const { return _order; }$/;"	f	class:mongo::BSONObjCmp
originalHost	include/mongo/client/dbclientcursor.h	/^        std::string originalHost() const { return _originalHost; }$/;"	f	class:mongo::DBClientCursor
out	Judge.h	/^    SemaphoreObejct in, out;$/;"	m	class:Judge
out	include/mongo/client/dbclientinterface.h	/^            BSONObj out;$/;"	m	struct:mongo::DBClientWithCommands::MROutput
owned	include/mongo/bson/bsonobjbuilder.h	/^        bool owned() const { return &_b == &_buf; }$/;"	f	class:mongo::BSONObjBuilder
p	include/mongo/client/dbclientinterface.h	/^        boost::scoped_ptr<MessagingPort> p;$/;"	m	class:mongo::DBClientConnection
packet	InetSocket.h	/^        packet() : len(4), buf(""){}$/;"	f	struct:Network::packet
packet	InetSocket.h	/^    struct packet$/;"	s	namespace:Network
parse	include/mongo/geo/parser-impl.h	/^    GeoObj<TCoordinates>* Parser<TCoordinates>::parse(const BSONObj& bson) {$/;"	f	class:mongo::geo::Parser
parse	jsoncpp.cpp	/^  virtual bool parse($/;"	f	class:Json::OurCharReader
parse	jsoncpp.cpp	/^Reader::parse(const std::string& document, Value& root, bool collectComments) {$/;"	f	class:Json::Reader
parse	jsoncpp.cpp	/^bool OurReader::parse(const char* beginDoc,$/;"	f	class:Json::OurReader
parse	jsoncpp.cpp	/^bool Reader::parse(const char* beginDoc,$/;"	f	class:Json::Reader
parse	jsoncpp.cpp	/^bool Reader::parse(std::istream& sin, Value& root, bool collectComments) {$/;"	f	class:Json::Reader
parseAllPoints	include/mongo/geo/geometry.h	/^    std::vector<Point<TCoordinates> > Geometry<TCoordinates>::parseAllPoints(const BSONObj& bson) {$/;"	f	class:mongo::geo::Geometry
parseAllPolygons	include/mongo/geo/multipolygon.h	/^    std::vector<Polygon<TCoordinates> > MultiPolygon<TCoordinates>::parseAllPolygons($/;"	f	class:mongo::geo::MultiPolygon
parseBoundingBox	include/mongo/geo/geometry.h	/^    BoundingBox<TCoordinates>* Geometry<TCoordinates>::parseBoundingBox(const BSONObj& bson) {$/;"	f	class:mongo::geo::Geometry
parseCoords	include/mongo/geo/geometry.h	/^    std::vector<double> Geometry<TCoordinates>::parseCoords(const BSONElement& coordArr) {$/;"	f	class:mongo::geo::Geometry
parseCoords	include/mongo/geo/geometry.h	/^    std::vector<double> Geometry<TCoordinates>::parseCoords(const BSONObj& bson) {$/;"	f	class:mongo::geo::Geometry
parseFromStream	jsoncpp.cpp	/^bool parseFromStream($/;"	f	namespace:Json
parseGeometries	include/mongo/geo/geometrycollection.h	/^    std::vector<const GeoObj<TCoordinates>*> GeometryCollection<TCoordinates>::parseGeometries($/;"	f	class:mongo::geo::GeometryCollection
parseLineStrings	include/mongo/geo/multilinestring.h	/^    std::vector<LineString<TCoordinates> > MultiLineString<TCoordinates>::parseLineStrings($/;"	f	class:mongo::geo::MultiLineString
parseLinearRings	include/mongo/geo/polygon.h	/^    std::vector<LineString<TCoordinates> > Polygon<TCoordinates>::parseLinearRings($/;"	f	class:mongo::geo::Polygon
parseNumberFromString	include/mongo/base/parse_number.h	/^    static Status parseNumberFromString(const StringData& stringValue, NumberType* result) {$/;"	f	namespace:mongo
parsePoint	include/mongo/geo/geometry.h	/^    Point<TCoordinates> Geometry<TCoordinates>::parsePoint(const BSONElement& coordArr) {$/;"	f	class:mongo::geo::Geometry
parsePointArray	include/mongo/geo/geometry.h	/^    std::vector<Point<TCoordinates> > Geometry<TCoordinates>::parsePointArray($/;"	f	class:mongo::geo::Geometry
parsePolygon	include/mongo/geo/multipolygon.h	/^    Polygon<TCoordinates> MultiPolygon<TCoordinates>::parsePolygon(const BSONElement& polygon) {$/;"	f	class:mongo::geo::MultiPolygon
pattern	include/mongo/bson/bsonmisc.h	/^        StringData pattern;$/;"	m	struct:mongo::BSONRegEx
piggyBackData	include/mongo/util/net/message_port.h	/^        PiggyBackData * piggyBackData;$/;"	m	class:mongo::MessagingPort
pointer	json.h	/^  typedef Value* pointer;$/;"	t	class:Json::ValueIterator
pointer	json.h	/^  typedef const Value* pointer;$/;"	t	class:Json::ValueConstIterator
policy_	json.h	/^      unsigned policy_: 2;$/;"	m	struct:Json::Value::CZString::StringStorage
polling	PollManager.cpp	/^void PollManager::polling(int timeout)$/;"	f	class:PollManager
popQuestion	Judge.cpp	/^void Judge::popQuestion() {$/;"	f	class:Judge
port	include/mongo/client/dbclientinterface.h	/^        MessagingPort& port() { verify(p); return *p; }$/;"	f	class:mongo::DBClientConnection
pos	include/mongo/client/dbclientcursor.h	/^            int pos;$/;"	m	class:mongo::DBClientCursor::Batch
post	SemaphoreObejct.h	/^        void post() { sem_post(&_sema); }$/;"	f	class:Thread::SemaphoreObejct
pref	include/mongo/client/dbclient_rs.h	/^        const ReadPreference pref;$/;"	m	struct:mongo::ReadPreferenceSetting
psock	include/mongo/util/net/message_port.h	/^        boost::shared_ptr<Socket> psock;$/;"	m	class:mongo::MessagingPort
pushError	jsoncpp.cpp	/^bool OurReader::pushError(const Value& value, const std::string& message) {$/;"	f	class:Json::OurReader
pushError	jsoncpp.cpp	/^bool OurReader::pushError(const Value& value, const std::string& message, const Value& extra) {$/;"	f	class:Json::OurReader
pushError	jsoncpp.cpp	/^bool Reader::pushError(const Value& value, const std::string& message) {$/;"	f	class:Json::Reader
pushError	jsoncpp.cpp	/^bool Reader::pushError(const Value& value, const std::string& message, const Value& extra) {$/;"	f	class:Json::Reader
pushValue	jsoncpp.cpp	/^void BuiltStyledStreamWriter::pushValue(std::string const& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
pushValue	jsoncpp.cpp	/^void StyledStreamWriter::pushValue(const std::string& value) {$/;"	f	class:Json::StyledStreamWriter
pushValue	jsoncpp.cpp	/^void StyledWriter::pushValue(const std::string& value) {$/;"	f	class:Json::StyledWriter
putBack	include/mongo/client/dbclientcursor.h	/^        void putBack( const BSONObj &o ) { _putBack.push( o.getOwned() ); }$/;"	f	class:mongo::DBClientCursor
qno	question.h	/^    int qno;$/;"	m	struct:question
qnxnto	CMakeFiles/3.2.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	CMakeFiles/3.2.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
query	include/mongo/bson/bsonobjbuilder.h	/^    inline BSONFieldValue<BSONObj> BSONField<T>::query( const char * q , const T& t ) const {$/;"	f	class:mongo::BSONField
query	include/mongo/client/dbclientcursor.h	/^        BSONObj query;$/;"	m	class:mongo::DBClientCursor
query	include/mongo/client/dbclientinterface.h	/^        BSONObj query() const { return _query; }$/;"	f	class:mongo::QuerySpec
question	question.h	/^struct question$/;"	s
rSplitOn	include/mongo/util/mongoutils/str.h	/^        inline bool rSplitOn(const std::string &s, char c, std::string& L, std::string& R) {$/;"	f	namespace:mongoutils::str
raw	include/mongo/util/net/sock.h	/^        const sockaddr* raw() const {return (sockaddr*)&sa;}$/;"	f	struct:mongo::SockAddr
raw	include/mongo/util/net/sock.h	/^        sockaddr* raw() {return (sockaddr*)&sa;}$/;"	f	struct:mongo::SockAddr
rawData	include/mongo/base/string_data.h	/^        const char* rawData() const { return _data; }$/;"	f	class:mongo::StringData
rawFD	include/mongo/util/net/sock.h	/^        int rawFD() const { return _fd; }$/;"	f	class:mongo::Socket
rawdata	include/mongo/bson/bsonelement.h	/^        const char * rawdata() const { return data; }$/;"	f	class:mongo::BSONElement
read	BasicSocket.cpp	/^SignedSize Network::BasicSocket::read(void *buf, size_t buf_len)$/;"	f	class:Network::BasicSocket
readArray	jsoncpp.cpp	/^bool OurReader::readArray(Token& tokenStart) {$/;"	f	class:Json::OurReader
readArray	jsoncpp.cpp	/^bool Reader::readArray(Token& tokenStart) {$/;"	f	class:Json::Reader
readBE	include/mongo/base/data_view.h	/^        T readBE(std::size_t offset = 0) const {$/;"	f	class:mongo::ConstDataView
readBEAndAdvance	include/mongo/base/data_cursor.h	/^        T readBEAndAdvance() {$/;"	f	class:mongo::ConstDataCursor
readBEAndAdvance	include/mongo/base/data_cursor.h	/^        T readBEAndAdvance() {$/;"	f	class:mongo::DataCursor
readCStyleComment	jsoncpp.cpp	/^bool OurReader::readCStyleComment() {$/;"	f	class:Json::OurReader
readCStyleComment	jsoncpp.cpp	/^bool Reader::readCStyleComment() {$/;"	f	class:Json::Reader
readComment	jsoncpp.cpp	/^bool OurReader::readComment() {$/;"	f	class:Json::OurReader
readComment	jsoncpp.cpp	/^bool Reader::readComment() {$/;"	f	class:Json::Reader
readCppStyleComment	jsoncpp.cpp	/^bool OurReader::readCppStyleComment() {$/;"	f	class:Json::OurReader
readCppStyleComment	jsoncpp.cpp	/^bool Reader::readCppStyleComment() {$/;"	f	class:Json::Reader
readLE	include/mongo/base/data_view.h	/^        T readLE(std::size_t offset = 0) const {$/;"	f	class:mongo::ConstDataView
readLEAndAdvance	include/mongo/base/data_cursor.h	/^        T readLEAndAdvance() {$/;"	f	class:mongo::ConstDataCursor
readLEAndAdvance	include/mongo/base/data_cursor.h	/^        T readLEAndAdvance() {$/;"	f	class:mongo::DataCursor
readNative	include/mongo/base/data_view.h	/^        T readNative(std::size_t offset = 0) const {$/;"	f	class:mongo::ConstDataView
readNative	include/mongo/base/data_view.h	/^        const ConstDataView& readNative(T* t, size_t offset = 0) const {$/;"	f	class:mongo::ConstDataView
readNativeAndAdvance	include/mongo/base/data_cursor.h	/^        ConstDataCursor& readNativeAndAdvance(T* t) {$/;"	f	class:mongo::ConstDataCursor
readNativeAndAdvance	include/mongo/base/data_cursor.h	/^        DataCursor& readNativeAndAdvance(T* t) {$/;"	f	class:mongo::DataCursor
readNativeAndAdvance	include/mongo/base/data_cursor.h	/^        T readNativeAndAdvance() {$/;"	f	class:mongo::ConstDataCursor
readNativeAndAdvance	include/mongo/base/data_cursor.h	/^        T readNativeAndAdvance() {$/;"	f	class:mongo::DataCursor
readNumber	jsoncpp.cpp	/^void OurReader::readNumber() {$/;"	f	class:Json::OurReader
readNumber	jsoncpp.cpp	/^void Reader::readNumber() {$/;"	f	class:Json::Reader
readObject	jsoncpp.cpp	/^bool OurReader::readObject(Token& tokenStart) {$/;"	f	class:Json::OurReader
readObject	jsoncpp.cpp	/^bool Reader::readObject(Token& tokenStart) {$/;"	f	class:Json::Reader
readString	jsoncpp.cpp	/^bool OurReader::readString() {$/;"	f	class:Json::OurReader
readString	jsoncpp.cpp	/^bool Reader::readString() {$/;"	f	class:Json::Reader
readStringSingleQuote	jsoncpp.cpp	/^bool OurReader::readStringSingleQuote() {$/;"	f	class:Json::OurReader
readToken	jsoncpp.cpp	/^bool OurReader::readToken(Token& token) {$/;"	f	class:Json::OurReader
readToken	jsoncpp.cpp	/^bool Reader::readToken(Token& token) {$/;"	f	class:Json::Reader
readValue	jsoncpp.cpp	/^bool OurReader::readValue() {$/;"	f	class:Json::OurReader
readValue	jsoncpp.cpp	/^bool Reader::readValue() {$/;"	f	class:Json::Reader
reader_	jsoncpp.cpp	/^  OurReader reader_;$/;"	m	class:Json::OurCharReader	file:
realValue	json.h	/^  realValue,     \/\/\/< double value$/;"	e	enum:Json::ValueType
real_	json.h	/^    double real_;$/;"	m	union:Json::Value::ValueHolder
reason	include/mongo/base/status-inl.h	/^    inline std::string Status::reason() const {$/;"	f	class:mongo::Status
reason	include/mongo/base/status.h	/^            const std::string reason;      \/\/ description of error cause$/;"	m	struct:mongo::Status::ErrorInfo
receiveData	JudgeServer.cpp	/^void JudgeServer::receiveData(int fd)$/;"	f	class:JudgeServer
recoverFromError	jsoncpp.cpp	/^bool OurReader::recoverFromError(TokenType skipUntilToken) {$/;"	f	class:Json::OurReader
recoverFromError	jsoncpp.cpp	/^bool Reader::recoverFromError(TokenType skipUntilToken) {$/;"	f	class:Json::Reader
recv	BasicSocket.cpp	/^SignedSize Network::BasicSocket::recv(void *buf, size_t buf_len, int msgtype)$/;"	f	class:Network::BasicSocket
recv	include/mongo/client/dbclientinterface.h	/^        virtual bool recv( Message& m ) { verify(false); return false; }$/;"	f	class:mongo::DBConnector
recvPacket	InetSocket.cpp	/^bool InetSocket::recvPacket(packet &p) {$/;"	f	class:InetSocket
ref	include/mongo/base/status-inl.h	/^    inline void Status::ref(ErrorInfo* error) {$/;"	f	class:mongo::Status
refCount	include/mongo/base/status-inl.h	/^    inline AtomicUInt32::WordType Status::refCount() const {$/;"	f	class:mongo::Status
reference	json.h	/^  typedef Value& reference;$/;"	t	class:Json::ValueIterator
reference	json.h	/^  typedef const Value& reference;$/;"	t	class:Json::ValueConstIterator
refs	include/mongo/base/status.h	/^            AtomicUInt32 refs;             \/\/ reference counter$/;"	m	struct:mongo::Status::ErrorInfo
regex	include/mongo/bson/bsonelement.h	/^        const char *regex() const {$/;"	f	class:mongo::BSONElement
regexFlags	include/mongo/bson/bsonelement.h	/^        const char *regexFlags() const {$/;"	f	class:mongo::BSONElement
rejectDupKeys_	jsoncpp.cpp	/^  bool rejectDupKeys_;$/;"	m	class:Json::OurFeatures	file:
releaseStringValue	jsoncpp.cpp	/^static inline void releaseStringValue(char* value) { free(value); }$/;"	f	namespace:Json
remain	Judge.cpp	/^int Judge::remain()$/;"	f	class:Judge
remoteAddr	include/mongo/util/net/sock.h	/^        SockAddr remoteAddr() const { return _remote; }$/;"	f	class:mongo::Socket
remotePort	include/mongo/util/net/message_port.h	/^        unsigned remotePort() const { return psock->remotePort(); }$/;"	f	class:mongo::MessagingPort
remotePort	include/mongo/util/net/sock.h	/^        unsigned remotePort() const { return _remote.getPort(); }$/;"	f	class:mongo::Socket
remoteString	include/mongo/util/net/sock.h	/^        std::string remoteString() const { return _remote.toString(); }$/;"	f	class:mongo::Socket
removeConnection	JudgeServer.cpp	/^void JudgeServer::removeConnection(InetSocket *sock)$/;"	f	class:JudgeServer
removeEvent	PollManager.cpp	/^bool PollManager::removeEvent(FileDescriptor fd)$/;"	f	class:PollManager
removeIndex	jsoncpp.cpp	/^bool Value::removeIndex(ArrayIndex index, Value* removed) {$/;"	f	class:Json::Value
removeMember	jsoncpp.cpp	/^Value Value::removeMember(const char* key)$/;"	f	class:Json::Value
removeMember	jsoncpp.cpp	/^Value Value::removeMember(const std::string& key)$/;"	f	class:Json::Value
removeMember	jsoncpp.cpp	/^bool Value::removeMember(const char* key, Value* removed)$/;"	f	class:Json::Value
removeMember	jsoncpp.cpp	/^bool Value::removeMember(const char* key, const char* end, Value* removed)$/;"	f	class:Json::Value
removeMember	jsoncpp.cpp	/^bool Value::removeMember(std::string const& key, Value* removed)$/;"	f	class:Json::Value
repairDatabase	include/mongo/client/dbclientinterface.h	/^        bool repairDatabase(const std::string &dbname, BSONObj *info = 0) {$/;"	f	class:mongo::DBClientWithCommands
replicated	include/mongo/client/write_concern.h	/^        static const WriteConcern replicated;$/;"	m	class:mongo::WriteConcern
requestID	include/mongo/util/net/message.h	/^            int32_t requestID;     \/\/ identifier for this message$/;"	m	struct:mongo::MSGHEADER::Layout
reserveBytes	include/mongo/bson/util/builder.h	/^        void reserveBytes(int bytes) {$/;"	f	class:mongo::_BufBuilder
reservedBytes	include/mongo/bson/util/builder.h	/^        int reservedBytes; \/\/ eagerly grow_reallocate to keep this many bytes of spare room.$/;"	m	class:mongo::_BufBuilder
reset	include/mongo/bson/util/builder.h	/^        void reset( int maxSize ) {$/;"	f	class:mongo::_BufBuilder
reset	include/mongo/bson/util/builder.h	/^        void reset( int maxSize = 0 ) { _buf.reset( maxSize ); }$/;"	f	class:mongo::StringBuilderImpl
reset	include/mongo/bson/util/builder.h	/^        void reset() {$/;"	f	class:mongo::_BufBuilder
reset	include/mongo/client/dbclientinterface.h	/^        virtual void reset() {}$/;"	f	class:mongo::DBClientBase
reset	include/mongo/util/assert_util.h	/^        void reset(){ msg = ""; code=-1; }$/;"	f	struct:mongo::ExceptionInfo
reset	include/mongo/util/net/message.h	/^        void reset() {$/;"	f	class:mongo::Message
resetError	include/mongo/client/dbclientinterface.h	/^        bool resetError() { return simpleCommand("admin", 0, "reseterror"); }$/;"	f	class:mongo::DBClientWithCommands
resize	jsoncpp.cpp	/^void Value::resize(ArrayIndex newSize) {$/;"	f	class:Json::Value
resolve	jsoncpp.cpp	/^Value Path::resolve(const Value& root, const Value& defaultValue) const {$/;"	f	class:Json::Path
resolve	jsoncpp.cpp	/^const Value& Path::resolve(const Value& root) const {$/;"	f	class:Json::Path
resolveReference	jsoncpp.cpp	/^Value& Value::resolveReference(char const* key, char const* end)$/;"	f	class:Json::Value
resolveReference	jsoncpp.cpp	/^Value& Value::resolveReference(const char* key) {$/;"	f	class:Json::Value
responseTo	include/mongo/util/net/message.h	/^            int32_t responseTo;    \/\/ requestID from the original request$/;"	m	struct:mongo::MSGHEADER::Layout
result	Grading.h	/^    result() : error(false), message("") {}$/;"	f	struct:result
result	Grading.h	/^struct result {$/;"	s
resultFlags	include/mongo/client/dbclientcursor.h	/^        int resultFlags;$/;"	m	class:mongo::DBClientCursor
rfind	include/mongo/base/string_data-inl.h	/^    inline size_t StringData::rfind( char c, size_t fromPos ) const {$/;"	f	class:mongo::StringData
rightMargin_	json.h	/^  int rightMargin_;$/;"	m	class:Json::StyledStreamWriter
rightMargin_	json.h	/^  int rightMargin_;$/;"	m	class:Json::StyledWriter
rightMargin_	jsoncpp.cpp	/^  int rightMargin_;$/;"	m	struct:Json::BuiltStyledStreamWriter	file:
run	Judge.cpp	/^void Judge::run()$/;"	f	class:Judge
run	JudgeServer.cpp	/^void JudgeServer::run()$/;"	f	class:JudgeServer
run	Thread.cpp	/^void Thread::Thread::run() {$/;"	f	class:Thread::Thread
run	Timer.h	/^        virtual void run() {$/;"	f	class:Timer::Timer
s_	include/mongo/bson/bsonmisc.h	/^        BSONObjBuilderValueStream *s_;$/;"	m	class:mongo::Labeler
sa	include/mongo/util/net/sock.h	/^        struct sockaddr_storage sa;$/;"	m	struct:mongo::SockAddr	typeref:struct:mongo::SockAddr::sockaddr_storage
sa_family_t	include/mongo/util/net/sock.h	/^    typedef short sa_family_t;$/;"	t	namespace:mongo
safeNumberLong	include/mongo/bson/bsonelement.h	/^    inline long long BSONElement::safeNumberLong() const {$/;"	f	class:mongo::BSONElement
sayPiggyBack	include/mongo/client/dbclient_rs.h	/^        virtual void sayPiggyBack( Message &toSend ) { checkMaster()->say( toSend ); }$/;"	f	class:mongo::DBClientReplicaSet
scope	include/mongo/bson/bsonmisc.h	/^        BSONObj scope;$/;"	m	struct:mongo::BSONCodeWScope
seconds	include/mongo/bson/timestamp.h	/^        uint32_t seconds() const { return _seconds; }$/;"	f	class:mongo::Timestamp_t
secure	include/mongo/util/net/message_port.h	/^        bool secure( SSLManagerInterface* ssl, const std::string& remoteHost ) {$/;"	f	class:mongo::MessagingPort
send	BasicSocket.cpp	/^SignedSize Network::BasicSocket::send(void *buf, size_t buf_len, int msgtype)$/;"	f	class:Network::BasicSocket
send	include/mongo/util/net/message_port.h	/^        void send( const char * data , int len, const char *context ) {$/;"	f	class:mongo::MessagingPort
send	include/mongo/util/net/message_port.h	/^        void send(const std::vector< std::pair< char *, int > > &data, const char *context) {$/;"	f	class:mongo::MessagingPort
sendPacket	InetSocket.cpp	/^bool InetSocket::sendPacket(packet p)$/;"	f	class:InetSocket
server	include/mongo/client/dbclientinterface.h	/^        boost::scoped_ptr<SockAddr> server;$/;"	m	class:mongo::DBClientConnection
server	include/mongo/util/net/sock.h	/^        virtual const std::string* server() const { return &_server; }$/;"	f	class:mongo::SocketException
setAbortOnFailure	include/mongo/logger/log_domain.h	/^        void setAbortOnFailure(bool abortOnFailure) { _abortOnFailure = abortOnFailure; }$/;"	f	class:mongo::logger::LogDomain
setAddress	BasicSocket.cpp	/^void Network::BasicSocket::setAddress(struct sockaddr_in &addr)$/;"	f	class:Network::BasicSocket
setBaseMessage	include/mongo/logger/logstream_builder.h	/^        LogstreamBuilder& setBaseMessage(const std::string& baseMessage) {$/;"	f	class:mongo::logger::LogstreamBuilder
setBatchSize	include/mongo/client/dbclientcursor.h	/^        void setBatchSize(int newBatchSize) { batchSize = newBatchSize; }$/;"	f	class:mongo::DBClientCursor
setComment	jsoncpp.cpp	/^void Value::CommentInfo::setComment(const char* text, size_t len) {$/;"	f	class:Json::Value::CommentInfo
setComment	jsoncpp.cpp	/^void Value::setComment(const char* comment, CommentPlacement placement) {$/;"	f	class:Json::Value
setComment	jsoncpp.cpp	/^void Value::setComment(const char* comment, size_t len, CommentPlacement placement) {$/;"	f	class:Json::Value
setComment	jsoncpp.cpp	/^void Value::setComment(const std::string& comment, CommentPlacement placement) {$/;"	f	class:Json::Value
setConnectionHook	include/mongo/client/dbclientinterface.h	/^        static void setConnectionHook( ConnectionHook* hook ){$/;"	f	class:mongo::ConnectionString
setData	include/mongo/util/net/message.h	/^        void setData(char* d, bool freeIt) {$/;"	f	class:mongo::Message
setData	include/mongo/util/net/message.h	/^        void setData(int operation, const char *msgdata, size_t len) {$/;"	f	class:mongo::Message
setData	include/mongo/util/net/message.h	/^        void setData(int operation, const char *msgtxt) {$/;"	f	class:mongo::Message
setDefaults	jsoncpp.cpp	/^void CharReaderBuilder::setDefaults(Json::Value* settings)$/;"	f	class:Json::CharReaderBuilder
setDefaults	jsoncpp.cpp	/^void StreamWriterBuilder::setDefaults(Json::Value* settings)$/;"	f	class:Json::StreamWriterBuilder
setFields	include/mongo/client/dbclientinterface.h	/^        void setFields( BSONObj& o ) { _fields = o.getOwned(); }$/;"	f	class:mongo::QuerySpec
setHandshakeReceived	include/mongo/util/net/sock.h	/^        void setHandshakeReceived() {$/;"	f	class:mongo::Socket
setId	include/mongo/util/net/message.h	/^            void setId(MSGID value) {$/;"	f	class:mongo::MsgData::View
setLazyKillCursor	include/mongo/client/dbclientinterface.h	/^        static void MONGO_CLIENT_FUNC setLazyKillCursor( bool lazy ) { _lazyKillCursor = lazy; }$/;"	f	class:mongo::DBClientConnection
setLen	include/mongo/util/net/message.h	/^            void setLen(int value) {$/;"	f	class:mongo::MsgData::View
setLogLevel	include/mongo/util/net/sock.h	/^        void setLogLevel( logger::LogSeverity ll ) { _logLevel = ll; }$/;"	f	class:mongo::Socket
setMessageLength	include/mongo/util/net/message.h	/^            void setMessageLength(int32_t value) {$/;"	f	class:mongo::MSGHEADER::View
setNonblockSocket	BasicSocket.cpp	/^void Network::BasicSocket::setNonblockSocket(bool accept)$/;"	f	class:Network::BasicSocket
setOffsetLimit	jsoncpp.cpp	/^void Value::setOffsetLimit(size_t limit) { limit_ = limit; }$/;"	f	class:Json::Value
setOffsetStart	jsoncpp.cpp	/^void Value::setOffsetStart(size_t start) { start_ = start; }$/;"	f	class:Json::Value
setOpCode	include/mongo/util/net/message.h	/^            void setOpCode(int32_t value) {$/;"	f	class:mongo::MSGHEADER::View
setOperation	include/mongo/util/net/message.h	/^            void setOperation(int value) {$/;"	f	class:mongo::MsgData::View
setRequestID	include/mongo/util/net/message.h	/^            void setRequestID(int32_t value) {$/;"	f	class:mongo::MSGHEADER::View
setResponseTo	include/mongo/util/net/message.h	/^            void setResponseTo(MSGID value) {$/;"	f	class:mongo::MsgData::View
setResponseTo	include/mongo/util/net/message.h	/^            void setResponseTo(int32_t value) {$/;"	f	class:mongo::MSGHEADER::View
setWireVersions	include/mongo/client/dbclientinterface.h	/^        void setWireVersions( int minWireVersion, int maxWireVersion ){$/;"	f	class:mongo::DBClientBase
setWriteConcern	include/mongo/client/dbclientinterface.h	/^        void setWriteConcern( const WriteConcern& w ) { _writeConcern = w; }$/;"	f	class:mongo::DBClientBase
setX509SubjectName	include/mongo/util/net/message_port.h	/^        void setX509SubjectName(const std::string& x509SubjectName) {$/;"	f	class:mongo::AbstractMessagingPort
setlen	include/mongo/bson/util/builder.h	/^        void setlen( int newLen ) { l = newLen; }$/;"	f	class:mongo::_BufBuilder
settings_	json.h	/^  Json::Value settings_;$/;"	m	class:Json::CharReaderBuilder
settings_	json.h	/^  Json::Value settings_;$/;"	m	class:Json::StreamWriterBuilder
severe	include/mongo/util/assert_util.h	/^        virtual bool severe() const { return false; }$/;"	f	class:mongo::MsgAssertionException
severe	include/mongo/util/assert_util.h	/^        virtual bool severe() const { return false; }$/;"	f	class:mongo::UserException
severe	include/mongo/util/assert_util.h	/^        virtual bool severe() const { return true; }$/;"	f	class:mongo::AssertionException
severityCast	include/mongo/logger/logstream_builder.h	/^        static LabeledLevel MONGO_CLIENT_FUNC severityCast(const LabeledLevel &labeled) { return labeled; }$/;"	f	class:mongo::logger::LogstreamBuilder
severityCast	include/mongo/logger/logstream_builder.h	/^        static LogSeverity MONGO_CLIENT_FUNC severityCast(LogSeverity ls) { return ls; }$/;"	f	class:mongo::logger::LogstreamBuilder
severityCast	include/mongo/logger/logstream_builder.h	/^        static LogSeverity MONGO_CLIENT_FUNC severityCast(int ll) { return LogSeverity::cast(ll); }$/;"	f	class:mongo::logger::LogstreamBuilder
shareCommonPrefix	include/mongo/util/mongoutils/str.h	/^        inline int shareCommonPrefix(const char *p, const char *q) {$/;"	f	namespace:mongoutils::str
shareCommonPrefix	include/mongo/util/mongoutils/str.h	/^        inline int shareCommonPrefix(const std::string &a, const std::string &b)$/;"	f	namespace:mongoutils::str
shim	include/mongo/client/dbclientcursor.h	/^        std::auto_ptr<DBClientCursorShim> shim;$/;"	m	class:mongo::DBClientCursor
shouldPrint	include/mongo/util/net/sock.h	/^        bool shouldPrint() const { return _type != CLOSED; }$/;"	f	class:mongo::SocketException
singleData	include/mongo/util/net/message.h	/^        MsgData::View singleData() const {$/;"	f	class:mongo::Message
size	include/mongo/base/string_data.h	/^        size_t size() const { return _size; }$/;"	f	class:mongo::StringData
size	include/mongo/bson/util/builder.h	/^        int size;$/;"	m	class:mongo::_BufBuilder
size	include/mongo/util/net/message.h	/^        int size() const {$/;"	f	class:mongo::Message
size	jsoncpp.cpp	/^ArrayIndex Value::size() const {$/;"	f	class:Json::Value
size_t	json.h	/^  typedef unsigned int size_t;$/;"	t	class:Json::ValueIterator
size_t	json.h	/^  typedef unsigned int size_t;$/;"	t	class:Json::ValueIteratorBase
sizeof	include/mongo/platform/endian.h	/^        BOOST_STATIC_ASSERT(sizeof(long long) == sizeof(int64_t));$/;"	m	struct:mongo::endian::IntegralTypeMap
sizeof	include/mongo/platform/endian.h	/^        BOOST_STATIC_ASSERT(sizeof(unsigned long long) == sizeof(uint64_t));$/;"	m	struct:mongo::endian::IntegralTypeMap
skip	include/mongo/base/data_cursor.h	/^        ConstDataCursor& skip() {$/;"	f	class:mongo::ConstDataCursor
skip	include/mongo/base/data_cursor.h	/^        DataCursor& skip() {$/;"	f	class:mongo::DataCursor
skip	include/mongo/bson/util/builder.h	/^        char* skip(int n) { return grow(n); }$/;"	f	class:mongo::_BufBuilder
skipCommentTokens	jsoncpp.cpp	/^void OurReader::skipCommentTokens(Token& token) {$/;"	f	class:Json::OurReader
skipCommentTokens	jsoncpp.cpp	/^void Reader::skipCommentTokens(Token& token) {$/;"	f	class:Json::Reader
skipSpaces	jsoncpp.cpp	/^void OurReader::skipSpaces() {$/;"	f	class:Json::OurReader
skipSpaces	jsoncpp.cpp	/^void Reader::skipSpaces() {$/;"	f	class:Json::Reader
snprintf	include/mongo/bson/util/builder.h	294;"	d
snprintf	include/mongo/bson/util/builder.h	402;"	d
snprintf	jsoncpp.cpp	205;"	d	file:
snprintf	jsoncpp.cpp	3963;"	d	file:
snprintf	jsoncpp.cpp	3971;"	d	file:
sockaddr_un	include/mongo/util/net/sock.h	/^    struct sockaddr_un {$/;"	s	namespace:mongo
socklen_t	include/mongo/util/net/sock.h	/^    typedef int socklen_t;$/;"	t	namespace:mongo
sort	include/mongo/client/dbclientinterface.h	/^        BSONObj sort() const { return _queryObj.getSort(); }$/;"	f	class:mongo::QuerySpec
sort	include/mongo/client/dbclientinterface.h	/^        Query& sort(const std::string &field, int asc = 1) { sort( BSON( field << asc ) ); return *this; }$/;"	f	class:mongo::Query
sout_	json.h	/^  std::ostream* sout_;  \/\/ not owned; will not delete$/;"	m	class:Json::StreamWriter
splitOn	include/mongo/util/mongoutils/str.h	/^        inline bool splitOn(const std::string &s, char c, std::string& L, std::string& R) {$/;"	f	namespace:mongoutils::str
ss	include/mongo/util/mongoutils/str.h	/^            mongo::StringBuilder ss;$/;"	m	class:mongoutils::str::stream
stackDepth_	jsoncpp.cpp	/^  int stackDepth_;$/;"	m	class:Json::OurReader	file:
stackDepth_g	jsoncpp.cpp	/^static int       stackDepth_g = 0;  \/\/ see readValue()$/;"	v	file:
stackLimit_	jsoncpp.cpp	/^  int stackLimit_;$/;"	m	class:Json::OurFeatures	file:
stackLimit_g	jsoncpp.cpp	/^static int const stackLimit_g = 1000;$/;"	v	file:
start	JudgeManager.cpp	/^void JudgeManager::start() {$/;"	f	class:JudgeManager
start	Thread.cpp	/^void Thread::Thread::start()$/;"	f	class:Thread::Thread
start_	json.h	/^    Location start_;$/;"	m	class:Json::Reader::Token
start_	json.h	/^  size_t start_;$/;"	m	class:Json::Value
start_	jsoncpp.cpp	/^    Location start_;$/;"	m	class:Json::OurReader::Token	file:
startsWith	include/mongo/base/string_data-inl.h	/^    inline bool StringData::startsWith( const StringData& prefix ) const {$/;"	f	class:mongo::StringData
startsWith	include/mongo/util/mongoutils/str.h	/^        inline bool startsWith(const char *p, char ch) { return *p == ch; }$/;"	f	namespace:mongoutils::str
startsWith	include/mongo/util/mongoutils/str.h	/^        inline bool startsWith(const char *str, const char *prefix) {$/;"	f	namespace:mongoutils::str
startsWith	include/mongo/util/mongoutils/str.h	/^        inline bool startsWith(const std::string& s, char ch) { return startsWith(s.c_str(), ch); }$/;"	f	namespace:mongoutils::str
startsWith	include/mongo/util/mongoutils/str.h	/^        inline bool startsWith(const std::string& s, const std::string& p) {$/;"	f	namespace:mongoutils::str
status	include/mongo/client/init.h	/^        const Status& status() const {$/;"	f	class:mongo::client::GlobalInstance
std	json.h	/^namespace std {$/;"	n
stdx	include/mongo/stdx/functional.h	/^namespace stdx {$/;"	n	namespace:mongo
stop	JudgeManager.cpp	/^void JudgeManager::stop() {$/;"	f	class:JudgeManager
stop	Thread.cpp	/^void Thread::Thread::stop() {$/;"	f	class:Thread::Thread
stop	Timer.h	/^        void stop() {$/;"	f	class:Timer::Timer
storage	include/mongo/util/net/message.h	/^            DataView storage() const {$/;"	f	class:mongo::MsgData::View
storage	include/mongo/util/net/message.h	/^            const ConstDataView& storage() const {$/;"	f	class:mongo::MsgData::ConstView
storageValid	include/mongo/bson/bsonobj.h	/^        inline Status storageValid(const bool deep = true) const {$/;"	f	class:mongo::BSONObj
storageValidEmbedded	include/mongo/bson/bsonobj.h	/^        inline Status storageValidEmbedded(const bool deep = true) const {$/;"	f	class:mongo::BSONObj
storage_	json.h	/^      StringStorage storage_;$/;"	m	union:Json::Value::CZString::__anon1
store	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static void store(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
store	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static void store(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
store	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static void store(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
store	include/mongo/platform/atomic_intrinsics_win32.h	/^        static void store(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
store	include/mongo/platform/atomic_word_cxx11.h	/^        void store(WordType newValue) {$/;"	f	class:mongo::AtomicWord
store	include/mongo/platform/atomic_word_intrinsics.h	/^        void store(WordType newValue) { AtomicIntrinsics<WordType>::store(&_value, newValue); }$/;"	f	class:mongo::AtomicWord
str	include/mongo/bson/bsonelement.h	/^        std::string str() const {$/;"	f	class:mongo::BSONElement
str	include/mongo/bson/util/builder.h	/^        std::string str() const { return std::string(_buf.data, _buf.l); }$/;"	f	class:mongo::StringBuilderImpl
str	include/mongo/util/mongoutils/str.h	/^    namespace str {$/;"	n	namespace:mongoutils
strcasecmp	include/mongo/util/mongoutils/str.h	/^    inline int strcasecmp(const char* s1, const char* s2) {return _stricmp(s1, s2);}$/;"	f	namespace:mongo
stream	include/mongo/logger/logstream_builder.h	/^        std::ostream& stream() { makeStream(); return *_os; }$/;"	f	class:mongo::logger::LogstreamBuilder
stream	include/mongo/util/mongoutils/str.h	/^        class stream {$/;"	c	namespace:mongoutils::str
strictMode	jsoncpp.cpp	/^Features Features::strictMode() {$/;"	f	class:Json::Features
strictMode	jsoncpp.cpp	/^void CharReaderBuilder::strictMode(Json::Value* settings)$/;"	f	class:Json::CharReaderBuilder
strictRoot_	json.h	/^  bool strictRoot_;$/;"	m	class:Json::Features
strictRoot_	jsoncpp.cpp	/^  bool strictRoot_;$/;"	m	class:Json::OurFeatures	file:
stringToType	include/mongo/geo/parser-impl.h	/^    GeoObjType Parser<TCoordinates>::stringToType(const StringData& typeStr) {$/;"	f	class:mongo::geo::Parser
stringValue	json.h	/^  stringValue,   \/\/\/< UTF-8 string value$/;"	e	enum:Json::ValueType
string_	json.h	/^    char* string_;  \/\/ actually ptr to unsigned, followed by str, unless !allocated_$/;"	m	union:Json::Value::ValueHolder
stripTrailing	include/mongo/util/mongoutils/str.h	/^        inline void stripTrailing(std::string& s, const char *chars) {$/;"	f	namespace:mongoutils::str
strnpbrk	jsoncpp.cpp	/^static char const* strnpbrk(char const* s, char const* accept, size_t n) {$/;"	f	namespace:Json
subarrayStart	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder &subarrayStart() { return _b.subarrayStart( num() ); }$/;"	f	class:mongo::BSONArrayBuilder
subarrayStart	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder &subarrayStart(const StringData& fieldName) {$/;"	f	class:mongo::BSONObjBuilder
submit	Judge.cpp	/^void Judge::submit(question q)$/;"	f	class:Judge
submit	JudgeManager.cpp	/^void JudgeManager::submit(question &q) {$/;"	f	class:JudgeManager
subobjStart	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder &subobjStart() { return _b.subobjStart( num() ); }$/;"	f	class:mongo::BSONArrayBuilder
subobjStart	include/mongo/bson/bsonobjbuilder.h	/^        BufBuilder &subobjStart(const StringData& fieldName) {$/;"	f	class:mongo::BSONObjBuilder
subobjStarted	include/mongo/bson/bsonmisc.h	/^        bool subobjStarted() const { return _fieldName != 0; }$/;"	f	class:mongo::BSONObjBuilderValueStream
substr	include/mongo/base/string_data-inl.h	/^    inline StringData StringData::substr( size_t pos, size_t n ) const {$/;"	f	class:mongo::StringData
subtractAndFetch	include/mongo/platform/atomic_word_cxx11.h	/^        WordType subtractAndFetch(WordType decrement) {$/;"	f	class:mongo::AtomicWord
subtractAndFetch	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType subtractAndFetch(WordType decrement) {$/;"	f	class:mongo::AtomicWord
sun_family	include/mongo/util/net/sock.h	/^        short sun_family;$/;"	m	struct:mongo::sockaddr_un
sun_path	include/mongo/util/net/sock.h	/^        char sun_path[108]; \/\/ length from unix header$/;"	m	struct:mongo::sockaddr_un
swap	include/mongo/bson/bsonobj.h	/^        void swap(BSONObj& other) {$/;"	f	class:mongo::BSONObj
swap	include/mongo/bson/bsonobj.h	/^    inline void swap(BSONObj& l, BSONObj& r) {$/;"	f	namespace:mongo
swap	include/mongo/platform/atomic_intrinsics_gcc_atomic.h	/^        static T swap(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
swap	include/mongo/platform/atomic_intrinsics_gcc_intel.h	/^        static T swap(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
swap	include/mongo/platform/atomic_intrinsics_gcc_sync.h	/^        static T swap(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
swap	include/mongo/platform/atomic_intrinsics_win32.h	/^            static T swap(volatile T* dest, T newValue) {$/;"	f	struct:mongo::details::InterlockedImpl64
swap	include/mongo/platform/atomic_intrinsics_win32.h	/^        static T swap(volatile T* dest, T newValue) {$/;"	f	class:mongo::AtomicIntrinsics
swap	include/mongo/platform/atomic_word_cxx11.h	/^        WordType swap(WordType newValue) {$/;"	f	class:mongo::AtomicWord
swap	include/mongo/platform/atomic_word_intrinsics.h	/^        WordType swap(WordType newValue) {$/;"	f	class:mongo::AtomicWord
swap	include/mongo/util/shared_buffer.h	/^        void swap(SharedBuffer& other) {$/;"	f	class:mongo::SharedBuffer
swap	include/mongo/util/shared_buffer.h	/^    inline void swap(SharedBuffer& one, SharedBuffer& two) {$/;"	f	namespace:mongo
swap	json.h	/^inline void swap(Json::Value& a, Json::Value& b) { a.swap(b); }$/;"	f	namespace:std
swap	jsoncpp.cpp	/^void Value::CZString::swap(CZString& other) {$/;"	f	class:Json::Value::CZString
swap	jsoncpp.cpp	/^void Value::swap(Value& other) {$/;"	f	class:Json::Value
swapPayload	jsoncpp.cpp	/^void Value::swapPayload(Value& other) {$/;"	f	class:Json::Value
symbol	include/mongo/bson/bsonmisc.h	/^        StringData symbol;$/;"	m	struct:mongo::BSONSymbol
tag	include/mongo/util/net/message_port.h	/^        unsigned tag;$/;"	m	class:mongo::AbstractMessagingPort
tags	include/mongo/client/dbclient_rs.h	/^        TagSet tags;$/;"	m	struct:mongo::ReadPreferenceSetting
tailable	include/mongo/client/dbclientcursor.h	/^        bool tailable() const { return (opts & QueryOption_CursorTailable) != 0; }$/;"	f	class:mongo::DBClientCursor
takeOwnership	include/mongo/bson/bsonobj.h	/^        static BSONObj takeOwnership(char* holderPrefixedData) {$/;"	f	class:mongo::BSONObj
takeOwnership	include/mongo/util/shared_buffer.h	/^        static SharedBuffer takeOwnership(char* holderPrefixedData) {$/;"	f	class:mongo::SharedBuffer
task	Grading.cpp	/^    virtual void task() {$/;"	f	class:KillTimerTask
thread_main	Thread.cpp	/^void *Thread::thread_main(void *args)$/;"	f	class:Thread
throwLogicError	jsoncpp.cpp	/^void throwLogicError(std::string const& msg)$/;"	f	namespace:Json
throwRuntimeError	jsoncpp.cpp	/^void throwRuntimeError(std::string const& msg)$/;"	f	namespace:Json
timestamp	include/mongo/bson/bsonelement.h	/^        Timestamp_t timestamp() const {$/;"	f	class:mongo::BSONElement
title	question.h	/^    std::string title;$/;"	m	struct:question
toBSON	include/mongo/geo/boundingbox.h	/^    BSONObj BoundingBox<TCoordinates>::toBSON() const {$/;"	f	class:mongo::geo::BoundingBox
toBSON	include/mongo/geo/geometrycollection.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::GeometryCollection
toBSON	include/mongo/geo/linestring.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::LineString
toBSON	include/mongo/geo/multilinestring.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::MultiLineString
toBSON	include/mongo/geo/multipoint.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::MultiPoint
toBSON	include/mongo/geo/multipolygon.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::MultiPolygon
toBSON	include/mongo/geo/point.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::Point
toBSON	include/mongo/geo/polygon.h	/^        virtual BSONObj toBSON() const { return _bson; }$/;"	f	class:mongo::geo::Polygon
toBSONArray	include/mongo/geo/boundingbox.h	/^    BSONArray BoundingBox<TCoordinates>::toBSONArray() const {$/;"	f	class:mongo::geo::BoundingBox
toInt	include/mongo/logger/log_severity-inl.h	/^    int LogSeverity::toInt() const { return _severity; }$/;"	f	class:mongo::logger::LogSeverity
toNestedBSONArray	include/mongo/geo/boundingbox.h	/^    BSONArray BoundingBox<TCoordinates>::toNestedBSONArray() const {$/;"	f	class:mongo::geo::BoundingBox
toStatus	include/mongo/util/assert_util.h	/^        Status toStatus() const {$/;"	f	class:mongo::DBException
toStatus	include/mongo/util/assert_util.h	/^        Status toStatus(const std::string& context) const {$/;"	f	class:mongo::DBException
toString	include/mongo/base/status_with.h	/^        std::string toString() const { return _status.toString(); }$/;"	f	class:mongo::StatusWith
toString	include/mongo/base/string_data.h	/^        std::string toString() const { return std::string(_data, size()); }$/;"	f	class:mongo::StringData
toString	include/mongo/client/dbclient_rs.h	/^        std::string toString() const { return getServerAddress(); }$/;"	f	class:mongo::DBClientReplicaSet
toString	include/mongo/client/dbclientinterface.h	/^        std::string toString() const { return _string; }$/;"	f	class:mongo::ConnectionString
toString	include/mongo/client/dbclientinterface.h	/^        std::string toString() const {$/;"	f	class:mongo::DBClientConnection
toString	include/mongo/client/dbclientinterface.h	/^        std::string toString() const {$/;"	f	class:mongo::QuerySpec
toStyledString	jsoncpp.cpp	/^std::string Value::toStyledString() const {$/;"	f	class:Json::Value
toUnsigned	include/mongo/util/mongoutils/str.h	/^        inline unsigned toUnsigned(const std::string& a) {$/;"	f	namespace:mongoutils::str
tokenArrayBegin	json.h	/^    tokenArrayBegin,$/;"	e	enum:Json::Reader::TokenType
tokenArrayBegin	jsoncpp.cpp	/^    tokenArrayBegin,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenArrayEnd	json.h	/^    tokenArrayEnd,$/;"	e	enum:Json::Reader::TokenType
tokenArrayEnd	jsoncpp.cpp	/^    tokenArrayEnd,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenArraySeparator	json.h	/^    tokenArraySeparator,$/;"	e	enum:Json::Reader::TokenType
tokenArraySeparator	jsoncpp.cpp	/^    tokenArraySeparator,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenComment	json.h	/^    tokenComment,$/;"	e	enum:Json::Reader::TokenType
tokenComment	jsoncpp.cpp	/^    tokenComment,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenEndOfStream	json.h	/^    tokenEndOfStream = 0,$/;"	e	enum:Json::Reader::TokenType
tokenEndOfStream	jsoncpp.cpp	/^    tokenEndOfStream = 0,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenError	json.h	/^    tokenError$/;"	e	enum:Json::Reader::TokenType
tokenError	jsoncpp.cpp	/^    tokenError$/;"	e	enum:Json::OurReader::TokenType	file:
tokenFalse	json.h	/^    tokenFalse,$/;"	e	enum:Json::Reader::TokenType
tokenFalse	jsoncpp.cpp	/^    tokenFalse,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenMemberSeparator	json.h	/^    tokenMemberSeparator,$/;"	e	enum:Json::Reader::TokenType
tokenMemberSeparator	jsoncpp.cpp	/^    tokenMemberSeparator,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenNull	json.h	/^    tokenNull,$/;"	e	enum:Json::Reader::TokenType
tokenNull	jsoncpp.cpp	/^    tokenNull,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenNumber	json.h	/^    tokenNumber,$/;"	e	enum:Json::Reader::TokenType
tokenNumber	jsoncpp.cpp	/^    tokenNumber,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenObjectBegin	json.h	/^    tokenObjectBegin,$/;"	e	enum:Json::Reader::TokenType
tokenObjectBegin	jsoncpp.cpp	/^    tokenObjectBegin,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenObjectEnd	json.h	/^    tokenObjectEnd,$/;"	e	enum:Json::Reader::TokenType
tokenObjectEnd	jsoncpp.cpp	/^    tokenObjectEnd,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenString	json.h	/^    tokenString,$/;"	e	enum:Json::Reader::TokenType
tokenString	jsoncpp.cpp	/^    tokenString,$/;"	e	enum:Json::OurReader::TokenType	file:
tokenTrue	json.h	/^    tokenTrue,$/;"	e	enum:Json::Reader::TokenType
tokenTrue	jsoncpp.cpp	/^    tokenTrue,$/;"	e	enum:Json::OurReader::TokenType	file:
token_	json.h	/^    Token token_;$/;"	m	class:Json::Reader::ErrorInfo
token_	jsoncpp.cpp	/^    Token token_;$/;"	m	class:Json::OurReader::ErrorInfo	file:
totalSize	include/mongo/bson/bsonelement.h	/^        mutable int totalSize; \/* caches the computed size *\/$/;"	m	class:mongo::BSONElement
trueValue	include/mongo/bson/bsonelement.h	/^    inline bool BSONElement::trueValue() const {$/;"	f	class:mongo::BSONElement
type	include/mongo/bson/bsonelement.h	/^        BSONType type() const {$/;"	f	class:mongo::BSONElement
type	include/mongo/bson/bsonmisc.h	/^        BinDataType type;$/;"	m	struct:mongo::BSONBinData
type	include/mongo/client/dbclient_rs.h	/^        virtual ConnectionString::ConnectionType type() const { return ConnectionString::SET; }$/;"	f	class:mongo::DBClientReplicaSet
type	include/mongo/client/dbclientinterface.h	/^        ConnectionType type() const { return _type; }$/;"	f	class:mongo::ConnectionString
type	include/mongo/client/dbclientinterface.h	/^        virtual ConnectionString::ConnectionType type() const { return ConnectionString::MASTER; }$/;"	f	class:mongo::DBClientConnection
type	include/mongo/platform/endian.h	/^            uint8_t>::type type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	include/mongo/platform/endian.h	/^        typedef T type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	include/mongo/platform/endian.h	/^        typedef int64_t type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	include/mongo/platform/endian.h	/^        typedef int8_t type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	include/mongo/platform/endian.h	/^        typedef uint64_t type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	include/mongo/platform/endian.h	/^        typedef uint8_t type;$/;"	t	struct:mongo::endian::IntegralTypeMap
type	jsoncpp.cpp	/^ValueType Value::type() const { return type_; }$/;"	f	class:Json::Value
type_	json.h	/^    TokenType type_;$/;"	m	class:Json::Reader::Token
type_	jsoncpp.cpp	/^    TokenType type_;$/;"	m	class:Json::OurReader::Token	file:
uassert	include/mongo/client/redef_macros.h	59;"	d
uassert	include/mongo/client/redef_macros.h	60;"	d
uassert	include/mongo/client/undef_macros.h	41;"	d
uassert	include/mongo/util/assert_util.h	266;"	d
uassertStatusOK	include/mongo/util/assert_util.h	/^    MONGO_CLIENT_API inline void MONGO_CLIENT_FUNC uassertStatusOK(const Status& status) {$/;"	f	namespace:mongo
uintToString	jsoncpp.cpp	/^static inline void uintToString(LargestUInt value, char*& current) {$/;"	f	namespace:Json
uintToStringBufferSize	jsoncpp.cpp	/^  uintToStringBufferSize = 3 * sizeof(LargestUInt) + 1$/;"	e	enum:Json::__anon7	file:
uintValue	json.h	/^  uintValue,     \/\/\/< unsigned integer value$/;"	e	enum:Json::ValueType
uint_	json.h	/^    LargestUInt uint_;$/;"	m	union:Json::Value::ValueHolder
unacknowledged	include/mongo/client/write_concern.h	/^        static const WriteConcern unacknowledged;$/;"	m	class:mongo::WriteConcern
unindent	jsoncpp.cpp	/^void BuiltStyledStreamWriter::unindent() {$/;"	f	class:Json::BuiltStyledStreamWriter
unindent	jsoncpp.cpp	/^void StyledStreamWriter::unindent() {$/;"	f	class:Json::StyledStreamWriter
unindent	jsoncpp.cpp	/^void StyledWriter::unindent() {$/;"	f	class:Json::StyledWriter
unref	include/mongo/base/status-inl.h	/^    inline void Status::unref(ErrorInfo* error) {$/;"	f	class:mongo::Status
valid	include/mongo/util/net/message.h	/^            bool valid() const {$/;"	f	class:mongo::MsgData::ConstView
validate	include/mongo/client/dbclientinterface.h	/^        bool validate( const std::string &ns , bool scandata=true ) {$/;"	f	class:mongo::DBClientWithCommands
validate	jsoncpp.cpp	/^bool CharReaderBuilder::validate(Json::Value* invalid) const$/;"	f	class:Json::CharReaderBuilder
validate	jsoncpp.cpp	/^bool StreamWriterBuilder::validate(Json::Value* invalid) const$/;"	f	class:Json::StreamWriterBuilder
validateType	include/mongo/geo/geoobj.h	/^    BSONObj GeoObj<TCoordinates>::validateType(const BSONObj& bson, const StringData& typeStr) {$/;"	f	class:mongo::geo::GeoObj
value	include/mongo/bson/bson_field.h	/^        const T& value() const { return _t; }$/;"	f	class:mongo::BSONFieldValue
value	include/mongo/bson/bsonelement.h	/^        const char * value() const {$/;"	f	class:mongo::BSONElement
valueStringData	include/mongo/bson/bsonelement.h	/^        const StringData valueStringData() const {$/;"	f	class:mongo::BSONElement
valueToQuotedString	jsoncpp.cpp	/^std::string valueToQuotedString(const char* value) {$/;"	f	namespace:Json
valueToQuotedStringN	jsoncpp.cpp	/^static std::string valueToQuotedStringN(const char* value, unsigned length) {$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(Int value) {$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(LargestInt value) {$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(LargestUInt value) {$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(UInt value) {$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(bool value) { return value ? "true" : "false"; }$/;"	f	namespace:Json
valueToString	jsoncpp.cpp	/^std::string valueToString(double value) {$/;"	f	namespace:Json
value_	json.h	/^  } value_;$/;"	m	class:Json::Value	typeref:union:Json::Value::ValueHolder
value_type	json.h	/^  typedef Value value_type;$/;"	t	class:Json::ValueIterator
value_type	json.h	/^  typedef const Value value_type;$/;"	t	class:Json::ValueConstIterator
valuesEqual	include/mongo/bson/bsonelement.h	/^        bool valuesEqual(const BSONElement& r) const {$/;"	f	class:mongo::BSONElement
valuesize	include/mongo/bson/bsonelement.h	/^        int valuesize() const {$/;"	f	class:mongo::BSONElement
valuestr	include/mongo/bson/bsonelement.h	/^        const char * valuestr() const {$/;"	f	class:mongo::BSONElement
valuestrsafe	include/mongo/bson/bsonelement.h	/^        const char *valuestrsafe() const {$/;"	f	class:mongo::BSONElement
valuestrsize	include/mongo/bson/bsonelement.h	/^        int valuestrsize() const {$/;"	f	class:mongo::BSONElement
verify	include/mongo/client/redef_macros.h	44;"	d
verify	include/mongo/client/redef_macros.h	45;"	d
verify	include/mongo/client/undef_macros.h	43;"	d
verify	include/mongo/util/assert_util.h	263;"	d
view	include/mongo/base/data_view.h	/^        bytes_type view(std::size_t offset = 0) const {$/;"	f	class:mongo::ConstDataView
view	include/mongo/base/data_view.h	/^        bytes_type view(std::size_t offset = 0) const {$/;"	f	class:mongo::DataView
view	include/mongo/base/encoded_value_storage.h	/^        View view() {$/;"	f	class:mongo::EncodedValueStorage
view	include/mongo/bson/oid.h	/^        ConstDataView view() const {$/;"	f	class:mongo::OID
view2ptr	include/mongo/util/net/message.h	/^            char* view2ptr() {$/;"	f	class:mongo::MSGHEADER::View
view2ptr	include/mongo/util/net/message.h	/^            char* view2ptr() {$/;"	f	class:mongo::MsgData::View
view2ptr	include/mongo/util/net/message.h	/^            const char* view2ptr() const {$/;"	f	class:mongo::MSGHEADER::ConstView
view2ptr	include/mongo/util/net/message.h	/^            const char* view2ptr() const {$/;"	f	class:mongo::MsgData::ConstView
view_type	include/mongo/base/data_cursor.h	/^        typedef ConstDataView view_type;$/;"	t	class:mongo::ConstDataCursor
view_type	include/mongo/base/data_cursor.h	/^        typedef DataView view_type;$/;"	t	class:mongo::DataCursor
view_type	include/mongo/util/net/message.h	/^            typedef ConstDataView view_type;$/;"	t	class:mongo::MSGHEADER::ConstView
view_type	include/mongo/util/net/message.h	/^            typedef DataView view_type;$/;"	t	class:mongo::MSGHEADER::View
wait	SemaphoreObejct.h	/^        void wait() { sem_wait(&_sema); }$/;"	f	class:Thread::SemaphoreObejct
wasError	include/mongo/client/dbclientcursor.h	/^        bool wasError;$/;"	m	class:mongo::DBClientCursor
wassert	include/mongo/client/redef_macros.h	53;"	d
wassert	include/mongo/client/redef_macros.h	54;"	d
wassert	include/mongo/client/undef_macros.h	37;"	d
wassert	include/mongo/util/assert_util.h	267;"	d
what	Thread.h	/^        virtual const char *what() const throw() {$/;"	f	class:Thread::ThreadException
what	include/mongo/util/assert_util.h	/^        virtual const char* what() const throw() { return _ei.msg.c_str(); }$/;"	f	class:mongo::DBException
what	jsoncpp.cpp	/^char const* Exception::what() const throw()$/;"	f	class:Json::Exception
where	include/mongo/client/dbclientinterface.h	/^        Query& where(const std::string &jscode) { return where(jscode, BSONObj()); }$/;"	f	class:mongo::Query
write	BasicSocket.cpp	/^SignedSize Network::BasicSocket::write(void *buf, size_t buf_len)$/;"	f	class:Network::BasicSocket
write	include/mongo/bson/util/builder.h	/^        void write( const char* buf, int len) { memcpy( _buf.grow( len ) , buf , len ); }$/;"	f	class:mongo::StringBuilderImpl
write	jsoncpp.cpp	/^int BuiltStyledStreamWriter::write(Value const& root, std::ostream* sout)$/;"	f	class:Json::BuiltStyledStreamWriter
write	jsoncpp.cpp	/^std::string FastWriter::write(const Value& root) {$/;"	f	class:Json::FastWriter
write	jsoncpp.cpp	/^std::string StyledWriter::write(const Value& root) {$/;"	f	class:Json::StyledWriter
write	jsoncpp.cpp	/^void StyledStreamWriter::write(std::ostream& out, const Value& root) {$/;"	f	class:Json::StyledStreamWriter
writeArrayValue	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeArrayValue(Value const& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
writeArrayValue	jsoncpp.cpp	/^void StyledStreamWriter::writeArrayValue(const Value& value) {$/;"	f	class:Json::StyledStreamWriter
writeArrayValue	jsoncpp.cpp	/^void StyledWriter::writeArrayValue(const Value& value) {$/;"	f	class:Json::StyledWriter
writeBE	include/mongo/base/data_view.h	/^        DataView& writeBE(const T& value, std::size_t offset = 0) {$/;"	f	class:mongo::DataView
writeBEAndAdvance	include/mongo/base/data_cursor.h	/^        DataCursor& writeBEAndAdvance(const T& value) {$/;"	f	class:mongo::DataCursor
writeCommentAfterValueOnSameLine	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeCommentAfterValueOnSameLine(Value const& root) {$/;"	f	class:Json::BuiltStyledStreamWriter
writeCommentAfterValueOnSameLine	jsoncpp.cpp	/^void StyledStreamWriter::writeCommentAfterValueOnSameLine(const Value& root) {$/;"	f	class:Json::StyledStreamWriter
writeCommentAfterValueOnSameLine	jsoncpp.cpp	/^void StyledWriter::writeCommentAfterValueOnSameLine(const Value& root) {$/;"	f	class:Json::StyledWriter
writeCommentBeforeValue	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeCommentBeforeValue(Value const& root) {$/;"	f	class:Json::BuiltStyledStreamWriter
writeCommentBeforeValue	jsoncpp.cpp	/^void StyledStreamWriter::writeCommentBeforeValue(const Value& root) {$/;"	f	class:Json::StyledStreamWriter
writeCommentBeforeValue	jsoncpp.cpp	/^void StyledWriter::writeCommentBeforeValue(const Value& root) {$/;"	f	class:Json::StyledWriter
writeIndent	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeIndent() {$/;"	f	class:Json::BuiltStyledStreamWriter
writeIndent	jsoncpp.cpp	/^void StyledStreamWriter::writeIndent() {$/;"	f	class:Json::StyledStreamWriter
writeIndent	jsoncpp.cpp	/^void StyledWriter::writeIndent() {$/;"	f	class:Json::StyledWriter
writeLE	include/mongo/base/data_view.h	/^        DataView& writeLE(const T& value, std::size_t offset = 0) {$/;"	f	class:mongo::DataView
writeLEAndAdvance	include/mongo/base/data_cursor.h	/^        DataCursor& writeLEAndAdvance(const T& value) {$/;"	f	class:mongo::DataCursor
writeNative	include/mongo/base/data_view.h	/^        DataView& writeNative(const T& value, std::size_t offset = 0) {$/;"	f	class:mongo::DataView
writeNativeAndAdvance	include/mongo/base/data_cursor.h	/^        DataCursor& writeNativeAndAdvance(const T& value) {$/;"	f	class:mongo::DataCursor
writeString	jsoncpp.cpp	/^std::string writeString(StreamWriter::Factory const& builder, Value const& root) {$/;"	f	namespace:Json
writeValue	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeValue(Value const& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
writeValue	jsoncpp.cpp	/^void FastWriter::writeValue(const Value& value) {$/;"	f	class:Json::FastWriter
writeValue	jsoncpp.cpp	/^void StyledStreamWriter::writeValue(const Value& value) {$/;"	f	class:Json::StyledStreamWriter
writeValue	jsoncpp.cpp	/^void StyledWriter::writeValue(const Value& value) {$/;"	f	class:Json::StyledWriter
writeWithIndent	jsoncpp.cpp	/^void BuiltStyledStreamWriter::writeWithIndent(std::string const& value) {$/;"	f	class:Json::BuiltStyledStreamWriter
writeWithIndent	jsoncpp.cpp	/^void StyledStreamWriter::writeWithIndent(const std::string& value) {$/;"	f	class:Json::StyledStreamWriter
writeWithIndent	jsoncpp.cpp	/^void StyledWriter::writeWithIndent(const std::string& value) {$/;"	f	class:Json::StyledWriter
yamlCompatiblityEnabled_	json.h	/^  bool yamlCompatiblityEnabled_;$/;"	m	class:Json::FastWriter
~AbstractMessagingPort	include/mongo/util/net/message_port.h	/^        virtual ~AbstractMessagingPort() { }$/;"	f	class:mongo::AbstractMessagingPort
~Appender	include/mongo/logger/appender.h	/^        virtual ~Appender() {}$/;"	f	class:mongo::logger::Appender
~AssertionException	include/mongo/util/assert_util.h	/^        virtual ~AssertionException() throw() { }$/;"	f	class:mongo::AssertionException
~BSONIteratorSorted	include/mongo/bson/bsonobjiterator.h	/^        ~BSONIteratorSorted() {$/;"	f	class:mongo::BSONIteratorSorted
~BSONObjBuilder	include/mongo/bson/bsonobjbuilder.h	/^        ~BSONObjBuilder() {$/;"	f	class:mongo::BSONObjBuilder
~BSONSizeTracker	include/mongo/bson/bsonmisc.h	/^        ~BSONSizeTracker() {$/;"	f	class:mongo::BSONSizeTracker
~CZString	jsoncpp.cpp	/^Value::CZString::~CZString() {$/;"	f	class:Json::Value::CZString
~CharReader	json.h	/^  virtual ~CharReader() {}$/;"	f	class:Json::CharReader
~CharReaderBuilder	jsoncpp.cpp	/^CharReaderBuilder::~CharReaderBuilder()$/;"	f	class:Json::CharReaderBuilder
~CommentInfo	jsoncpp.cpp	/^Value::CommentInfo::~CommentInfo() {$/;"	f	class:Json::Value::CommentInfo
~ConnectionHook	include/mongo/client/dbclientinterface.h	/^            virtual ~ConnectionHook(){}$/;"	f	class:mongo::ConnectionString::ConnectionHook
~Coordinates	include/mongo/geo/coordinates.h	/^        virtual ~Coordinates() {}$/;"	f	class:mongo::geo::Coordinates
~DBClientConnection	include/mongo/client/dbclientinterface.h	/^        virtual ~DBClientConnection() {$/;"	f	class:mongo::DBClientConnection
~DBClientCursorInterface	include/mongo/client/dbclientcursor.h	/^        virtual ~DBClientCursorInterface() {}$/;"	f	class:mongo::DBClientCursorInterface
~DBClientInterface	include/mongo/client/dbclientinterface.h	/^        virtual ~DBClientInterface() { }$/;"	f	class:mongo::DBClientInterface
~DBConnector	include/mongo/client/dbclientinterface.h	/^        virtual ~DBConnector() {}$/;"	f	class:mongo::DBConnector
~DBException	include/mongo/util/assert_util.h	/^        virtual ~DBException() throw() { }$/;"	f	class:mongo::DBException
~Exception	jsoncpp.cpp	/^Exception::~Exception() throw()$/;"	f	class:Json::Exception
~Factory	json.h	/^    virtual ~Factory() {}$/;"	f	class:Json::CharReader::Factory
~Factory	jsoncpp.cpp	/^StreamWriter::Factory::~Factory()$/;"	f	class:Json::StreamWriter::Factory
~FastWriter	json.h	/^  virtual ~FastWriter() {}$/;"	f	class:Json::FastWriter
~GeoObj	include/mongo/geo/geoobj.h	/^        virtual ~GeoObj() {}$/;"	f	class:mongo::geo::GeoObj
~GeometryCollection	include/mongo/geo/geometrycollection.h	/^    GeometryCollection<TCoordinates>::~GeometryCollection() {$/;"	f	class:mongo::geo::GeometryCollection
~Grading	Grading.h	/^    ~Grading(){ delete _compiler; }$/;"	f	class:Grading
~InetSocket	InetSocket.h	/^        virtual ~InetSocket() {}$/;"	f	class:Network::InetSocket
~Judge	Judge.cpp	/^Judge::~Judge()$/;"	f	class:Judge
~JudgeServer	JudgeServer.h	/^    ~JudgeServer() {}$/;"	f	class:JudgeServer
~Message	include/mongo/util/net/message.h	/^        ~Message() {$/;"	f	class:mongo::Message
~SemaphoreObejct	SemaphoreObejct.h	/^        ~SemaphoreObejct() {close();}$/;"	f	class:Thread::SemaphoreObejct
~SocketException	include/mongo/util/net/sock.h	/^        virtual ~SocketException() throw() {}$/;"	f	class:mongo::SocketException
~Status	include/mongo/base/status-inl.h	/^    inline Status::~Status() {$/;"	f	class:mongo::Status
~StreamWriter	jsoncpp.cpp	/^StreamWriter::~StreamWriter()$/;"	f	class:Json::StreamWriter
~StreamWriterBuilder	jsoncpp.cpp	/^StreamWriterBuilder::~StreamWriterBuilder()$/;"	f	class:Json::StreamWriterBuilder
~StyledStreamWriter	json.h	/^  ~StyledStreamWriter() {}$/;"	f	class:Json::StyledStreamWriter
~StyledWriter	json.h	/^  virtual ~StyledWriter() {}$/;"	f	class:Json::StyledWriter
~Thread	Thread.h	/^        ~Thread() {_threads.erase(_id);}$/;"	f	class:Thread::Thread
~ThreadException	Thread.h	/^        virtual ~ThreadException(){}$/;"	f	class:Thread::ThreadException
~Value	jsoncpp.cpp	/^Value::~Value() {$/;"	f	class:Json::Value
~Writer	jsoncpp.cpp	/^Writer::~Writer() {}$/;"	f	class:Json::Writer
~_BufBuilder	include/mongo/bson/util/builder.h	/^        ~_BufBuilder() { kill(); }$/;"	f	class:mongo::_BufBuilder
